{
    "typeName": "TF::FortiOS::ApplicationGroup",
    "description": "Configure firewall application groups.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-ApplicationGroup/docs/README.md",
    "definitions": {
        "ApplicationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Application IDs."
                }
            },
            "required": []
        },
        "CategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Category IDs."
                }
            },
            "required": []
        },
        "RiskDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Level": {
                    "type": "number",
                    "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical)."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Behavior": {
            "type": "string",
            "description": "Application behavior filter."
        },
        "Comment": {
            "type": "string",
            "description": "Comment."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Application group name."
        },
        "Popularity": {
            "type": "string",
            "description": "Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`."
        },
        "Protocols": {
            "type": "string",
            "description": "Application protocol filter."
        },
        "Technology": {
            "type": "string",
            "description": "Application technology filter."
        },
        "Type": {
            "type": "string",
            "description": "Application group type."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Vendor": {
            "type": "string",
            "description": "Application vendor filter."
        },
        "Application": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ApplicationDefinition"
            }
        },
        "Category": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CategoryDefinition"
            }
        },
        "Risk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RiskDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}