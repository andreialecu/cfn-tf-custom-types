{
    "typeName": "TF::FortiOS::CredentialstoreDomaincontroller",
    "description": "Define known domain controller servers. Applies to FortiOS Version `>= 6.4.0`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-CredentialstoreDomaincontroller/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DomainName": {
            "type": "string",
            "description": "Fully qualified domain name (FQDN)."
        },
        "Hostname": {
            "type": "string",
            "description": "Hostname of the server to connect to."
        },
        "Id": {
            "type": "string"
        },
        "Ip": {
            "type": "string",
            "description": "IPv4 server address."
        },
        "Ip6": {
            "type": "string",
            "description": "IPv6 server address."
        },
        "Password": {
            "type": "string",
            "description": "Password for specified username."
        },
        "Port": {
            "type": "number",
            "description": "Port number of service. Port number 0 indicates automatic discovery."
        },
        "ServerName": {
            "type": "string",
            "description": "Name of the server to connect to."
        },
        "Username": {
            "type": "string",
            "description": "User name to sign in with. Must have proper permissions for service."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Password"
    ]
}