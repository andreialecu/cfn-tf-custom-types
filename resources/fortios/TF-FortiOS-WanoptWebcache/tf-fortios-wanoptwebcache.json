{
    "typeName": "TF::FortiOS::WanoptWebcache",
    "description": "Configure global Web cache settings.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WanoptWebcache/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AlwaysRevalidate": {
            "type": "string",
            "description": "Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`."
        },
        "CacheByDefault": {
            "type": "string",
            "description": "Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`."
        },
        "CacheCookie": {
            "type": "string",
            "description": "Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`."
        },
        "CacheExpired": {
            "type": "string",
            "description": "Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`."
        },
        "DefaultTtl": {
            "type": "number",
            "description": "Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server."
        },
        "External": {
            "type": "string",
            "description": "Enable/disable external Web caching. Valid values: `enable`, `disable`."
        },
        "FreshFactor": {
            "type": "number",
            "description": "Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur."
        },
        "HostValidate": {
            "type": "string",
            "description": "Enable/disable validating \"Host:\" with original server IP. Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "IgnoreConditional": {
            "type": "string",
            "description": "Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`."
        },
        "IgnoreIeReload": {
            "type": "string",
            "description": "Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`."
        },
        "IgnoreIms": {
            "type": "string",
            "description": "Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`."
        },
        "IgnorePnc": {
            "type": "string",
            "description": "Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`."
        },
        "MaxObjectSize": {
            "type": "number",
            "description": "Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache."
        },
        "MaxTtl": {
            "type": "number",
            "description": "Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years))."
        },
        "MinTtl": {
            "type": "number",
            "description": "Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years))."
        },
        "NegRespTime": {
            "type": "number",
            "description": "Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached)."
        },
        "RevalPnc": {
            "type": "string",
            "description": "Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}