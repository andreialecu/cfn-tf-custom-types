{
    "typeName": "TF::FortiOS::WirelesscontrollerIntercontroller",
    "description": "Configure inter wireless controller operation.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WirelesscontrollerIntercontroller/docs/README.md",
    "definitions": {
        "InterControllerPeerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "ID."
                },
                "PeerIp": {
                    "type": "string",
                    "description": "Peer wireless controller's IP address."
                },
                "PeerPort": {
                    "type": "number",
                    "description": "Port used by the wireless controller's for inter-controller communications (1024 - 49150, default = 5246)."
                },
                "PeerPriority": {
                    "type": "string",
                    "description": "Peer wireless controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "FastFailoverMax": {
            "type": "number",
            "description": "Maximum number of retransmissions for fast failover HA messages between peer wireless controllers (3 - 64, default = 10)."
        },
        "FastFailoverWait": {
            "type": "number",
            "description": "Minimum wait time before an AP transitions from secondary controller to primary controller (10 - 86400 sec, default = 10)."
        },
        "Id": {
            "type": "string"
        },
        "InterControllerKey": {
            "type": "string",
            "description": "Secret key for inter-controller communications."
        },
        "InterControllerMode": {
            "type": "string",
            "description": "Configure inter-controller mode (disable, l2-roaming, 1+1, default = disable). Valid values: `disable`, `l2-roaming`, `1+1`."
        },
        "InterControllerPri": {
            "type": "string",
            "description": "Configure inter-controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "InterControllerPeer": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/InterControllerPeerDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/InterControllerKey"
    ]
}