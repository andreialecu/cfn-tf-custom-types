{
    "typeName": "TF::FortiOS::SystemPppoeinterface",
    "description": "Configure the PPPoE interfaces.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SystemPppoeinterface/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AcName": {
            "type": "string",
            "description": "PPPoE AC name."
        },
        "AuthType": {
            "type": "string",
            "description": "PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`."
        },
        "Device": {
            "type": "string",
            "description": "Name for the physical interface."
        },
        "DialOnDemand": {
            "type": "string",
            "description": "Enable/disable dial on demand to dial the PPPoE interface when packets are routed to the PPPoE interface. Valid values: `enable`, `disable`."
        },
        "DiscRetryTimeout": {
            "type": "number",
            "description": "PPPoE discovery init timeout value in (0-4294967295 sec)."
        },
        "Id": {
            "type": "string"
        },
        "IdleTimeout": {
            "type": "number",
            "description": "PPPoE auto disconnect after idle timeout (0-4294967295 sec)."
        },
        "Ipunnumbered": {
            "type": "string",
            "description": "PPPoE unnumbered IP."
        },
        "Ipv6": {
            "type": "string",
            "description": "Enable/disable IPv6 Control Protocol (IPv6CP). Valid values: `enable`, `disable`."
        },
        "LcpEchoInterval": {
            "type": "number",
            "description": "PPPoE LCP echo interval in (0-4294967295 sec, default = 5)."
        },
        "LcpMaxEchoFails": {
            "type": "number",
            "description": "Maximum missed LCP echo messages before disconnect (0-4294967295, default = 3)."
        },
        "Name": {
            "type": "string",
            "description": "Name of the PPPoE interface."
        },
        "PadtRetryTimeout": {
            "type": "number",
            "description": "PPPoE terminate timeout value in (0-4294967295 sec)."
        },
        "Password": {
            "type": "string",
            "description": "Enter the password."
        },
        "PppoeUnnumberedNegotiate": {
            "type": "string",
            "description": "Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`."
        },
        "ServiceName": {
            "type": "string",
            "description": "PPPoE service name."
        },
        "Username": {
            "type": "string",
            "description": "User name."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Device"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Password"
    ]
}