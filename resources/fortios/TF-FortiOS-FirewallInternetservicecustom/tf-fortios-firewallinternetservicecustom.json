{
    "typeName": "TF::FortiOS::FirewallInternetservicecustom",
    "description": "Configure custom Internet Services.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallInternetservicecustom/docs/README.md",
    "definitions": {
        "EntryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Entry ID(1-255)."
                },
                "Protocol": {
                    "type": "number",
                    "description": "Integer value for the protocol type as defined by IANA (0 - 255)."
                },
                "Dst": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DstDefinition"
                    }
                },
                "PortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PortRangeDefinition"
                    }
                }
            },
            "required": []
        },
        "DstDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Select the destination address or address group object from available options."
                }
            },
            "required": []
        },
        "PortRangeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndPort": {
                    "type": "number",
                    "description": "Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535)."
                },
                "Id": {
                    "type": "number",
                    "description": "Custom entry port range ID."
                },
                "StartPort": {
                    "type": "number",
                    "description": "Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535)."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Comment": {
            "type": "string",
            "description": "Comment."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Internet Service name."
        },
        "Reputation": {
            "type": "number",
            "description": "Reputation level of the custom Internet Service."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Entry": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EntryDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}