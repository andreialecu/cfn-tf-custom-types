{
    "typeName": "TF::FortiOS::FirewallInterfacepolicy6",
    "description": "Configure IPv6 interface policies.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallInterfacepolicy6/docs/README.md",
    "definitions": {
        "Dstaddr6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "Service6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "Srcaddr6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AddressType": {
            "type": "string",
            "description": "Policy address type (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`."
        },
        "ApplicationList": {
            "type": "string",
            "description": "Application list name."
        },
        "ApplicationListStatus": {
            "type": "string",
            "description": "Enable/disable application control. Valid values: `enable`, `disable`."
        },
        "AvProfile": {
            "type": "string",
            "description": "Antivirus profile."
        },
        "AvProfileStatus": {
            "type": "string",
            "description": "Enable/disable antivirus. Valid values: `enable`, `disable`."
        },
        "Comments": {
            "type": "string",
            "description": "Comments."
        },
        "DlpSensor": {
            "type": "string",
            "description": "DLP sensor name."
        },
        "DlpSensorStatus": {
            "type": "string",
            "description": "Enable/disable DLP. Valid values: `enable`, `disable`."
        },
        "Dsri": {
            "type": "string",
            "description": "Enable/disable DSRI. Valid values: `enable`, `disable`."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "EmailfilterProfile": {
            "type": "string",
            "description": "Email filter profile."
        },
        "EmailfilterProfileStatus": {
            "type": "string",
            "description": "Enable/disable email filter. Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "Interface": {
            "type": "string",
            "description": "Monitored interface name from available interfaces."
        },
        "IpsSensor": {
            "type": "string",
            "description": "IPS sensor name."
        },
        "IpsSensorStatus": {
            "type": "string",
            "description": "Enable/disable IPS. Valid values: `enable`, `disable`."
        },
        "Label": {
            "type": "string",
            "description": "Label."
        },
        "Logtraffic": {
            "type": "string",
            "description": "Logging type to be used in this policy (Options: all | utm | disable, Default: utm). Valid values: `all`, `utm`, `disable`."
        },
        "Policyid": {
            "type": "number",
            "description": "Policy ID."
        },
        "ScanBotnetConnections": {
            "type": "string",
            "description": "Enable/disable scanning for connections to Botnet servers. Valid values: `disable`, `block`, `monitor`."
        },
        "SpamfilterProfile": {
            "type": "string",
            "description": "Antispam profile."
        },
        "SpamfilterProfileStatus": {
            "type": "string",
            "description": "Enable/disable antispam. Valid values: `enable`, `disable`."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable this policy. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "WebfilterProfile": {
            "type": "string",
            "description": "Web filter profile."
        },
        "WebfilterProfileStatus": {
            "type": "string",
            "description": "Enable/disable web filtering. Valid values: `enable`, `disable`."
        },
        "Dstaddr6": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Dstaddr6Definition"
            },
            "minItems": 1
        },
        "Service6": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Service6Definition"
            }
        },
        "Srcaddr6": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Srcaddr6Definition"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Interface"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}