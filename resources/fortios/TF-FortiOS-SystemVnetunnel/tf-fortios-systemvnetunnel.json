{
    "typeName": "TF::FortiOS::SystemVnetunnel",
    "description": "Configure virtual network enabler tunnel. Applies to FortiOS Version `>= 6.4.2`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SystemVnetunnel/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BmrHostname": {
            "type": "string",
            "description": "BMR hostname."
        },
        "Br": {
            "type": "string",
            "description": "Border relay IPv6 address."
        },
        "Id": {
            "type": "string"
        },
        "Interface": {
            "type": "string",
            "description": "Interface name."
        },
        "Ipv4Address": {
            "type": "string",
            "description": "Tunnel IPv4 address and netmask."
        },
        "Mode": {
            "type": "string",
            "description": "VNE tunnel mode. Valid values: `map-e`, `fixed-ip`."
        },
        "SslCertificate": {
            "type": "string",
            "description": "Name of local certificate for SSL connections."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable VNE tunnel. Valid values: `enable`, `disable`."
        },
        "UpdateUrl": {
            "type": "string",
            "description": "URL of provisioning server."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/BmrHostname"
    ]
}