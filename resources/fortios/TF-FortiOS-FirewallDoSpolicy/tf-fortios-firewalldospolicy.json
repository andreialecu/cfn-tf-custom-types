{
    "typeName": "TF::FortiOS::FirewallDoSpolicy",
    "description": "Configure IPv4 DoS policies.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallDoSpolicy/docs/README.md",
    "definitions": {
        "AnomalyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "string",
                    "description": "Action taken when the threshold is reached. Valid values: `pass`, `block`."
                },
                "Log": {
                    "type": "string",
                    "description": "Enable/disable anomaly logging. Valid values: `enable`, `disable`."
                },
                "Name": {
                    "type": "string",
                    "description": "Anomaly name."
                },
                "Quarantine": {
                    "type": "string",
                    "description": "Quarantine method. Valid values: `none`, `attacker`."
                },
                "QuarantineExpiry": {
                    "type": "string",
                    "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                },
                "QuarantineLog": {
                    "type": "string",
                    "description": "Enable/disable quarantine logging. Valid values: `disable`, `enable`."
                },
                "Status": {
                    "type": "string",
                    "description": "Enable/disable this anomaly. Valid values: `disable`, `enable`."
                },
                "Threshold": {
                    "type": "number",
                    "description": "Anomaly threshold. Number of detected instances per minute that triggers the anomaly action."
                },
                "Thresholddefault": {
                    "type": "number",
                    "description": "Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it."
                }
            },
            "required": []
        },
        "DstaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "ServiceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Service name."
                }
            },
            "required": []
        },
        "SrcaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Service name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Comments": {
            "type": "string",
            "description": "Comment."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "Interface": {
            "type": "string",
            "description": "Incoming interface name from available interfaces."
        },
        "Name": {
            "type": "string",
            "description": "Policy name."
        },
        "Policyid": {
            "type": "number",
            "description": "Policy ID."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable this policy. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Anomaly": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AnomalyDefinition"
            }
        },
        "Dstaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DstaddrDefinition"
            },
            "minItems": 1
        },
        "Service": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceDefinition"
            }
        },
        "Srcaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcaddrDefinition"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Interface"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}