{
    "typeName": "TF::FortiOS::LogThreatweight",
    "description": "Configure threat weight settings.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-LogThreatweight/docs/README.md",
    "definitions": {
        "ApplicationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Category": {
                    "type": "number",
                    "description": "Application category."
                },
                "Id": {
                    "type": "number",
                    "description": "Entry ID."
                },
                "Level": {
                    "type": "string",
                    "description": "Threat weight score for Application events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                }
            },
            "required": []
        },
        "GeolocationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Country": {
                    "type": "string",
                    "description": "Country code."
                },
                "Id": {
                    "type": "number",
                    "description": "Entry ID."
                },
                "Level": {
                    "type": "string",
                    "description": "Threat weight score for Geolocation-based events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                }
            },
            "required": []
        },
        "IpsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CriticalSeverity": {
                    "type": "string",
                    "description": "Threat weight score for IPS critical severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "HighSeverity": {
                    "type": "string",
                    "description": "Threat weight score for IPS high severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "InfoSeverity": {
                    "type": "string",
                    "description": "Threat weight score for IPS info severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "LowSeverity": {
                    "type": "string",
                    "description": "Threat weight score for IPS low severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "MediumSeverity": {
                    "type": "string",
                    "description": "Threat weight score for IPS medium severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                }
            },
            "required": []
        },
        "LevelDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Critical": {
                    "type": "number",
                    "description": "Critical level score value (1 - 100)."
                },
                "High": {
                    "type": "number",
                    "description": "High level score value (1 - 100)."
                },
                "Low": {
                    "type": "number",
                    "description": "Low level score value (1 - 100)."
                },
                "Medium": {
                    "type": "number",
                    "description": "Medium level score value (1 - 100)."
                }
            },
            "required": []
        },
        "MalwareDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BotnetConnection": {
                    "type": "string",
                    "description": "Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "CommandBlocked": {
                    "type": "string",
                    "description": "Threat weight score for blocked command detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "ContentDisarm": {
                    "type": "string",
                    "description": "Threat weight score for virus (content disarm) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "FileBlocked": {
                    "type": "string",
                    "description": "Threat weight score for blocked file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "FsaHighRisk": {
                    "type": "string",
                    "description": "Threat weight score for FortiSandbox high risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "FsaMalicious": {
                    "type": "string",
                    "description": "Threat weight score for FortiSandbox malicious malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "FsaMediumRisk": {
                    "type": "string",
                    "description": "Threat weight score for FortiSandbox medium risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "MalwareList": {
                    "type": "string",
                    "description": "Threat weight score for virus (malware list) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "Mimefragmented": {
                    "type": "string",
                    "description": "Threat weight score for mimefragmented detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "Oversized": {
                    "type": "string",
                    "description": "Threat weight score for oversized file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "SwitchProto": {
                    "type": "string",
                    "description": "Threat weight score for switch proto detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "VirusFileTypeExecutable": {
                    "type": "string",
                    "description": "Threat weight score for virus (filetype executable) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "VirusInfected": {
                    "type": "string",
                    "description": "Threat weight score for virus (infected) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "VirusOutbreakPrevention": {
                    "type": "string",
                    "description": "Threat weight score for virus (outbreak prevention) event. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                },
                "VirusScanError": {
                    "type": "string",
                    "description": "Threat weight score for virus (scan error) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                }
            },
            "required": []
        },
        "WebDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Category": {
                    "type": "number",
                    "description": "Threat weight score for web category filtering matches."
                },
                "Id": {
                    "type": "number",
                    "description": "Entry ID."
                },
                "Level": {
                    "type": "string",
                    "description": "Threat weight score for web category filtering matches. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BlockedConnection": {
            "type": "string",
            "description": "Threat weight score for blocked connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
        },
        "BotnetConnectionDetected": {
            "type": "string",
            "description": "Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "FailedConnection": {
            "type": "string",
            "description": "Threat weight score for failed connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
        },
        "Id": {
            "type": "string"
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable the threat weight feature. Valid values: `enable`, `disable`."
        },
        "UrlBlockDetected": {
            "type": "string",
            "description": "Threat weight score for URL blocking. Valid values: `disable`, `low`, `medium`, `high`, `critical`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Application": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ApplicationDefinition"
            }
        },
        "Geolocation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/GeolocationDefinition"
            }
        },
        "Ips": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpsDefinition"
            },
            "maxItems": 1
        },
        "Level": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LevelDefinition"
            },
            "maxItems": 1
        },
        "Malware": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MalwareDefinition"
            },
            "maxItems": 1
        },
        "Web": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WebDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}