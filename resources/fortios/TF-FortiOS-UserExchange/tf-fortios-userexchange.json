{
    "typeName": "TF::FortiOS::UserExchange",
    "description": "Configure MS Exchange server entries.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-UserExchange/docs/README.md",
    "definitions": {
        "KdcIpDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Ipv4": {
                    "type": "string",
                    "description": "KDC IPv4 addresses for Kerberos authentication."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthLevel": {
            "type": "string",
            "description": "Authentication security level used for the RPC protocol layer. Valid values: `connect`, `call`, `packet`, `integrity`, `privacy`."
        },
        "AuthType": {
            "type": "string",
            "description": "Authentication security type used for the RPC protocol layer. Valid values: `spnego`, `ntlm`, `kerberos`."
        },
        "AutoDiscoverKdc": {
            "type": "string",
            "description": "Enable/disable automatic discovery of KDC IP addresses. Valid values: `enable`, `disable`."
        },
        "ConnectProtocol": {
            "type": "string",
            "description": "Connection protocol used to connect to MS Exchange service. Valid values: `rpc-over-tcp`, `rpc-over-http`, `rpc-over-https`."
        },
        "DomainName": {
            "type": "string",
            "description": "MS Exchange server fully qualified domain name."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "HttpAuthType": {
            "type": "string",
            "description": "Authentication security type used for the HTTP transport. Valid values: `basic`, `ntlm`."
        },
        "Id": {
            "type": "string"
        },
        "Ip": {
            "type": "string",
            "description": "Server IPv4 address."
        },
        "Name": {
            "type": "string",
            "description": "MS Exchange server entry name."
        },
        "Password": {
            "type": "string",
            "description": "Password for the specified username."
        },
        "ServerName": {
            "type": "string",
            "description": "MS Exchange server hostname."
        },
        "SslMinProtoVersion": {
            "type": "string",
            "description": "Minimum SSL/TLS protocol version for HTTPS transport (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`."
        },
        "Username": {
            "type": "string",
            "description": "User name used to sign in to the server. Must have proper permissions for service."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "KdcIp": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KdcIpDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Password"
    ]
}