{
    "typeName": "TF::FortiOS::ReportSetting",
    "description": "Report setting configuration.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-ReportSetting/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Fortiview": {
            "type": "string",
            "description": "Enable/disable historical FortiView. Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "PdfReport": {
            "type": "string",
            "description": "Enable/disable PDF report. Valid values: `enable`, `disable`."
        },
        "ReportSource": {
            "type": "string",
            "description": "Report log source. Valid values: `forward-traffic`, `sniffer-traffic`, `local-deny-traffic`."
        },
        "TopN": {
            "type": "number",
            "description": "Number of items to populate (100 - 4000)."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "WebBrowsingThreshold": {
            "type": "number",
            "description": "Web browsing time calculation threshold (3 - 15 min)."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}