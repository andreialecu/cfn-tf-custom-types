{
    "typeName": "TF::FortiOS::WirelesscontrollerUtmprofile",
    "description": "Configure UTM (Unified Threat Management) profile.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WirelesscontrollerUtmprofile/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AntivirusProfile": {
            "type": "string",
            "description": "AntiVirus profile name."
        },
        "ApplicationList": {
            "type": "string",
            "description": "Application control list name."
        },
        "Comment": {
            "type": "string",
            "description": "Comment."
        },
        "Id": {
            "type": "string"
        },
        "IpsSensor": {
            "type": "string",
            "description": "IPS sensor name."
        },
        "Name": {
            "type": "string",
            "description": "UTM profile name."
        },
        "ScanBotnetConnections": {
            "type": "string",
            "description": "Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`."
        },
        "UtmLog": {
            "type": "string",
            "description": "Enable/disable UTM logging. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "WebfilterProfile": {
            "type": "string",
            "description": "WebFilter profile name."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}