{
    "typeName": "TF::FortiOS::IpsRule",
    "description": "Configure IPS rules.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-IpsRule/docs/README.md",
    "definitions": {
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "ID."
                },
                "Metaid": {
                    "type": "number",
                    "description": "Meta ID."
                },
                "Valueid": {
                    "type": "number",
                    "description": "Value ID."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "Action. Valid values: `pass`, `block`."
        },
        "Application": {
            "type": "string",
            "description": "Vulnerable applications."
        },
        "Date": {
            "type": "number",
            "description": "Date."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Group": {
            "type": "string",
            "description": "Group."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Vulnerable location."
        },
        "Log": {
            "type": "string",
            "description": "Enable/disable logging. Valid values: `disable`, `enable`."
        },
        "LogPacket": {
            "type": "string",
            "description": "Enable/disable packet logging. Valid values: `disable`, `enable`."
        },
        "Name": {
            "type": "string",
            "description": "Rule name."
        },
        "Os": {
            "type": "string",
            "description": "Vulnerable operation systems."
        },
        "Rev": {
            "type": "number",
            "description": "Revision."
        },
        "RuleId": {
            "type": "number",
            "description": "Rule ID."
        },
        "Service": {
            "type": "string",
            "description": "Vulnerable service."
        },
        "Severity": {
            "type": "string",
            "description": "Severity."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable status. Valid values: `disable`, `enable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}