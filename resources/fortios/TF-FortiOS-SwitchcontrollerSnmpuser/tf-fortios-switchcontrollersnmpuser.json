{
    "typeName": "TF::FortiOS::SwitchcontrollerSnmpuser",
    "description": "Configure FortiSwitch SNMP v3 users globally.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SwitchcontrollerSnmpuser/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthProto": {
            "type": "string",
            "description": "Authentication protocol. Valid values: `md5`, `sha`."
        },
        "AuthPwd": {
            "type": "string",
            "description": "Password for authentication protocol."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "SNMP user name."
        },
        "PrivProto": {
            "type": "string",
            "description": "Privacy (encryption) protocol. Valid values: `aes`, `des`."
        },
        "PrivPwd": {
            "type": "string",
            "description": "Password for privacy (encryption) protocol."
        },
        "Queries": {
            "type": "string",
            "description": "Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`."
        },
        "QueryPort": {
            "type": "number",
            "description": "SNMPv3 query port (default = 161)."
        },
        "SecurityLevel": {
            "type": "string",
            "description": "Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AuthPwd",
        "/properties/PrivPwd"
    ]
}