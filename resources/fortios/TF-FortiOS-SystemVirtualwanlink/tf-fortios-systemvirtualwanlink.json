{
    "typeName": "TF::FortiOS::SystemVirtualwanlink",
    "description": "Configure redundant internet connections using SD-WAN (formerly virtual WAN link). Applies to FortiOS Version `<= 6.4.0`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SystemVirtualwanlink/docs/README.md",
    "definitions": {
        "FailAlertInterfacesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Physical interface name."
                }
            },
            "required": []
        },
        "HealthCheckDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AddrMode": {
                    "type": "string",
                    "description": "Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`."
                },
                "Diffservcode": {
                    "type": "string",
                    "description": "Differentiated services code point (DSCP) in the IP header of the probe packet."
                },
                "DnsRequestDomain": {
                    "type": "string",
                    "description": "Fully qualified domain name to resolve for the DNS probe."
                },
                "Failtime": {
                    "type": "number",
                    "description": "Number of failures before server is considered lost (1 - 3600, default = 5)."
                },
                "HaPriority": {
                    "type": "number",
                    "description": "HA election priority (1 - 50)."
                },
                "HttpAgent": {
                    "type": "string",
                    "description": "String in the http-agent field in the HTTP header."
                },
                "HttpGet": {
                    "type": "string",
                    "description": "URL used to communicate with the server if the protocol if the protocol is HTTP."
                },
                "HttpMatch": {
                    "type": "string",
                    "description": "Response string expected from the server if the protocol is HTTP."
                },
                "Interval": {
                    "type": "number",
                    "description": "Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5)."
                },
                "Name": {
                    "type": "string",
                    "description": "Status check or health check name."
                },
                "PacketSize": {
                    "type": "number",
                    "description": "Packet size of a twamp test session,."
                },
                "Password": {
                    "type": "string",
                    "description": "Twamp controller password in authentication mode."
                },
                "Port": {
                    "type": "number",
                    "description": "Port number used to communicate with the server over the selected protocol."
                },
                "ProbeCount": {
                    "type": "number",
                    "description": "Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30)."
                },
                "ProbePackets": {
                    "type": "string",
                    "description": "Enable/disable transmission of probe packets. Valid values: `disable`, `enable`."
                },
                "ProbeTimeout": {
                    "type": "number",
                    "description": "Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500)."
                },
                "Protocol": {
                    "type": "string",
                    "description": "Protocol used to determine if the FortiGate can communicate with the server."
                },
                "Recoverytime": {
                    "type": "number",
                    "description": "Number of successful responses received before server is considered recovered (1 - 3600, default = 5)."
                },
                "SecurityMode": {
                    "type": "string",
                    "description": "Twamp controller security mode. Valid values: `none`, `authentication`."
                },
                "Server": {
                    "type": "string",
                    "description": "IP address or FQDN name of the server."
                },
                "SlaFailLogPeriod": {
                    "type": "number",
                    "description": "Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0)."
                },
                "SlaPassLogPeriod": {
                    "type": "number",
                    "description": "Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0)."
                },
                "SystemDns": {
                    "type": "string",
                    "description": "Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`."
                },
                "ThresholdAlertJitter": {
                    "type": "number",
                    "description": "Alert threshold for jitter (ms, default = 0)."
                },
                "ThresholdAlertLatency": {
                    "type": "number",
                    "description": "Alert threshold for latency (ms, default = 0)."
                },
                "ThresholdAlertPacketloss": {
                    "type": "number",
                    "description": "Alert threshold for packet loss (percentage, default = 0)."
                },
                "ThresholdWarningJitter": {
                    "type": "number",
                    "description": "Warning threshold for jitter (ms, default = 0)."
                },
                "ThresholdWarningLatency": {
                    "type": "number",
                    "description": "Warning threshold for latency (ms, default = 0)."
                },
                "ThresholdWarningPacketloss": {
                    "type": "number",
                    "description": "Warning threshold for packet loss (percentage, default = 0)."
                },
                "UpdateCascadeInterface": {
                    "type": "string",
                    "description": "Enable/disable update cascade interface. Valid values: `enable`, `disable`."
                },
                "UpdateStaticRoute": {
                    "type": "string",
                    "description": "Enable/disable updating the static route. Valid values: `enable`, `disable`."
                },
                "Members": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MembersDefinition"
                    }
                },
                "Sla": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SlaDefinition"
                    }
                }
            },
            "required": []
        },
        "MembersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SeqNum": {
                    "type": "number",
                    "description": "Member sequence number."
                }
            },
            "required": []
        },
        "NeighborDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HealthCheck": {
                    "type": "string",
                    "description": "SD-WAN health-check name."
                },
                "Ip": {
                    "type": "string",
                    "description": "IP address of neighbor."
                },
                "Member": {
                    "type": "number",
                    "description": "Member sequence number."
                },
                "Role": {
                    "type": "string",
                    "description": "Role of neighbor. Valid values: `standalone`, `primary`, `secondary`."
                },
                "SlaId": {
                    "type": "number",
                    "description": "SLA ID."
                }
            },
            "required": []
        },
        "ServiceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AddrMode": {
                    "type": "string",
                    "description": "Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`."
                },
                "BandwidthWeight": {
                    "type": "number",
                    "description": "Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1."
                },
                "Default": {
                    "type": "string",
                    "description": "Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`."
                },
                "DscpForward": {
                    "type": "string",
                    "description": "Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`."
                },
                "DscpForwardTag": {
                    "type": "string",
                    "description": "Forward traffic DSCP tag."
                },
                "DscpReverse": {
                    "type": "string",
                    "description": "Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`."
                },
                "DscpReverseTag": {
                    "type": "string",
                    "description": "Reverse traffic DSCP tag."
                },
                "DstNegate": {
                    "type": "string",
                    "description": "Enable/disable negation of destination address match. Valid values: `enable`, `disable`."
                },
                "EndPort": {
                    "type": "number",
                    "description": "End destination port number."
                },
                "Gateway": {
                    "type": "string",
                    "description": "Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`."
                },
                "HealthCheck": {
                    "type": "string",
                    "description": "Health check."
                },
                "HoldDownTime": {
                    "type": "number",
                    "description": "Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0)."
                },
                "Id": {
                    "type": "number",
                    "description": "Priority rule ID (1 - 4000)."
                },
                "InputDeviceNegate": {
                    "type": "string",
                    "description": "Enable/disable negation of input device match. Valid values: `enable`, `disable`."
                },
                "InternetService": {
                    "type": "string",
                    "description": "Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`."
                },
                "JitterWeight": {
                    "type": "number",
                    "description": "Coefficient of jitter in the formula of custom-profile-1."
                },
                "LatencyWeight": {
                    "type": "number",
                    "description": "Coefficient of latency in the formula of custom-profile-1."
                },
                "LinkCostFactor": {
                    "type": "string",
                    "description": "Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`."
                },
                "LinkCostThreshold": {
                    "type": "number",
                    "description": "Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10)."
                },
                "Member": {
                    "type": "number",
                    "description": "Member sequence number."
                },
                "Mode": {
                    "type": "string",
                    "description": "Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`."
                },
                "Name": {
                    "type": "string",
                    "description": "Priority rule name."
                },
                "PacketLossWeight": {
                    "type": "number",
                    "description": "Coefficient of packet-loss in the formula of custom-profile-1."
                },
                "Protocol": {
                    "type": "number",
                    "description": "Protocol number."
                },
                "QualityLink": {
                    "type": "number",
                    "description": "Quality grade."
                },
                "Role": {
                    "type": "string",
                    "description": "Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`."
                },
                "RouteTag": {
                    "type": "number",
                    "description": "IPv4 route map route-tag."
                },
                "SlaCompareMethod": {
                    "type": "string",
                    "description": "Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`."
                },
                "SrcNegate": {
                    "type": "string",
                    "description": "Enable/disable negation of source address match. Valid values: `enable`, `disable`."
                },
                "StandaloneAction": {
                    "type": "string",
                    "description": "Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`."
                },
                "StartPort": {
                    "type": "number",
                    "description": "Start destination port number."
                },
                "Status": {
                    "type": "string",
                    "description": "Enable/disable SD-WAN service. Valid values: `enable`, `disable`."
                },
                "Tos": {
                    "type": "string",
                    "description": "Type of service bit pattern."
                },
                "TosMask": {
                    "type": "string",
                    "description": "Type of service evaluated bits."
                },
                "Dst": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DstDefinition"
                    }
                },
                "Dst6": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Dst6Definition"
                    }
                },
                "Groups": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/GroupsDefinition"
                    }
                },
                "InputDevice": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InputDeviceDefinition"
                    }
                },
                "InternetServiceAppCtrl": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceAppCtrlDefinition"
                    }
                },
                "InternetServiceAppCtrlGroup": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceAppCtrlGroupDefinition"
                    }
                },
                "InternetServiceCtrl": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceCtrlDefinition"
                    }
                },
                "InternetServiceCtrlGroup": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceCtrlGroupDefinition"
                    }
                },
                "InternetServiceCustom": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceCustomDefinition"
                    }
                },
                "InternetServiceCustomGroup": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceCustomGroupDefinition"
                    }
                },
                "InternetServiceGroup": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceGroupDefinition"
                    }
                },
                "InternetServiceId": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceIdDefinition"
                    }
                },
                "InternetServiceName": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InternetServiceNameDefinition"
                    }
                },
                "PriorityMembers": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PriorityMembersDefinition"
                    }
                },
                "Sla": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SlaDefinition"
                    }
                },
                "Src": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SrcDefinition"
                    }
                },
                "Src6": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Src6Definition"
                    }
                },
                "Users": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/UsersDefinition"
                    }
                }
            },
            "required": []
        },
        "ZoneDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Zone name."
                }
            },
            "required": []
        },
        "SlaDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HealthCheck": {
                    "type": "string",
                    "description": "Virtual WAN Link health-check."
                },
                "Id": {
                    "type": "number",
                    "description": "SLA ID."
                }
            },
            "required": []
        },
        "DstDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address or address group name."
                }
            },
            "required": []
        },
        "Dst6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address6 or address6 group name."
                }
            },
            "required": []
        },
        "GroupsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Group name."
                }
            },
            "required": []
        },
        "InputDeviceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Interface name."
                }
            },
            "required": []
        },
        "InternetServiceAppCtrlDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Application control based Internet Service ID."
                }
            },
            "required": []
        },
        "InternetServiceAppCtrlGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Application control based Internet Service group name."
                }
            },
            "required": []
        },
        "InternetServiceCtrlDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Control-based Internet Service ID."
                }
            },
            "required": []
        },
        "InternetServiceCtrlGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Control-based Internet Service group name."
                }
            },
            "required": []
        },
        "InternetServiceCustomDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Custom Internet service name."
                }
            },
            "required": []
        },
        "InternetServiceCustomGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Custom Internet Service group name."
                }
            },
            "required": []
        },
        "InternetServiceGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Internet Service group name."
                }
            },
            "required": []
        },
        "InternetServiceIdDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Internet service ID."
                }
            },
            "required": []
        },
        "InternetServiceNameDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Internet service name."
                }
            },
            "required": []
        },
        "PriorityMembersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SeqNum": {
                    "type": "number",
                    "description": "Member sequence number."
                }
            },
            "required": []
        },
        "SrcDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address or address group name."
                }
            },
            "required": []
        },
        "Src6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address6 or address6 group name."
                }
            },
            "required": []
        },
        "UsersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "User name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "FailDetect": {
            "type": "string",
            "description": "Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "LoadBalanceMode": {
            "type": "string",
            "description": "Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`."
        },
        "NeighborHoldBootTime": {
            "type": "number",
            "description": "Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0)."
        },
        "NeighborHoldDown": {
            "type": "string",
            "description": "Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`."
        },
        "NeighborHoldDownTime": {
            "type": "number",
            "description": "Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0)."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable SD-WAN. Valid values: `disable`, `enable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "FailAlertInterfaces": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/FailAlertInterfacesDefinition"
            }
        },
        "HealthCheck": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HealthCheckDefinition"
            }
        },
        "Members": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MembersDefinition"
            }
        },
        "Neighbor": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NeighborDefinition"
            }
        },
        "Service": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceDefinition"
            }
        },
        "Zone": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ZoneDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/HealthCheckDefinition/Password"
    ]
}