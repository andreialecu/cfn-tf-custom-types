{
    "typeName": "TF::FortiOS::FirewallInternetservicedefinition",
    "description": "Internet Service definition.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallInternetservicedefinition/docs/README.md",
    "definitions": {
        "EntryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CategoryId": {
                    "type": "number",
                    "description": "Internet Service category ID."
                },
                "Name": {
                    "type": "string",
                    "description": "Internet Service name."
                },
                "Port": {
                    "type": "number",
                    "description": "Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined."
                },
                "Protocol": {
                    "type": "number",
                    "description": "Integer value for the protocol type as defined by IANA (0 - 255)."
                },
                "SeqNum": {
                    "type": "number",
                    "description": "Entry sequence number."
                },
                "PortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PortRangeDefinition"
                    }
                }
            },
            "required": []
        },
        "PortRangeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndPort": {
                    "type": "number",
                    "description": "Ending TCP/UDP/SCTP destination port (1 to 65535)."
                },
                "Id": {
                    "type": "number",
                    "description": "Custom entry port range ID."
                },
                "StartPort": {
                    "type": "number",
                    "description": "Starting TCP/UDP/SCTP destination port (1 to 65535)."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Fosid": {
            "type": "number",
            "description": "Internet Service application list ID."
        },
        "Id": {
            "type": "string"
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Entry": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EntryDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}