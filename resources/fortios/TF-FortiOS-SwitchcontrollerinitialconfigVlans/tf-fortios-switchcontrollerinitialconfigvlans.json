{
    "typeName": "TF::FortiOS::SwitchcontrollerinitialconfigVlans",
    "description": "Configure initial template for auto-generated VLAN interfaces. Applies to FortiOS Version `>= 6.4.0`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SwitchcontrollerinitialconfigVlans/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DefaultVlan": {
            "type": "string",
            "description": "Default VLAN (native) assigned to all switch ports upon discovery."
        },
        "Id": {
            "type": "string"
        },
        "Nac": {
            "type": "string",
            "description": "VLAN for NAC onboarding devices."
        },
        "Quarantine": {
            "type": "string",
            "description": "VLAN for quarantined traffic."
        },
        "Rspan": {
            "type": "string",
            "description": "VLAN for RSPAN/ERSPAN mirrored traffic."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Video": {
            "type": "string",
            "description": "VLAN dedicated for video devices."
        },
        "Voice": {
            "type": "string",
            "description": "VLAN dedicated for voice devices."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}