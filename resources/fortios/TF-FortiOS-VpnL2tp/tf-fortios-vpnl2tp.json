{
    "typeName": "TF::FortiOS::VpnL2tp",
    "description": "Configure L2TP.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-VpnL2tp/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Compress": {
            "type": "string",
            "description": "Enable/disable data compression. Valid values: `enable`, `disable`."
        },
        "Eip": {
            "type": "string",
            "description": "End IP."
        },
        "EnforceIpsec": {
            "type": "string",
            "description": "Enable/disable IPsec enforcement. Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "LcpEchoInterval": {
            "type": "number",
            "description": "Time in seconds between PPPoE Link Control Protocol (LCP) echo requests."
        },
        "LcpMaxEchoFails": {
            "type": "number",
            "description": "Maximum number of missed LCP echo messages before disconnect."
        },
        "Sip": {
            "type": "string",
            "description": "Start IP."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable FortiGate as a L2TP gateway. Valid values: `enable`, `disable`."
        },
        "Usrgrp": {
            "type": "string",
            "description": "User group."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Status"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}