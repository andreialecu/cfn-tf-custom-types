{
    "typeName": "TF::FortiOS::JsonGenericApi",
    "description": "FortiAPI Generic Interface.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-JsonGenericApi/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ForceRecreate": {
            "type": "string",
            "description": "The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update."
        },
        "Id": {
            "type": "string"
        },
        "Json": {
            "type": "string",
            "description": "Body data in JSON format."
        },
        "Method": {
            "type": "string",
            "description": "HTTP method."
        },
        "Path": {
            "type": "string",
            "description": "FortiAPI URL path."
        },
        "Response": {
            "type": "string"
        },
        "Specialparams": {
            "type": "string",
            "description": "URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path."
        },
        "Vdomparam": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "Method",
        "Path"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Response"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}