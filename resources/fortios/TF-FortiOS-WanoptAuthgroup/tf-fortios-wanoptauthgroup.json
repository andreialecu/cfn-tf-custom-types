{
    "typeName": "TF::FortiOS::WanoptAuthgroup",
    "description": "Configure WAN optimization authentication groups.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WanoptAuthgroup/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthMethod": {
            "type": "string",
            "description": "Select certificate or pre-shared key authentication for this authentication group. Valid values: `cert`, `psk`."
        },
        "Cert": {
            "type": "string",
            "description": "Name of certificate to identify this peer."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Auth-group name."
        },
        "Peer": {
            "type": "string",
            "description": "If peer-accept is set to one, select the name of one peer to add to this authentication group. The peer must have added with the wanopt peer command."
        },
        "PeerAccept": {
            "type": "string",
            "description": "Determine if this auth group accepts, any peer, a list of defined peers, or just one peer. Valid values: `any`, `defined`, `one`."
        },
        "Psk": {
            "type": "string",
            "description": "Pre-shared key used by the peers in this authentication group."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Cert"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Psk"
    ]
}