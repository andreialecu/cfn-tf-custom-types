{
    "typeName": "TF::FortiOS::FirewallMulticastpolicy6",
    "description": "Configure IPv6 multicast NAT policies.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallMulticastpolicy6/docs/README.md",
    "definitions": {
        "DstaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "SrcaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "Accept or deny traffic matching the policy. Valid values: `accept`, `deny`."
        },
        "AutoAsicOffload": {
            "type": "string",
            "description": "Enable/disable offloading policy traffic for hardware acceleration. Valid values: `enable`, `disable`."
        },
        "Comments": {
            "type": "string",
            "description": "Comment."
        },
        "Dstintf": {
            "type": "string",
            "description": "IPv6 destination interface name."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "EndPort": {
            "type": "number",
            "description": "Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535, default = 65535)."
        },
        "Fosid": {
            "type": "number",
            "description": "Policy ID."
        },
        "Id": {
            "type": "string"
        },
        "Logtraffic": {
            "type": "string",
            "description": "Enable/disable logging traffic accepted by this policy. Valid values: `enable`, `disable`."
        },
        "Name": {
            "type": "string",
            "description": "Policy name."
        },
        "Protocol": {
            "type": "number",
            "description": "Integer value for the protocol type as defined by IANA (0 - 255, default = 0)."
        },
        "Srcintf": {
            "type": "string",
            "description": "IPv6 source interface name."
        },
        "StartPort": {
            "type": "number",
            "description": "Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535, default = 1)."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable this policy. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Dstaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DstaddrDefinition"
            },
            "minItems": 1
        },
        "Srcaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcaddrDefinition"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Dstintf",
        "Srcintf"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}