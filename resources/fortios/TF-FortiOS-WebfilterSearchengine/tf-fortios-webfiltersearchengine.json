{
    "typeName": "TF::FortiOS::WebfilterSearchengine",
    "description": "Configure web filter search engines.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WebfilterSearchengine/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Charset": {
            "type": "string",
            "description": "Search engine charset. Valid values: `utf-8`, `gb2312`."
        },
        "Hostname": {
            "type": "string",
            "description": "Hostname (regular expression)."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Search engine name."
        },
        "Query": {
            "type": "string",
            "description": "Code used to prefix a query (must end with an equals character)."
        },
        "Safesearch": {
            "type": "string",
            "description": "Safe search method. You can disable safe search, add the safe search string to URLs, or insert a safe search header. Valid values: `disable`, `url`, `header`."
        },
        "SafesearchStr": {
            "type": "string",
            "description": "Safe search parameter used in the URL."
        },
        "Url": {
            "type": "string",
            "description": "URL (regular expression)."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}