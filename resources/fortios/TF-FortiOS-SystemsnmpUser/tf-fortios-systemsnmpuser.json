{
    "typeName": "TF::FortiOS::SystemsnmpUser",
    "description": "SNMP user configuration.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SystemsnmpUser/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthProto": {
            "type": "string",
            "description": "Authentication protocol."
        },
        "AuthPwd": {
            "type": "string",
            "description": "Password for authentication protocol."
        },
        "Events": {
            "type": "string",
            "description": "SNMP notifications (traps) to send."
        },
        "HaDirect": {
            "type": "string",
            "description": "Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "SNMP user name."
        },
        "NotifyHosts": {
            "type": "string",
            "description": "SNMP managers to send notifications (traps) to."
        },
        "NotifyHosts6": {
            "type": "string",
            "description": "IPv6 SNMP managers to send notifications (traps) to."
        },
        "PrivProto": {
            "type": "string",
            "description": "Privacy (encryption) protocol. Valid values: `aes`, `des`, `aes256`, `aes256cisco`."
        },
        "PrivPwd": {
            "type": "string",
            "description": "Password for privacy (encryption) protocol."
        },
        "Queries": {
            "type": "string",
            "description": "Enable/disable SNMP queries for this user. Valid values: `enable`, `disable`."
        },
        "QueryPort": {
            "type": "number",
            "description": "SNMPv3 query port (default = 161)."
        },
        "SecurityLevel": {
            "type": "string",
            "description": "Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`."
        },
        "SourceIp": {
            "type": "string",
            "description": "Source IP for SNMP trap."
        },
        "SourceIpv6": {
            "type": "string",
            "description": "Source IPv6 for SNMP trap."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable this SNMP user. Valid values: `enable`, `disable`."
        },
        "TrapLport": {
            "type": "number",
            "description": "SNMPv3 local trap port (default = 162)."
        },
        "TrapRport": {
            "type": "number",
            "description": "SNMPv3 trap remote port (default = 162)."
        },
        "TrapStatus": {
            "type": "string",
            "description": "Enable/disable traps for this SNMP user. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AuthPwd",
        "/properties/PrivPwd"
    ]
}