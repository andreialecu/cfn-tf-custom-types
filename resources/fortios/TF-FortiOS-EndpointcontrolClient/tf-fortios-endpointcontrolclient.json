{
    "typeName": "TF::FortiOS::EndpointcontrolClient",
    "description": "Configure endpoint control client lists. Applies to FortiOS Version `<= 6.2.0`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-EndpointcontrolClient/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdGroups": {
            "type": "string",
            "description": "Endpoint client AD logon groups."
        },
        "Fosid": {
            "type": "number",
            "description": "Endpoint client ID."
        },
        "FtclUid": {
            "type": "string",
            "description": "Endpoint FortiClient UID."
        },
        "Id": {
            "type": "string"
        },
        "Info": {
            "type": "string",
            "description": "Endpoint client information."
        },
        "SrcIp": {
            "type": "string",
            "description": "Endpoint client IP address."
        },
        "SrcMac": {
            "type": "string",
            "description": "Endpoint client MAC address."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}