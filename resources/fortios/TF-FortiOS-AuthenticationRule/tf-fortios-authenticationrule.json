{
    "typeName": "TF::FortiOS::AuthenticationRule",
    "description": "Configure Authentication Rules.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-AuthenticationRule/docs/README.md",
    "definitions": {
        "DstaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "SrcaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "Srcaddr6Definition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "SrcintfDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Interface name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ActiveAuthMethod": {
            "type": "string",
            "description": "Select an active authentication method."
        },
        "Comments": {
            "type": "string",
            "description": "Comment."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "IpBased": {
            "type": "string",
            "description": "Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`."
        },
        "Name": {
            "type": "string",
            "description": "Authentication rule name."
        },
        "Protocol": {
            "type": "string",
            "description": "Select the protocol to use for authentication (default = http). Users connect to the FortiGate using this protocol and are asked to authenticate. Valid values: `http`, `ftp`, `socks`, `ssh`."
        },
        "SsoAuthMethod": {
            "type": "string",
            "description": "Select a single-sign on (SSO) authentication method."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable this authentication rule. Valid values: `enable`, `disable`."
        },
        "TransactionBased": {
            "type": "string",
            "description": "Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "WebAuthCookie": {
            "type": "string",
            "description": "Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`."
        },
        "WebPortal": {
            "type": "string",
            "description": "Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`."
        },
        "Dstaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DstaddrDefinition"
            }
        },
        "Srcaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcaddrDefinition"
            }
        },
        "Srcaddr6": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Srcaddr6Definition"
            }
        },
        "Srcintf": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcintfDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}