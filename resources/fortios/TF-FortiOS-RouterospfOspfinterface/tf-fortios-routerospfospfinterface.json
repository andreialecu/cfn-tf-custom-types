{
    "typeName": "TF::FortiOS::RouterospfOspfinterface",
    "description": "OSPF interface configuration.\n\n~> The provider supports the definition of Ospf-Interface in Router Ospf `fortios_router_ospf`, and also allows the definition of separate Ospf-Interface resources `fortios_routerospf_ospfinterface`, but do not use a `fortios_router_ospf` with in-line Ospf-Interface in conjunction with any `fortios_routerospf_ospfinterface` resources, otherwise conflicts and overwrite will occur.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-RouterospfOspfinterface/docs/README.md",
    "definitions": {
        "Md5KeysDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Key ID (1 - 255)."
                },
                "KeyString": {
                    "type": "string",
                    "description": "Password for the key."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Authentication": {
            "type": "string",
            "description": "Authentication type. Valid values: `none`, `text`, `md5`."
        },
        "AuthenticationKey": {
            "type": "string",
            "description": "Authentication key."
        },
        "Bfd": {
            "type": "string",
            "description": "Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`."
        },
        "Cost": {
            "type": "number",
            "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost."
        },
        "DatabaseFilterOut": {
            "type": "string",
            "description": "Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`."
        },
        "DeadInterval": {
            "type": "number",
            "description": "Dead interval."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "HelloInterval": {
            "type": "number",
            "description": "Hello interval."
        },
        "HelloMultiplier": {
            "type": "number",
            "description": "Number of hello packets within dead interval."
        },
        "Id": {
            "type": "string"
        },
        "Interface": {
            "type": "string",
            "description": "Configuration interface name."
        },
        "Ip": {
            "type": "string",
            "description": "IP address."
        },
        "Md5Key": {
            "type": "string",
            "description": "MD5 key."
        },
        "Md5Keychain": {
            "type": "string",
            "description": "Authentication MD5 key-chain name."
        },
        "Mtu": {
            "type": "number",
            "description": "MTU for database description packets."
        },
        "MtuIgnore": {
            "type": "string",
            "description": "Enable/disable ignore MTU. Valid values: `enable`, `disable`."
        },
        "Name": {
            "type": "string",
            "description": "Interface entry name."
        },
        "NetworkType": {
            "type": "string",
            "description": "Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`."
        },
        "PrefixLength": {
            "type": "number",
            "description": "Prefix length."
        },
        "Priority": {
            "type": "number",
            "description": "Priority."
        },
        "ResyncTimeout": {
            "type": "number",
            "description": "Graceful restart neighbor resynchronization timeout."
        },
        "RetransmitInterval": {
            "type": "number",
            "description": "Retransmit interval."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable status. Valid values: `disable`, `enable`."
        },
        "TransmitDelay": {
            "type": "number",
            "description": "Transmit delay."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Md5Keys": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Md5KeysDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}