{
    "typeName": "TF::FortiOS::VpncertificateOcspserver",
    "description": "OCSP server configuration.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-VpncertificateOcspserver/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Cert": {
            "type": "string",
            "description": "OCSP server certificate."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "OCSP server entry name."
        },
        "SecondaryCert": {
            "type": "string",
            "description": "Secondary OCSP server certificate."
        },
        "SecondaryUrl": {
            "type": "string",
            "description": "Secondary OCSP server URL."
        },
        "SourceIp": {
            "type": "string",
            "description": "Source IP address for communications to the OCSP server."
        },
        "UnavailAction": {
            "type": "string",
            "description": "Action when server is unavailable (revoke the certificate or ignore the result of the check). Valid values: `revoke`, `ignore`."
        },
        "Url": {
            "type": "string",
            "description": "OCSP server URL."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}