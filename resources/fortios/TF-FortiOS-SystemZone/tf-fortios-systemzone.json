{
    "typeName": "TF::FortiOS::SystemZone",
    "description": "Configure zones to group two or more interfaces. When a zone is created you can configure policies for the zone instead of individual interfaces in the zone.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-SystemZone/docs/README.md",
    "definitions": {
        "InterfaceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "InterfaceName": {
                    "type": "string",
                    "description": "Select interfaces to add to the zone."
                }
            },
            "required": []
        },
        "TaggingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Category": {
                    "type": "string",
                    "description": "Tag category."
                },
                "Name": {
                    "type": "string",
                    "description": "Tagging entry name."
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TagsDefinition"
                    }
                }
            },
            "required": []
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Tag name."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "Intrazone": {
            "type": "string",
            "description": "Allow or deny traffic routing between different interfaces in the same zone (default = deny). Valid values: `allow`, `deny`."
        },
        "Name": {
            "type": "string",
            "description": "Zone name."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Interface": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/InterfaceDefinition"
            }
        },
        "Tagging": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TaggingDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}