{
    "typeName": "TF::FortiOS::FirewallPolicy6",
    "description": "Configure IPv6 policies. Applies to FortiOS Version `<= 6.4.0`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-FirewallPolicy6/docs/README.md",
    "definitions": {
        "AppCategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Category IDs."
                }
            },
            "required": []
        },
        "AppGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Application group names."
                }
            },
            "required": []
        },
        "ApplicationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "Application IDs."
                }
            },
            "required": []
        },
        "CustomLogFieldsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FieldId": {
                    "type": "string",
                    "description": "Custom log field."
                }
            },
            "required": []
        },
        "DevicesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Device or group name."
                }
            },
            "required": []
        },
        "DstaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "DstintfDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Interface name."
                }
            },
            "required": []
        },
        "FssoGroupsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Names of FSSO groups."
                }
            },
            "required": []
        },
        "GroupsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Group name."
                }
            },
            "required": []
        },
        "PoolnameDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "IP pool name."
                }
            },
            "required": []
        },
        "ServiceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "SrcaddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Address name."
                }
            },
            "required": []
        },
        "SrcintfDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Interface name."
                }
            },
            "required": []
        },
        "SslMirrorIntfDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Interface name."
                }
            },
            "required": []
        },
        "UrlCategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "number",
                    "description": "URL category ID."
                }
            },
            "required": []
        },
        "UsersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Names of individual users that can authenticate with this policy."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`."
        },
        "AntiReplay": {
            "type": "string",
            "description": "Enable/disable anti-replay check. Valid values: `enable`, `disable`."
        },
        "ApplicationList": {
            "type": "string",
            "description": "Name of an existing Application list."
        },
        "AutoAsicOffload": {
            "type": "string",
            "description": "Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`."
        },
        "AvProfile": {
            "type": "string",
            "description": "Name of an existing Antivirus profile."
        },
        "CifsProfile": {
            "type": "string",
            "description": "Name of an existing CIFS profile."
        },
        "Comments": {
            "type": "string",
            "description": "Comment."
        },
        "DecryptedTrafficMirror": {
            "type": "string",
            "description": "Decrypted traffic mirror."
        },
        "DiffservForward": {
            "type": "string",
            "description": "Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`."
        },
        "DiffservReverse": {
            "type": "string",
            "description": "Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`."
        },
        "DiffservcodeForward": {
            "type": "string",
            "description": "Change packet's DiffServ to this value."
        },
        "DiffservcodeRev": {
            "type": "string",
            "description": "Change packet's reverse (reply) DiffServ to this value."
        },
        "DlpSensor": {
            "type": "string",
            "description": "Name of an existing DLP sensor."
        },
        "DnsfilterProfile": {
            "type": "string",
            "description": "Name of an existing DNS filter profile."
        },
        "Dsri": {
            "type": "string",
            "description": "Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`."
        },
        "DstaddrNegate": {
            "type": "string",
            "description": "When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "EmailfilterProfile": {
            "type": "string",
            "description": "Name of an existing email filter profile."
        },
        "FirewallSessionDirty": {
            "type": "string",
            "description": "How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`."
        },
        "Fixedport": {
            "type": "string",
            "description": "Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`."
        },
        "GlobalLabel": {
            "type": "string",
            "description": "Label for the policy that appears when the GUI is in Global View mode."
        },
        "HttpPolicyRedirect": {
            "type": "string",
            "description": "Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`."
        },
        "IcapProfile": {
            "type": "string",
            "description": "Name of an existing ICAP profile."
        },
        "Id": {
            "type": "string"
        },
        "Inbound": {
            "type": "string",
            "description": "Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`."
        },
        "InspectionMode": {
            "type": "string",
            "description": "Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`."
        },
        "Ippool": {
            "type": "string",
            "description": "Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`."
        },
        "IpsSensor": {
            "type": "string",
            "description": "Name of an existing IPS sensor."
        },
        "Label": {
            "type": "string",
            "description": "Label for the policy that appears when the GUI is in Section View mode."
        },
        "Logtraffic": {
            "type": "string",
            "description": "Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`."
        },
        "LogtrafficStart": {
            "type": "string",
            "description": "Record logs when a session starts. Valid values: `enable`, `disable`."
        },
        "Name": {
            "type": "string",
            "description": "Policy name."
        },
        "Nat": {
            "type": "string",
            "description": "Enable/disable source NAT. Valid values: `enable`, `disable`."
        },
        "Natinbound": {
            "type": "string",
            "description": "Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`."
        },
        "Natoutbound": {
            "type": "string",
            "description": "Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`."
        },
        "Outbound": {
            "type": "string",
            "description": "Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`."
        },
        "PerIpShaper": {
            "type": "string",
            "description": "Per-IP traffic shaper."
        },
        "Policyid": {
            "type": "number",
            "description": "Policy ID."
        },
        "ProfileGroup": {
            "type": "string",
            "description": "Name of profile group."
        },
        "ProfileProtocolOptions": {
            "type": "string",
            "description": "Name of an existing Protocol options profile."
        },
        "ProfileType": {
            "type": "string",
            "description": "Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`."
        },
        "ReplacemsgOverrideGroup": {
            "type": "string",
            "description": "Override the default replacement message group for this policy."
        },
        "Rsso": {
            "type": "string",
            "description": "Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`."
        },
        "Schedule": {
            "type": "string",
            "description": "Schedule name."
        },
        "SendDenyPacket": {
            "type": "string",
            "description": "Enable/disable return of deny-packet. Valid values: `enable`, `disable`."
        },
        "ServiceNegate": {
            "type": "string",
            "description": "When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`."
        },
        "SessionTtl": {
            "type": "number",
            "description": "Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL."
        },
        "SpamfilterProfile": {
            "type": "string",
            "description": "Name of an existing Spam filter profile."
        },
        "SrcaddrNegate": {
            "type": "string",
            "description": "When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`."
        },
        "SshFilterProfile": {
            "type": "string",
            "description": "Name of an existing SSH filter profile."
        },
        "SshPolicyRedirect": {
            "type": "string",
            "description": "Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`."
        },
        "SslMirror": {
            "type": "string",
            "description": "Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`."
        },
        "SslSshProfile": {
            "type": "string",
            "description": "Name of an existing SSL SSH profile."
        },
        "Status": {
            "type": "string",
            "description": "Enable or disable this policy. Valid values: `enable`, `disable`."
        },
        "TcpMssReceiver": {
            "type": "number",
            "description": "Receiver TCP maximum segment size (MSS)."
        },
        "TcpMssSender": {
            "type": "number",
            "description": "Sender TCP maximum segment size (MSS)."
        },
        "TcpSessionWithoutSyn": {
            "type": "string",
            "description": "Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`."
        },
        "TimeoutSendRst": {
            "type": "string",
            "description": "Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`."
        },
        "Tos": {
            "type": "string",
            "description": "ToS (Type of Service) value used for comparison."
        },
        "TosMask": {
            "type": "string",
            "description": "Non-zero bit positions are used for comparison while zero bit positions are ignored."
        },
        "TosNegate": {
            "type": "string",
            "description": "Enable negated TOS match. Valid values: `enable`, `disable`."
        },
        "TrafficShaper": {
            "type": "string",
            "description": "Reverse traffic shaper."
        },
        "TrafficShaperReverse": {
            "type": "string",
            "description": "Reverse traffic shaper."
        },
        "UtmStatus": {
            "type": "string",
            "description": "Enable AV/web/ips protection profile. Valid values: `enable`, `disable`."
        },
        "Uuid": {
            "type": "string",
            "description": "Universally Unique Identifier (UUID; automatically assigned but can be manually reset)."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "VlanCosFwd": {
            "type": "number",
            "description": "VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest."
        },
        "VlanCosRev": {
            "type": "number",
            "description": "VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest."
        },
        "VlanFilter": {
            "type": "string",
            "description": "Set VLAN filters."
        },
        "VoipProfile": {
            "type": "string",
            "description": "Name of an existing VoIP profile."
        },
        "Vpntunnel": {
            "type": "string",
            "description": "Policy-based IPsec VPN: name of the IPsec VPN Phase 1."
        },
        "WafProfile": {
            "type": "string",
            "description": "Name of an existing Web application firewall profile."
        },
        "Webcache": {
            "type": "string",
            "description": "Enable/disable web cache. Valid values: `enable`, `disable`."
        },
        "WebcacheHttps": {
            "type": "string",
            "description": "Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`."
        },
        "WebfilterProfile": {
            "type": "string",
            "description": "Name of an existing Web filter profile."
        },
        "WebproxyForwardServer": {
            "type": "string",
            "description": "Web proxy forward server name."
        },
        "WebproxyProfile": {
            "type": "string",
            "description": "Webproxy profile name."
        },
        "AppCategory": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AppCategoryDefinition"
            }
        },
        "AppGroup": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AppGroupDefinition"
            }
        },
        "Application": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ApplicationDefinition"
            }
        },
        "CustomLogFields": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CustomLogFieldsDefinition"
            }
        },
        "Devices": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DevicesDefinition"
            }
        },
        "Dstaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DstaddrDefinition"
            },
            "minItems": 1
        },
        "Dstintf": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DstintfDefinition"
            },
            "minItems": 1
        },
        "FssoGroups": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/FssoGroupsDefinition"
            }
        },
        "Groups": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/GroupsDefinition"
            }
        },
        "Poolname": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PoolnameDefinition"
            }
        },
        "Service": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceDefinition"
            }
        },
        "Srcaddr": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcaddrDefinition"
            },
            "minItems": 1
        },
        "Srcintf": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SrcintfDefinition"
            },
            "minItems": 1
        },
        "SslMirrorIntf": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SslMirrorIntfDefinition"
            }
        },
        "UrlCategory": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UrlCategoryDefinition"
            }
        },
        "Users": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UsersDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Schedule"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}