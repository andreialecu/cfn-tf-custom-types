{
    "typeName": "TF::FortiOS::WebfilterUrlfilter",
    "description": "Configure URL filter lists.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-WebfilterUrlfilter/docs/README.md",
    "definitions": {
        "EntriesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "string",
                    "description": "Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`."
                },
                "AntiphishAction": {
                    "type": "string",
                    "description": "Action to take for AntiPhishing matches. Valid values: `block`, `log`."
                },
                "DnsAddressFamily": {
                    "type": "string",
                    "description": "Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`."
                },
                "Exempt": {
                    "type": "string",
                    "description": "If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space."
                },
                "Id": {
                    "type": "number",
                    "description": "Id."
                },
                "ReferrerHost": {
                    "type": "string",
                    "description": "Referrer host name."
                },
                "Status": {
                    "type": "string",
                    "description": "Enable/disable this URL filter. Valid values: `enable`, `disable`."
                },
                "Type": {
                    "type": "string",
                    "description": "Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`."
                },
                "Url": {
                    "type": "string",
                    "description": "URL to be filtered."
                },
                "WebProxyProfile": {
                    "type": "string",
                    "description": "Web proxy profile."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Comment": {
            "type": "string",
            "description": "Optional comments."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Fosid": {
            "type": "number",
            "description": "ID."
        },
        "Id": {
            "type": "string"
        },
        "IpAddrBlock": {
            "type": "string",
            "description": "Enable/disable blocking URLs when the hostname appears as an IP address. Valid values: `enable`, `disable`."
        },
        "Name": {
            "type": "string",
            "description": "Name of URL filter list."
        },
        "OneArmIpsUrlfilter": {
            "type": "string",
            "description": "Enable/disable DNS resolver for one-arm IPS URL filter operation. Valid values: `enable`, `disable`."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Entries": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EntriesDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Fosid",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}