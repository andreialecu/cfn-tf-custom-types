{
    "typeName": "TF::FortiOS::VpnPptp",
    "description": "Configure PPTP.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-VpnPptp/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Eip": {
            "type": "string",
            "description": "End IP."
        },
        "Id": {
            "type": "string"
        },
        "IpMode": {
            "type": "string",
            "description": "IP assignment mode for PPTP client. Valid values: `range`, `usrgrp`."
        },
        "LocalIp": {
            "type": "string",
            "description": "Local IP to be used for peer's remote IP."
        },
        "Sip": {
            "type": "string",
            "description": "Start IP."
        },
        "Status": {
            "type": "string",
            "description": "Enable/disable FortiGate as a PPTP gateway. Valid values: `enable`, `disable`."
        },
        "Usrgrp": {
            "type": "string",
            "description": "User group."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        }
    },
    "additionalProperties": false,
    "required": [
        "Status"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}