{
    "typeName": "TF::FortiOS::VpnsslwebUserbookmark",
    "description": "Configure SSL VPN user bookmark.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/fortios/TF-FortiOS-VpnsslwebUserbookmark/docs/README.md",
    "definitions": {
        "BookmarksDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdditionalParams": {
                    "type": "string",
                    "description": "Additional parameters."
                },
                "Apptype": {
                    "type": "string",
                    "description": "Application type."
                },
                "Description": {
                    "type": "string",
                    "description": "Description."
                },
                "Domain": {
                    "type": "string",
                    "description": "Login domain."
                },
                "Folder": {
                    "type": "string",
                    "description": "Network shared file folder parameter."
                },
                "Host": {
                    "type": "string",
                    "description": "Host name/IP parameter."
                },
                "ListeningPort": {
                    "type": "number",
                    "description": "Listening port (0 - 65535)."
                },
                "LoadBalancingInfo": {
                    "type": "string",
                    "description": "The load balancing information or cookie which should be provided to the connection broker."
                },
                "LogonPassword": {
                    "type": "string",
                    "description": "Logon password."
                },
                "LogonUser": {
                    "type": "string",
                    "description": "Logon user."
                },
                "Name": {
                    "type": "string",
                    "description": "Bookmark name."
                },
                "Port": {
                    "type": "number",
                    "description": "Remote port."
                },
                "PreconnectionBlob": {
                    "type": "string",
                    "description": "An arbitrary string which identifies the RDP source."
                },
                "PreconnectionId": {
                    "type": "number",
                    "description": "The numeric ID of the RDP source (0-2147483648)."
                },
                "RemotePort": {
                    "type": "number",
                    "description": "Remote port (0 - 65535)."
                },
                "Security": {
                    "type": "string",
                    "description": "Security mode for RDP connection. Valid values: `rdp`, `nla`, `tls`, `any`."
                },
                "ServerLayout": {
                    "type": "string",
                    "description": "Server side keyboard layout."
                },
                "ShowStatusWindow": {
                    "type": "string",
                    "description": "Enable/disable showing of status window. Valid values: `enable`, `disable`."
                },
                "Sso": {
                    "type": "string",
                    "description": "Single Sign-On. Valid values: `disable`, `static`, `auto`."
                },
                "SsoCredential": {
                    "type": "string",
                    "description": "Single sign-on credentials. Valid values: `sslvpn-login`, `alternative`."
                },
                "SsoCredentialSentOnce": {
                    "type": "string",
                    "description": "Single sign-on credentials are only sent once to remote server. Valid values: `enable`, `disable`."
                },
                "SsoPassword": {
                    "type": "string",
                    "description": "SSO password."
                },
                "SsoUsername": {
                    "type": "string",
                    "description": "SSO user name."
                },
                "Url": {
                    "type": "string",
                    "description": "URL parameter."
                },
                "FormData": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/FormDataDefinition"
                    }
                }
            },
            "required": []
        },
        "FormDataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Name."
                },
                "Value": {
                    "type": "string",
                    "description": "Value."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CustomLang": {
            "type": "string",
            "description": "Personal language."
        },
        "DynamicSortSubtable": {
            "type": "string",
            "description": "true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "User and group name."
        },
        "Vdomparam": {
            "type": "string",
            "description": "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter."
        },
        "Bookmarks": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BookmarksDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/BookmarksDefinition/LogonPassword",
        "/definitions/BookmarksDefinition/SsoPassword"
    ]
}