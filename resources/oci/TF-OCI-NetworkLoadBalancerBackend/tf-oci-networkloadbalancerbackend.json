{
    "typeName": "TF::OCI::NetworkLoadBalancerBackend",
    "description": "This resource provides the Backend resource in Oracle Cloud Infrastructure Network Load Balancer service.\n\nAdds a backend server to a backend set.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-NetworkLoadBalancerBackend/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BackendSetName": {
            "type": "string",
            "description": "The name of the backend set to which to add the backend server.  Example: `example_backend_set`."
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string",
            "description": "The IP address of the backend server. Example: `10.0.0.3`."
        },
        "IsBackup": {
            "type": "boolean",
            "description": "(Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as \"isBackup\" fail the health check policy.  Example: `false`."
        },
        "IsDrain": {
            "type": "boolean",
            "description": "(Updatable) Whether the network load balancer should drain this server. Servers marked \"isDrain\" receive no  incoming traffic.  Example: `false`."
        },
        "IsOffline": {
            "type": "boolean",
            "description": "(Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`."
        },
        "Name": {
            "type": "string",
            "description": "Optional unique name identifying the backend within the backend set. If not specified, then one will be generated. Example: `webServer1`."
        },
        "NetworkLoadBalancerId": {
            "type": "string",
            "description": "The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update."
        },
        "Port": {
            "type": "number",
            "description": "The communication port for the backend server.  Example: `8080`."
        },
        "TargetId": {
            "type": "string",
            "description": "The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`."
        },
        "Weight": {
            "type": "number",
            "description": "(Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "BackendSetName",
        "NetworkLoadBalancerId",
        "Port"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}