{
    "typeName": "TF::OCI::KmsVault",
    "description": "This resource provides the Vault resource in Oracle Cloud Infrastructure Kms service.\n\nCreates a new vault. The type of vault you create determines key placement, pricing, and\navailable options. Options include storage isolation, a dedicated service endpoint instead\nof a shared service endpoint for API calls, and either a dedicated hardware security module\n(HSM) or a multitenant HSM.\n\nAs a provisioning operation, this call is subject to a Key Management limit that applies to\nthe total number of requests across all provisioning write operations. Key Management might\nthrottle this call to reject an otherwise valid request when the total rate of provisioning\nwrite operations exceeds 10 requests per second for a given tenancy.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-KmsVault/docs/README.md",
    "definitions": {
        "DefinedTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "FreeformTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ReplicaDetailsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ReplicationId": {
                    "type": "string"
                }
            }
        },
        "RestoreFromFileDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContentLength": {
                    "type": "string"
                },
                "ContentMd5": {
                    "type": "string"
                },
                "RestoreVaultFromFileDetails": {
                    "type": "string"
                }
            },
            "required": [
                "ContentLength",
                "RestoreVaultFromFileDetails"
            ]
        },
        "RestoreFromObjectStoreDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Bucket": {
                    "type": "string"
                },
                "Destination": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string"
                },
                "Object": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                }
            },
            "required": [
                "Destination"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CompartmentId": {
            "type": "string",
            "description": "(Updatable) The OCID of the compartment where you want to create this vault."
        },
        "CryptoEndpoint": {
            "type": "string"
        },
        "DefinedTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DefinedTagsDefinition"
            },
            "description": "(Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{\"Operations.CostCenter\": \"42\"}`."
        },
        "DisplayName": {
            "type": "string",
            "description": "(Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information."
        },
        "FreeformTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FreeformTagsDefinition"
            },
            "description": "(Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{\"Department\": \"Finance\"}`."
        },
        "Id": {
            "type": "string"
        },
        "IsPrimary": {
            "type": "boolean"
        },
        "ManagementEndpoint": {
            "type": "string"
        },
        "ReplicaDetails": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ReplicaDetailsDefinition"
            }
        },
        "RestoreTrigger": {
            "type": "boolean"
        },
        "RestoredFromVaultId": {
            "type": "string"
        },
        "State": {
            "type": "string"
        },
        "TimeCreated": {
            "type": "string"
        },
        "TimeOfDeletion": {
            "type": "string",
            "description": "(Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`."
        },
        "VaultType": {
            "type": "string",
            "description": "The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing."
        },
        "RestoreFromFile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RestoreFromFileDefinition"
            },
            "maxItems": 1
        },
        "RestoreFromObjectStore": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RestoreFromObjectStoreDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "CompartmentId",
        "DisplayName",
        "VaultType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CryptoEndpoint",
        "/properties/Id",
        "/properties/IsPrimary",
        "/properties/ManagementEndpoint",
        "/properties/ReplicaDetails",
        "/properties/RestoredFromVaultId",
        "/properties/State",
        "/properties/TimeCreated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}