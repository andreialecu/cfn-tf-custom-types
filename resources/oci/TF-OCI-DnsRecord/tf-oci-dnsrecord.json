{
    "typeName": "TF::OCI::DnsRecord",
    "description": "**Deprecated. Use [oci_dns_rrset](https://registry.terraform.io/providers/hashicorp/oci/latest/docs/resources/dns_rrset) instead.**\n\nThis resource provides the Record resource in Oracle Cloud Infrastructure DNS service.\n\nReplaces records in the specified zone with the records specified in the\nrequest body. If a specified record does not exist, it will be created.\nIf the record exists, then it will be updated to represent the record in\nthe body of the request. If a record in the zone does not exist in the\nrequest body, the record will be removed from the zone.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-DnsRecord/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CompartmentId": {
            "type": "string",
            "description": "(Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid."
        },
        "Domain": {
            "type": "string",
            "description": "The fully qualified domain name where the record can be located. Domain value is case insensitive."
        },
        "Id": {
            "type": "string"
        },
        "IsProtected": {
            "type": "boolean"
        },
        "Rdata": {
            "type": "string",
            "description": "(Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)."
        },
        "RecordHash": {
            "type": "string"
        },
        "RrsetVersion": {
            "type": "string"
        },
        "Rtype": {
            "type": "string",
            "description": "The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4)."
        },
        "Ttl": {
            "type": "number",
            "description": "(Updatable) The Time To Live for the record, in seconds."
        },
        "ZoneNameOrId": {
            "type": "string",
            "description": "The name or OCID of the target zone."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Domain",
        "Rtype",
        "ZoneNameOrId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/IsProtected",
        "/properties/RecordHash",
        "/properties/RrsetVersion"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}