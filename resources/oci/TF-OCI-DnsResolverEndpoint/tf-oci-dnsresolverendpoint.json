{
    "typeName": "TF::OCI::DnsResolverEndpoint",
    "description": "This resource provides the Resolver Endpoint resource in Oracle Cloud Infrastructure DNS service.\n\nCreates a new resolver endpoint.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-DnsResolverEndpoint/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CompartmentId": {
            "type": "string"
        },
        "EndpointType": {
            "type": "string",
            "description": "(Updatable) The type of resolver endpoint. VNIC is currently the only supported type."
        },
        "ForwardingAddress": {
            "type": "string",
            "description": "An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true."
        },
        "Id": {
            "type": "string"
        },
        "IsForwarding": {
            "type": "boolean",
            "description": "A Boolean flag indicating whether or not the resolver endpoint is for forwarding."
        },
        "IsListening": {
            "type": "boolean",
            "description": "A Boolean flag indicating whether or not the resolver endpoint is for listening."
        },
        "ListeningAddress": {
            "type": "string",
            "description": "An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified."
        },
        "Name": {
            "type": "string",
            "description": "The name of the resolver endpoint. Must be unique within the resolver."
        },
        "NsgIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "An array of NSG OCIDs for the resolver endpoint."
        },
        "ResolverId": {
            "type": "string",
            "description": "The OCID of the target resolver."
        },
        "Scope": {
            "type": "string",
            "description": "Value must be `PRIVATE` when creating private name resolver endpoints."
        },
        "Self": {
            "type": "string"
        },
        "State": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string",
            "description": "The OCID of a subnet. Must be part of the VCN that the resolver is attached to."
        },
        "TimeCreated": {
            "type": "string"
        },
        "TimeUpdated": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "IsForwarding",
        "IsListening",
        "Name",
        "ResolverId",
        "Scope",
        "SubnetId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CompartmentId",
        "/properties/Id",
        "/properties/Self",
        "/properties/State",
        "/properties/TimeCreated",
        "/properties/TimeUpdated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}