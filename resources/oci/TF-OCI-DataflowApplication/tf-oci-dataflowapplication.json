{
    "typeName": "TF::OCI::DataflowApplication",
    "description": "This resource provides the Application resource in Oracle Cloud Infrastructure Data Flow service.\n\nCreates an application.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-DataflowApplication/docs/README.md",
    "definitions": {
        "ConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "DefinedTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "FreeformTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Value"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ArchiveUri": {
            "type": "string",
            "description": "(Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat."
        },
        "Arguments": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "(Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ \"--input\", \"${input_file}\", \"--name\", \"John Doe\" ]` If \"input_file\" has a value of \"mydata.xml\", then the value above will be translated to `--input mydata.xml --name \"John Doe\"`."
        },
        "ClassName": {
            "type": "string",
            "description": "(Updatable) The class for the application."
        },
        "CompartmentId": {
            "type": "string",
            "description": "(Updatable) The OCID of a compartment."
        },
        "Configuration": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ConfigurationDefinition"
            },
            "description": "(Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { \"spark.app.name\" : \"My App Name\", \"spark.shuffle.io.maxRetries\" : \"4\" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned."
        },
        "DefinedTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DefinedTagsDefinition"
            },
            "description": "(Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{\"Operations.CostCenter\": \"42\"}`."
        },
        "Description": {
            "type": "string",
            "description": "(Updatable) A user-friendly description. Avoid entering confidential information."
        },
        "DisplayName": {
            "type": "string",
            "description": "(Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information."
        },
        "DriverShape": {
            "type": "string",
            "description": "(Updatable) The VM shape for the driver. Sets the driver cores and memory."
        },
        "Execute": {
            "type": "string",
            "description": "(Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only."
        },
        "ExecutorShape": {
            "type": "string",
            "description": "(Updatable) The VM shape for the executors. Sets the executor cores and memory."
        },
        "FileUri": {
            "type": "string",
            "description": "(Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat."
        },
        "FreeformTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FreeformTagsDefinition"
            },
            "description": "(Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{\"Department\": \"Finance\"}`."
        },
        "Id": {
            "type": "string"
        },
        "Language": {
            "type": "string",
            "description": "(Updatable) The Spark language."
        },
        "LogsBucketUri": {
            "type": "string",
            "description": "(Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat."
        },
        "NumExecutors": {
            "type": "number",
            "description": "(Updatable) The number of executor VMs requested."
        },
        "OwnerPrincipalId": {
            "type": "string"
        },
        "OwnerUserName": {
            "type": "string"
        },
        "PrivateEndpointId": {
            "type": "string",
            "description": "(Updatable) The OCID of a private endpoint."
        },
        "SparkVersion": {
            "type": "string",
            "description": "(Updatable) The Spark version utilized to run the application."
        },
        "State": {
            "type": "string"
        },
        "TimeCreated": {
            "type": "string"
        },
        "TimeUpdated": {
            "type": "string"
        },
        "WarehouseBucketUri": {
            "type": "string",
            "description": "(Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat."
        },
        "Parameters": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ParametersDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "CompartmentId",
        "DisplayName",
        "DriverShape",
        "ExecutorShape",
        "FileUri",
        "Language",
        "NumExecutors",
        "SparkVersion"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/OwnerPrincipalId",
        "/properties/OwnerUserName",
        "/properties/State",
        "/properties/TimeCreated",
        "/properties/TimeUpdated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}