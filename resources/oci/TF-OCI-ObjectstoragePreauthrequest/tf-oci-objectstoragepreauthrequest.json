{
    "typeName": "TF::OCI::ObjectstoragePreauthrequest",
    "description": "This resource provides the Preauthenticated Request resource in Oracle Cloud Infrastructure Object Storage service.\n\nCreates a pre-authenticated request specific to the bucket.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-ObjectstoragePreauthrequest/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessType": {
            "type": "string",
            "description": "The operation that can be performed on this resource. Allowed Values: `ObjectRead`, `ObjectWrite`, `ObjectReadWrite`, `AnyObjectReadWrite` or `AnyObjectRead`."
        },
        "AccessUri": {
            "type": "string"
        },
        "Bucket": {
            "type": "string",
            "description": "The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`."
        },
        "BucketListingAction": {
            "type": "string",
            "description": "Specifies whether a list operation is allowed on a PAR with accessType \"AnyObjectRead\" or \"AnyObjectReadWrite\". Deny: Prevents the user from performing a list operation. ListObjects: Authorizes the user to perform a list operation."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A user-specified name for the pre-authenticated request. Names can be helpful in managing pre-authenticated requests. Avoid entering confidential information."
        },
        "Namespace": {
            "type": "string",
            "description": "The Object Storage namespace used for the request."
        },
        "Object": {
            "type": "string",
            "description": "The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket if the access type allows that. The object name can be a prefix as well, in that case pre-authenticated request grants access to all the objects within the bucket starting with that prefix provided that we have the correct access type."
        },
        "ParId": {
            "type": "string"
        },
        "TimeCreated": {
            "type": "string"
        },
        "TimeExpires": {
            "type": "string",
            "description": "The expiration date for the pre-authenticated request as per [RFC 3339](https://tools.ietf.org/html/rfc3339). After this date the pre-authenticated request will no longer be valid."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AccessType",
        "Bucket",
        "Name",
        "Namespace",
        "TimeExpires"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AccessUri",
        "/properties/Id",
        "/properties/ParId",
        "/properties/TimeCreated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}