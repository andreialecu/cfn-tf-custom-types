{
    "typeName": "TF::OCI::GoldenGateDeploymentBackup",
    "description": "This resource provides the Deployment Backup resource in Oracle Cloud Infrastructure Golden Gate service.\n\nCreates a new DeploymentBackup.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-GoldenGateDeploymentBackup/docs/README.md",
    "definitions": {
        "DefinedTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "FreeformTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "SystemTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BackupType": {
            "type": "string"
        },
        "Bucket": {
            "type": "string",
            "description": "Name of the bucket where the object is to be uploaded in the object storage."
        },
        "CompartmentId": {
            "type": "string",
            "description": "(Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced."
        },
        "DefinedTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DefinedTagsDefinition"
            },
            "description": "(Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{\"foo-namespace.bar-key\": \"value\"}`."
        },
        "DeploymentId": {
            "type": "string",
            "description": "The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced."
        },
        "DisplayName": {
            "type": "string",
            "description": "An object's Display Name."
        },
        "FreeformTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FreeformTagsDefinition"
            },
            "description": "(Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{\"bar-key\": \"value\"}`."
        },
        "Id": {
            "type": "string"
        },
        "IsAutomatic": {
            "type": "boolean"
        },
        "LifecycleDetails": {
            "type": "string"
        },
        "Namespace": {
            "type": "string",
            "description": "Name of namespace that serves as a container for all of your buckets."
        },
        "Object": {
            "type": "string",
            "description": "Name of the object to be uploaded to object storage."
        },
        "OggVersion": {
            "type": "string"
        },
        "State": {
            "type": "string"
        },
        "SystemTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SystemTagsDefinition"
            }
        },
        "TimeCreated": {
            "type": "string"
        },
        "TimeOfBackup": {
            "type": "string"
        },
        "TimeUpdated": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Bucket",
        "CompartmentId",
        "DeploymentId",
        "DisplayName",
        "Namespace",
        "Object"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/BackupType",
        "/properties/Id",
        "/properties/IsAutomatic",
        "/properties/LifecycleDetails",
        "/properties/OggVersion",
        "/properties/State",
        "/properties/SystemTags",
        "/properties/TimeCreated",
        "/properties/TimeOfBackup",
        "/properties/TimeUpdated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}