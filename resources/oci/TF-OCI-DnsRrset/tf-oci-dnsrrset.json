{
    "typeName": "TF::OCI::DnsRrset",
    "description": "This resource provides the Rrset resource in Oracle Cloud Infrastructure DNS service.\n\nReplaces records in the specified RRSet. RRSet with a `domain` and `rtype` is unique within a zone.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/oci/TF-OCI-DnsRrset/docs/README.md",
    "definitions": {
        "ItemsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Domain": {
                    "type": "string"
                },
                "Rdata": {
                    "type": "string"
                },
                "Rtype": {
                    "type": "string"
                },
                "Ttl": {
                    "type": "number"
                }
            },
            "required": [
                "Domain",
                "Rdata",
                "Rtype",
                "Ttl"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CompartmentId": {
            "type": "string",
            "description": "(Updatable) The OCID of the compartment the resource belongs to."
        },
        "Domain": {
            "type": "string",
            "description": "The fully qualified domain name where the record can be located.\n* `rdata` - (Required) (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)\n* `rtype` - (Required) The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).\n* `ttl` - (Required) (Updatable) The Time To Live for the record, in seconds."
        },
        "Id": {
            "type": "string"
        },
        "Rtype": {
            "type": "string",
            "description": "The type of the target RRSet within the target zone."
        },
        "Scope": {
            "type": "string",
            "description": "Specifies to operate only on resources that have a matching DNS scope.\nThis value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets."
        },
        "ViewId": {
            "type": "string",
            "description": "The OCID of the view the resource is associated with."
        },
        "ZoneNameOrId": {
            "type": "string",
            "description": "The name or OCID of the target zone."
        },
        "Items": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ItemsDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Domain",
        "Rtype",
        "ZoneNameOrId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}