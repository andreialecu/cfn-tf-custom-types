{
    "typeName": "TF::Linode::DomainRecord",
    "description": "Provides a Linode Domain Record resource.  This can be used to create, modify, and delete Linodes Domain Records.\nFor more information, see [DNS Manager](https://www.linode.com/docs/platform/manager/dns-manager/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createDomainRecord).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/linode/TF-Linode-DomainRecord/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DomainId": {
            "type": "number",
            "description": "The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address."
        },
        "Port": {
            "type": "number",
            "description": "The port this Record points to."
        },
        "Priority": {
            "type": "number",
            "description": "The priority of the target host. Lower values are preferred."
        },
        "Protocol": {
            "type": "string",
            "description": "The protocol this Record's service communicates with. Only valid for SRV records."
        },
        "RecordType": {
            "type": "string",
            "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. See all supported record types [here](https://www.linode.com/docs/api/domains/#domain-record-create__request-body-schema). *Changing `record_type` forces the creation of a new Linode Domain Record.*."
        },
        "Service": {
            "type": "string",
            "description": "The service this Record identified. Only valid for SRV records."
        },
        "Tag": {
            "type": "string",
            "description": "The tag portion of a CAA record. It is invalid to set this on other record types."
        },
        "Target": {
            "type": "string",
            "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to."
        },
        "TtlSec": {
            "type": "number",
            "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value."
        },
        "Weight": {
            "type": "number",
            "description": "The relative weight of this Record. Higher values are preferred."
        }
    },
    "additionalProperties": false,
    "required": [
        "DomainId",
        "RecordType",
        "Target"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}