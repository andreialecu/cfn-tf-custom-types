{
    "typeName": "TF::AzureRM::MssqlDatabase",
    "description": "Manages a MS SQL Database.\n\n~> **NOTE:** The Database Extended Auditing Policy Can be set inline here as well as with the [mssql_database_extended_auditing_policy resource](mssql_database_extended_auditing_policy.html) resource. You can only use one or the other and using both will cause a conflict.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-MssqlDatabase/docs/README.md",
    "definitions": {
        "ExtendedAuditingPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "LogMonitoringEnabled": {
                    "type": "boolean"
                },
                "RetentionInDays": {
                    "type": "number"
                },
                "StorageAccountAccessKey": {
                    "type": "string"
                },
                "StorageAccountAccessKeyIsSecondary": {
                    "type": "boolean"
                },
                "StorageEndpoint": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LongTermRetentionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MonthlyRetention": {
                    "type": "string",
                    "description": "The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`."
                },
                "WeekOfYear": {
                    "type": "number",
                    "description": "The week of year to take the yearly backup in an ISO 8601 format. Value has to be between `1` and `52`."
                },
                "WeeklyRetention": {
                    "type": "string",
                    "description": "The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`."
                },
                "YearlyRetention": {
                    "type": "string",
                    "description": "The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`."
                }
            },
            "required": []
        },
        "ShortTermRetentionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RetentionDays": {
                    "type": "number",
                    "description": "Point In Time Restore configuration. Value has to be between `7` and `35`."
                }
            },
            "required": [
                "RetentionDays"
            ]
        },
        "ThreatDetectionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DisabledAlerts": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`."
                },
                "EmailAccountAdmins": {
                    "type": "string",
                    "description": "Should the account administrators be emailed when this alert is triggered?."
                },
                "EmailAddresses": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses which alerts should be sent to."
                },
                "RetentionDays": {
                    "type": "number",
                    "description": "Specifies the number of days to keep in the Threat Detection audit logs."
                },
                "State": {
                    "type": "string",
                    "description": "The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`."
                },
                "StorageAccountAccessKey": {
                    "type": "string",
                    "description": "Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`."
                },
                "StorageEndpoint": {
                    "type": "string",
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`."
                },
                "UseServerDefault": {
                    "type": "string",
                    "description": "Should the default server policy be used? Defaults to `Disabled`."
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoPauseDelayInMinutes": {
            "type": "number",
            "description": "Time in minutes after which database is automatically paused. A value of `-1` means that automatic pause is disabled. This property is only settable for General Purpose Serverless databases."
        },
        "Collation": {
            "type": "string",
            "description": "Specifies the collation of the database. Changing this forces a new resource to be created."
        },
        "CreateMode": {
            "type": "string",
            "description": "The create mode of the database. Possible values are `Copy`, `Default`, `OnlineSecondary`, `PointInTimeRestore`, `Recovery`, `Restore`, `RestoreExternalBackup`, `RestoreExternalBackupSecondary`, `RestoreLongTermRetentionBackup` and `Secondary`."
        },
        "CreationSourceDatabaseId": {
            "type": "string",
            "description": "The id of the source database to be referred to create the new database. This should only be used for databases with `create_mode` values that use another database as reference. Changing this forces a new resource to be created."
        },
        "ElasticPoolId": {
            "type": "string",
            "description": "Specifies the ID of the elastic pool containing this database."
        },
        "ExtendedAuditingPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExtendedAuditingPolicyDefinition"
            },
            "description": "A `extended_auditing_policy` block as defined below."
        },
        "GeoBackupEnabled": {
            "type": "boolean",
            "description": "A boolean that specifies if the Geo Backup Policy is enabled."
        },
        "Id": {
            "type": "string"
        },
        "LicenseType": {
            "type": "string",
            "description": "Specifies the license type applied to this database. Possible values are `LicenseIncluded` and `BasePrice`."
        },
        "MaxSizeGb": {
            "type": "number",
            "description": "The max size of the database in gigabytes."
        },
        "MinCapacity": {
            "type": "number",
            "description": "Minimal capacity that database will always have allocated, if not paused. This property is only settable for General Purpose Serverless databases."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Ms SQL Database. Changing this forces a new resource to be created."
        },
        "ReadReplicaCount": {
            "type": "number",
            "description": "The number of readonly secondary replicas associated with the database to which readonly application intent connections may be routed. This property is only settable for Hyperscale edition databases."
        },
        "ReadScale": {
            "type": "boolean",
            "description": "If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica. This property is only settable for Premium and Business Critical databases."
        },
        "RecoverDatabaseId": {
            "type": "string",
            "description": "The ID of the database to be recovered. This property is only applicable when the `create_mode` is `Recovery`."
        },
        "RestoreDroppedDatabaseId": {
            "type": "string",
            "description": "The ID of the database to be restored. This property is only applicable when the `create_mode` is `Restore`."
        },
        "RestorePointInTime": {
            "type": "string",
            "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. This property is only settable for `create_mode`= `PointInTimeRestore`  databases."
        },
        "SampleName": {
            "type": "string",
            "description": "Specifies the name of the sample schema to apply when creating this database. Possible value is `AdventureWorksLT`."
        },
        "ServerId": {
            "type": "string",
            "description": "The id of the Ms SQL Server on which to create the database. Changing this forces a new resource to be created."
        },
        "SkuName": {
            "type": "string",
            "description": "Specifies the name of the sku used by the database. Changing this forces a new resource to be created. For example, `GP_S_Gen5_2`,`HS_Gen4_1`,`BC_Gen5_2`, `ElasticPool`, `Basic`,`S0`, `P2` ,`DW100c`, `DS100`."
        },
        "StorageAccountType": {
            "type": "string",
            "description": "Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created.  Possible values are `GRS`, `LRS` and `ZRS`.  The default value is `GRS`."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "ZoneRedundant": {
            "type": "boolean",
            "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones. This property is only settable for Premium and Business Critical databases."
        },
        "LongTermRetentionPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LongTermRetentionPolicyDefinition"
            },
            "maxItems": 1
        },
        "ShortTermRetentionPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ShortTermRetentionPolicyDefinition"
            },
            "maxItems": 1
        },
        "ThreatDetectionPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ThreatDetectionPolicyDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "ServerId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/ThreatDetectionPolicyDefinition/StorageAccountAccessKey"
    ]
}