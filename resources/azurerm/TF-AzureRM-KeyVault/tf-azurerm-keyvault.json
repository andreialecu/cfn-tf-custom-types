{
    "typeName": "TF::AzureRM::KeyVault",
    "description": "Manages a Key Vault.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-KeyVault/docs/README.md",
    "definitions": {
        "AccessPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ApplicationId": {
                    "type": "string"
                },
                "CertificatePermissions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "KeyPermissions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "ObjectId": {
                    "type": "string"
                },
                "SecretPermissions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "StoragePermissions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "TenantId": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ContactDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Email": {
                    "type": "string",
                    "description": "E-mail address of the contact."
                },
                "Name": {
                    "type": "string",
                    "description": "Name of the contact."
                },
                "Phone": {
                    "type": "string",
                    "description": "Phone number of the contact."
                }
            },
            "required": [
                "Email"
            ]
        },
        "NetworkAclsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Bypass": {
                    "type": "string",
                    "description": "Specifies which traffic can bypass the network rules. Possible values are `AzureServices` and `None`."
                },
                "DefaultAction": {
                    "type": "string",
                    "description": "The Default Action to use when no rules match from `ip_rules` / `virtual_network_subnet_ids`. Possible values are `Allow` and `Deny`."
                },
                "IpRules": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault."
                },
                "VirtualNetworkSubnetIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more Subnet ID's which should be able to access this Key Vault."
                }
            },
            "required": [
                "Bypass",
                "DefaultAction"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AccessPolicyDefinition"
            },
            "description": "[A list](/docs/configuration/attr-as-blocks.html) of up to 16 objects describing access policies, as described below."
        },
        "EnableRbacAuthorization": {
            "type": "boolean",
            "description": "Boolean flag to specify whether Azure Key Vault uses Role Based Access Control (RBAC) for authorization of data actions. Defaults to `false`."
        },
        "EnabledForDeployment": {
            "type": "boolean",
            "description": "Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. Defaults to `false`."
        },
        "EnabledForDiskEncryption": {
            "type": "boolean",
            "description": "Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. Defaults to `false`."
        },
        "EnabledForTemplateDeployment": {
            "type": "boolean",
            "description": "Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault. Defaults to `false`."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Key Vault. Changing this forces a new resource to be created."
        },
        "PurgeProtectionEnabled": {
            "type": "boolean",
            "description": "Is Purge Protection enabled for this Key Vault? Defaults to `false`."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created."
        },
        "SkuName": {
            "type": "string",
            "description": "The Name of the SKU used for this Key Vault. Possible values are `standard` and `premium`."
        },
        "SoftDeleteEnabled": {
            "type": "boolean"
        },
        "SoftDeleteRetentionDays": {
            "type": "number",
            "description": "The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` (the default) days."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "TenantId": {
            "type": "string",
            "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "VaultUri": {
            "type": "string"
        },
        "Contact": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ContactDefinition"
            }
        },
        "NetworkAcls": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkAclsDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName",
        "SkuName",
        "TenantId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/VaultUri"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}