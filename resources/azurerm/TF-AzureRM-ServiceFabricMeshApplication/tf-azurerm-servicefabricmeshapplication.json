{
    "typeName": "TF::AzureRM::ServiceFabricMeshApplication",
    "description": "Manages a Service Fabric Mesh Application.\n\n!> **Note:** Service Fabric Mesh is being retired on `2021-04-28` and **new Clusters can no longer be provisioned**. More information about [the retirement can be found here](https://azure.microsoft.com/en-us/updates/azure-service-fabric-mesh-preview-retirement/). Azure recommends migrating to either a [Azure Container Instances](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/container_group), [Azure Kubernetes Service](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster) or [a Service Fabric Managed Cluster](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/service_fabric_cluster).\n\n!> **Note:** **This resource is deprecated** and will be removed in version 3.0 of the Azure Provider.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-ServiceFabricMeshApplication/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ServiceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the service resource."
                },
                "OsType": {
                    "type": "string",
                    "description": "The operating system required by the code in service. Valid values are `Linux` or `Windows`."
                },
                "CodePackage": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/CodePackageDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "Name",
                "OsType"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CodePackageDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ImageName": {
                    "type": "string",
                    "description": "The Container image the code package will use."
                },
                "Name": {
                    "type": "string",
                    "description": "The name of the code package."
                },
                "Resources": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ResourcesDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "ImageName",
                "Name"
            ]
        },
        "ResourcesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Limits": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LimitsDefinition"
                    },
                    "maxItems": 1
                },
                "Requests": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/RequestsDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "LimitsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cpu": {
                    "type": "number",
                    "description": "The maximum number of CPU cores the container can use."
                },
                "Memory": {
                    "type": "number",
                    "description": "The maximum memory request in GB the container can use."
                }
            },
            "required": [
                "Cpu",
                "Memory"
            ]
        },
        "RequestsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cpu": {
                    "type": "number",
                    "description": "The minimum number of CPU cores the container requires."
                },
                "Memory": {
                    "type": "number",
                    "description": "The minimum memory request in GB the container requires."
                }
            },
            "required": [
                "Cpu",
                "Memory"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the Azure Region where the Service Fabric Mesh Application should exist. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Service Fabric Mesh Application. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group in which the Service Fabric Mesh Application exists. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Service": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ServiceDefinition"
            },
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}