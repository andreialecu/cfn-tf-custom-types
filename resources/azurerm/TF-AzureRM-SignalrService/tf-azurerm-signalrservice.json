{
    "typeName": "TF::AzureRM::SignalrService",
    "description": "Manages an Azure SignalR service.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-SignalrService/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "CorsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowedOrigins": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls."
                }
            },
            "required": [
                "AllowedOrigins"
            ]
        },
        "FeaturesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Flag": {
                    "type": "string",
                    "description": "The kind of Feature. Possible values are `EnableConnectivityLogs`, `EnableMessagingLogs`, and `ServiceMode`."
                },
                "Value": {
                    "type": "string",
                    "description": "A value of a feature flag. Possible values are `Classic`, `Default` and `Serverless`."
                }
            },
            "required": [
                "Flag",
                "Value"
            ]
        },
        "SkuDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Capacity": {
                    "type": "number",
                    "description": "Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `5`, `10`, `20`, `50` and `100`."
                },
                "Name": {
                    "type": "string",
                    "description": "Specifies which tier to use. Valid values are `Free_F1` and `Standard_S1`."
                }
            },
            "required": [
                "Capacity",
                "Name"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "UpstreamEndpointDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CategoryPattern": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The categories to match on, or `*` for all."
                },
                "EventPattern": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The events to match on, or `*` for all."
                },
                "HubPattern": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The hubs to match on, or `*` for all."
                },
                "UrlTemplate": {
                    "type": "string",
                    "description": "The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`."
                }
            },
            "required": [
                "CategoryPattern",
                "EventPattern",
                "HubPattern",
                "UrlTemplate"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Hostname": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the SignalR service. Changing this forces a new resource to be created."
        },
        "PrimaryAccessKey": {
            "type": "string"
        },
        "PrimaryConnectionString": {
            "type": "string"
        },
        "PublicPort": {
            "type": "number"
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the SignalR service. Changing this forces a new resource to be created."
        },
        "SecondaryAccessKey": {
            "type": "string"
        },
        "SecondaryConnectionString": {
            "type": "string"
        },
        "ServerPort": {
            "type": "number"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Cors": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CorsDefinition"
            }
        },
        "Features": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FeaturesDefinition"
            }
        },
        "Sku": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SkuDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        },
        "UpstreamEndpoint": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/UpstreamEndpointDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Hostname",
        "/properties/Id",
        "/properties/IpAddress",
        "/properties/PrimaryAccessKey",
        "/properties/PrimaryConnectionString",
        "/properties/PublicPort",
        "/properties/SecondaryAccessKey",
        "/properties/SecondaryConnectionString",
        "/properties/ServerPort"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrimaryAccessKey",
        "/properties/PrimaryConnectionString",
        "/properties/SecondaryAccessKey",
        "/properties/SecondaryConnectionString"
    ]
}