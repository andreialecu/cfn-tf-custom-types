{
    "typeName": "TF::AzureRM::MssqlElasticpool",
    "description": "Allows you to manage an Azure SQL Elastic Pool via the `v3.0` API which allows for `vCore` and `DTU` based configurations.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-MssqlElasticpool/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "PerDatabaseSettingsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaxCapacity": {
                    "type": "number",
                    "description": "The maximum capacity any one database can consume."
                },
                "MinCapacity": {
                    "type": "number",
                    "description": "The minimum capacity all databases are guaranteed."
                }
            },
            "required": [
                "MaxCapacity",
                "MinCapacity"
            ]
        },
        "SkuDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Capacity": {
                    "type": "number",
                    "description": "The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools)."
                },
                "Family": {
                    "type": "string",
                    "description": "The `family` of hardware `Gen4` or `Gen5`."
                },
                "Name": {
                    "type": "string",
                    "description": "Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern."
                },
                "Tier": {
                    "type": "string",
                    "description": "The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools)."
                }
            },
            "required": [
                "Capacity",
                "Name",
                "Tier"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LicenseType": {
            "type": "string",
            "description": "Specifies the license type applied to this database. Possible values are `LicenseIncluded` and `BasePrice`."
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "MaxSizeBytes": {
            "type": "number",
            "description": "The max data size of the elastic pool in bytes. Conflicts with `max_size_gb`."
        },
        "MaxSizeGb": {
            "type": "number",
            "description": "The max data size of the elastic pool in gigabytes. Conflicts with `max_size_bytes`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the elastic pool. This needs to be globally unique. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the elastic pool. This must be the same as the resource group of the underlying SQL server."
        },
        "ServerName": {
            "type": "string",
            "description": "The name of the SQL Server on which to create the elastic pool. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "ZoneRedundant": {
            "type": "boolean",
            "description": "Whether or not this elastic pool is zone redundant. `tier` needs to be `Premium` for `DTU` based  or `BusinessCritical` for `vCore` based `sku`. Defaults to `false`."
        },
        "PerDatabaseSettings": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PerDatabaseSettingsDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Sku": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SkuDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName",
        "ServerName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}