{
    "typeName": "TF::AzureRM::DataFactoryDatasetDelimitedText",
    "description": "Manages an Azure Delimited Text Dataset inside an Azure Data Factory.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-DataFactoryDatasetDelimitedText/docs/README.md",
    "definitions": {
        "AdditionalPropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AzureBlobFsLocationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FileSystem": {
                    "type": "string",
                    "description": "The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file."
                },
                "Filename": {
                    "type": "string",
                    "description": "The filename of the file."
                },
                "Path": {
                    "type": "string",
                    "description": "The folder path to the file."
                }
            },
            "required": [
                "FileSystem"
            ]
        },
        "AzureBlobStorageLocationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Container": {
                    "type": "string",
                    "description": "The container on the Azure Blob Storage Account hosting the file."
                },
                "Filename": {
                    "type": "string",
                    "description": "The filename of the file."
                },
                "Path": {
                    "type": "string",
                    "description": "The folder path to the file."
                }
            },
            "required": [
                "Container",
                "Filename",
                "Path"
            ]
        },
        "HttpServerLocationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Filename": {
                    "type": "string",
                    "description": "The filename of the file on the web server."
                },
                "Path": {
                    "type": "string",
                    "description": "The folder path to the file on the web server."
                },
                "RelativeUrl": {
                    "type": "string",
                    "description": "The base URL to the web server hosting the file."
                }
            },
            "required": [
                "Filename",
                "Path",
                "RelativeUrl"
            ]
        },
        "SchemaColumnDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Description": {
                    "type": "string",
                    "description": "The description of the column."
                },
                "Name": {
                    "type": "string",
                    "description": "The name of the column."
                },
                "Type": {
                    "type": "string",
                    "description": "Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive."
                }
            },
            "required": [
                "Name"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdditionalProperties": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/AdditionalPropertiesDefinition"
            },
            "description": "A map of additional properties to associate with the Data Factory Dataset."
        },
        "Annotations": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of tags that can be used for describing the Data Factory Dataset."
        },
        "ColumnDelimiter": {
            "type": "string",
            "description": "The column delimiter."
        },
        "CompressionCodec": {
            "type": "string",
            "description": "The compression codec used to read/write text files. Valid values are `bzip2`, `gzip`, `deflate`, `ZipDeflate`, `TarGzip`, `Tar`, `snappy`, or `lz4`. Please note these values are case sensitive."
        },
        "CompressionLevel": {
            "type": "string",
            "description": "The compression ratio for the Data Factory Dataset. Valid values are `Fastest` or `Optimal`. Please note these values are case sensitive."
        },
        "DataFactoryName": {
            "type": "string",
            "description": "The Data Factory name in which to associate the Dataset with. Changing this forces a new resource."
        },
        "Description": {
            "type": "string",
            "description": "The description for the Data Factory Dataset."
        },
        "Encoding": {
            "type": "string",
            "description": "The encoding format for the file."
        },
        "EscapeCharacter": {
            "type": "string",
            "description": "The escape character."
        },
        "FirstRowAsHeader": {
            "type": "boolean",
            "description": "When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data."
        },
        "Folder": {
            "type": "string",
            "description": "The folder that this Dataset is in. If not specified, the Dataset will appear at the root level."
        },
        "Id": {
            "type": "string"
        },
        "LinkedServiceName": {
            "type": "string",
            "description": "The Data Factory Linked Service name in which to associate the Dataset with."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions."
        },
        "NullValue": {
            "type": "string",
            "description": "The null value string."
        },
        "Parameters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ParametersDefinition"
            },
            "description": "A map of parameters to associate with the Data Factory Dataset."
        },
        "QuoteCharacter": {
            "type": "string",
            "description": "The quote character."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the Data Factory Dataset. Changing this forces a new resource."
        },
        "RowDelimiter": {
            "type": "string",
            "description": "The row delimiter."
        },
        "AzureBlobFsLocation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AzureBlobFsLocationDefinition"
            },
            "maxItems": 1
        },
        "AzureBlobStorageLocation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AzureBlobStorageLocationDefinition"
            },
            "maxItems": 1
        },
        "HttpServerLocation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpServerLocationDefinition"
            },
            "maxItems": 1
        },
        "SchemaColumn": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SchemaColumnDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "DataFactoryName",
        "LinkedServiceName",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}