{
    "typeName": "TF::AzureRM::MssqlServerSecurityAlertPolicy",
    "description": "Manages a Security Alert Policy for a MSSQL Server.\n\n-> **NOTE** Security Alert Policy is currently only available for MS SQL databases.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-MssqlServerSecurityAlertPolicy/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DisabledAlerts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Specifies an array of alerts that are disabled. Allowed values are: `Sql_Injection`, `Sql_Injection_Vulnerability`, `Access_Anomaly`, `Data_Exfiltration`, `Unsafe_Action`."
        },
        "EmailAccountAdmins": {
            "type": "boolean",
            "description": "Boolean flag which specifies if the alert is sent to the account administrators or not. Defaults to `false`."
        },
        "EmailAddresses": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Specifies an array of e-mail addresses to which the alert is sent."
        },
        "Id": {
            "type": "string"
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the MS SQL Server. Changing this forces a new resource to be created."
        },
        "RetentionDays": {
            "type": "number",
            "description": "Specifies the number of days to keep in the Threat Detection audit logs. Defaults to `0`."
        },
        "ServerName": {
            "type": "string",
            "description": "Specifies the name of the MS SQL Server. Changing this forces a new resource to be created."
        },
        "State": {
            "type": "string",
            "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database server. Allowed values are: `Disabled`, `Enabled`."
        },
        "StorageAccountAccessKey": {
            "type": "string",
            "description": "Specifies the identifier key of the Threat Detection audit storage account."
        },
        "StorageEndpoint": {
            "type": "string",
            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ResourceGroupName",
        "ServerName",
        "State"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/StorageAccountAccessKey"
    ]
}