{
    "typeName": "TF::AzureRM::ContainerRegistryToken",
    "description": "Manages an Azure Container Registry token. Tokens are a preview feature only available in Premium SKU Container registries.\n\n```hcl\nresource \"azurerm_resource_group\" \"example\" {\n  name     = \"example-resource-group\"\n  location = \"West Europe\"\n}\n\nresource \"azurerm_container_registry\" \"example\" {\n  name                     = \"example-registry\"\n  resource_group_name      = azurerm_resource_group.example.name\n  location                 = azurerm_resource_group.example.location\n  sku                      = \"Premium\"\n  admin_enabled            = false\n  georeplication_locations = [\"East US\", \"West Europe\"]\n}\n\nresource \"azurerm_container_registry_scope_map\" \"example\" {\n  name                    = \"example-scope-map\"\n  container_registry_name = azurerm_container_registry.acr.name\n  resource_group_name     = azurerm_resource_group.rg.name\n  actions = [\n    \"repositories/repo1/content/read\",\n    \"repositories/repo1/content/create\"\n  ]\n}\n\nresource \"azurerm_container_registry_token\" \"example\" {\n  name                ...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-ContainerRegistryToken/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ContainerRegistryName": {
            "type": "string",
            "description": "The name of the Container Registry. Changing this forces a new resource to be created."
        },
        "Enabled": {
            "type": "boolean",
            "description": "Should the Container Registry token be enabled? Defaults to `true`."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the token. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the Container Registry token. Changing this forces a new resource to be created."
        },
        "ScopeMapId": {
            "type": "string",
            "description": "The ID of the Container Registry Scope Map associated with the token."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ContainerRegistryName",
        "Name",
        "ResourceGroupName",
        "ScopeMapId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}