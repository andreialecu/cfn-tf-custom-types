{
    "typeName": "TF::AzureRM::StorageAccount",
    "description": "Manages an Azure Storage Account.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-StorageAccount/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AzureFilesAuthenticationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DirectoryType": {
                    "type": "string",
                    "description": "Specifies the directory service used. Possible values are `AADDS` and `AD`."
                },
                "ActiveDirectory": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ActiveDirectoryDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "DirectoryType"
            ]
        },
        "BlobPropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ChangeFeedEnabled": {
                    "type": "boolean",
                    "description": "Is the blob service properties for change feed events enabled? Default to `false`."
                },
                "DefaultServiceVersion": {
                    "type": "string",
                    "description": "The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version. Defaults to `2020-06-12`."
                },
                "LastAccessTimeEnabled": {
                    "type": "boolean",
                    "description": "Is the last access time based tracking enabled? Default to `false`."
                },
                "VersioningEnabled": {
                    "type": "boolean",
                    "description": "Is versioning enabled? Default to `false`."
                },
                "ContainerDeleteRetentionPolicy": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ContainerDeleteRetentionPolicyDefinition"
                    },
                    "maxItems": 1
                },
                "CorsRule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CorsRuleDefinition"
                    },
                    "maxItems": 5
                },
                "DeleteRetentionPolicy": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DeleteRetentionPolicyDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "CustomDomainDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The Custom Domain Name to use for the Storage Account, which will be validated by Azure."
                },
                "UseSubdomain": {
                    "type": "boolean",
                    "description": "Should the Custom Domain Name be validated by using indirect CNAME validation?."
                }
            },
            "required": [
                "Name"
            ]
        },
        "IdentityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IdentityIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs for User Assigned Managed Identity resources to be assigned."
                },
                "Type": {
                    "type": "string",
                    "description": "Specifies the identity type of the Storage Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned,UserAssigned` (to enable both)."
                }
            },
            "required": [
                "Type"
            ]
        },
        "NetworkRulesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Bypass": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are\nany combination of `Logging`, `Metrics`, `AzureServices`, or `None`."
                },
                "DefaultAction": {
                    "type": "string",
                    "description": "Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`."
                },
                "IpRules": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed."
                },
                "VirtualNetworkSubnetIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of resource ids for subnets."
                },
                "PrivateLinkAccess": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PrivateLinkAccessDefinition"
                    }
                }
            },
            "required": [
                "DefaultAction"
            ]
        },
        "QueuePropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CorsRule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CorsRuleDefinition"
                    },
                    "maxItems": 5
                },
                "HourMetrics": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HourMetricsDefinition"
                    },
                    "maxItems": 1
                },
                "Logging": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LoggingDefinition"
                    },
                    "maxItems": 1
                },
                "MinuteMetrics": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MinuteMetricsDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "RoutingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Choice": {
                    "type": "string",
                    "description": "Specifies the kind of network routing opted by the user. Possible values are `InternetRouting` and `MicrosoftRouting`. Defaults to `MicrosoftRouting`."
                },
                "PublishInternetEndpoints": {
                    "type": "boolean",
                    "description": "Should internet routing storage endpoints be published? Defaults to `false`."
                },
                "PublishMicrosoftEndpoints": {
                    "type": "boolean",
                    "description": "Should microsoft routing storage endpoints be published? Defaults to `false`."
                }
            },
            "required": []
        },
        "SharePropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CorsRule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CorsRuleDefinition"
                    },
                    "maxItems": 5
                },
                "RetentionPolicy": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/RetentionPolicyDefinition"
                    },
                    "maxItems": 1
                },
                "Smb": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SmbDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "StaticWebsiteDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Error404Document": {
                    "type": "string",
                    "description": "The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file."
                },
                "IndexDocument": {
                    "type": "string",
                    "description": "The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive."
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ActiveDirectoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DomainGuid": {
                    "type": "string",
                    "description": "Specifies the domain GUID."
                },
                "DomainName": {
                    "type": "string",
                    "description": "Specifies the primary domain that the AD DNS server is authoritative for."
                },
                "DomainSid": {
                    "type": "string",
                    "description": "Specifies the security identifier (SID)."
                },
                "ForestName": {
                    "type": "string",
                    "description": "Specifies the Active Directory forest."
                },
                "NetbiosDomainName": {
                    "type": "string",
                    "description": "Specifies the NetBIOS domain name."
                },
                "StorageSid": {
                    "type": "string",
                    "description": "Specifies the security identifier (SID) for Azure Storage."
                }
            },
            "required": [
                "DomainGuid",
                "DomainName",
                "DomainSid",
                "ForestName",
                "NetbiosDomainName",
                "StorageSid"
            ]
        },
        "ContainerDeleteRetentionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Days": {
                    "type": "number",
                    "description": "Specifies the number of days that the container should be retained, between `1` and `365` days. Defaults to `7`."
                }
            },
            "required": []
        },
        "CorsRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowedHeaders": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of headers that are allowed to be a part of the cross-origin request."
                },
                "AllowedMethods": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of http headers that are allowed to be executed by the origin. Valid options are\n`DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`."
                },
                "AllowedOrigins": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of origin domains that will be allowed by CORS."
                },
                "ExposedHeaders": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of response headers that are exposed to CORS clients."
                },
                "MaxAgeInSeconds": {
                    "type": "number",
                    "description": "The number of seconds the client should cache a preflight response."
                }
            },
            "required": [
                "AllowedHeaders",
                "AllowedMethods",
                "AllowedOrigins",
                "ExposedHeaders",
                "MaxAgeInSeconds"
            ]
        },
        "DeleteRetentionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Days": {
                    "type": "number",
                    "description": "Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`."
                }
            },
            "required": []
        },
        "PrivateLinkAccessDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndpointResourceId": {
                    "type": "string",
                    "description": "The resource id of the resource access rule to be granted access."
                },
                "EndpointTenantId": {
                    "type": "string",
                    "description": "The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id."
                }
            },
            "required": [
                "EndpointResourceId"
            ]
        },
        "HourMetricsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "IncludeApis": {
                    "type": "boolean"
                },
                "RetentionPolicyDays": {
                    "type": "number"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": [
                "Enabled",
                "Version"
            ]
        },
        "LoggingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Delete": {
                    "type": "boolean"
                },
                "Read": {
                    "type": "boolean"
                },
                "RetentionPolicyDays": {
                    "type": "number"
                },
                "Version": {
                    "type": "string"
                },
                "Write": {
                    "type": "boolean"
                }
            },
            "required": [
                "Delete",
                "Read",
                "Version",
                "Write"
            ]
        },
        "MinuteMetricsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "IncludeApis": {
                    "type": "boolean"
                },
                "RetentionPolicyDays": {
                    "type": "number"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": [
                "Enabled",
                "Version"
            ]
        },
        "RetentionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Days": {
                    "type": "number"
                }
            },
            "required": []
        },
        "SmbDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AuthenticationTypes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "ChannelEncryptionType": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "KerberosTicketEncryptionType": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Versions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessTier": {
            "type": "string",
            "description": "Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`."
        },
        "AccountKind": {
            "type": "string",
            "description": "Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `StorageV2`."
        },
        "AccountReplicationType": {
            "type": "string",
            "description": "Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`."
        },
        "AccountTier": {
            "type": "string",
            "description": "Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created."
        },
        "AllowBlobPublicAccess": {
            "type": "boolean",
            "description": "Allow or disallow public access to all blobs or containers in the storage account. Defaults to `false`."
        },
        "EnableHttpsTrafficOnly": {
            "type": "boolean",
            "description": "Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)\nfor more information. Defaults to `true`."
        },
        "Id": {
            "type": "string"
        },
        "IsHnsEnabled": {
            "type": "boolean",
            "description": "Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created."
        },
        "LargeFileShareEnabled": {
            "type": "boolean",
            "description": "Is Large File Share Enabled?."
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "MinTlsVersion": {
            "type": "string",
            "description": "The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_0` for new storage accounts."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group."
        },
        "Nfsv3Enabled": {
            "type": "boolean",
            "description": "Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`."
        },
        "PrimaryAccessKey": {
            "type": "string"
        },
        "PrimaryBlobConnectionString": {
            "type": "string"
        },
        "PrimaryBlobEndpoint": {
            "type": "string"
        },
        "PrimaryBlobHost": {
            "type": "string"
        },
        "PrimaryConnectionString": {
            "type": "string"
        },
        "PrimaryDfsEndpoint": {
            "type": "string"
        },
        "PrimaryDfsHost": {
            "type": "string"
        },
        "PrimaryFileEndpoint": {
            "type": "string"
        },
        "PrimaryFileHost": {
            "type": "string"
        },
        "PrimaryLocation": {
            "type": "string"
        },
        "PrimaryQueueEndpoint": {
            "type": "string"
        },
        "PrimaryQueueHost": {
            "type": "string"
        },
        "PrimaryTableEndpoint": {
            "type": "string"
        },
        "PrimaryTableHost": {
            "type": "string"
        },
        "PrimaryWebEndpoint": {
            "type": "string"
        },
        "PrimaryWebHost": {
            "type": "string"
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the storage account. Changing this forces a new resource to be created."
        },
        "SecondaryAccessKey": {
            "type": "string"
        },
        "SecondaryBlobConnectionString": {
            "type": "string"
        },
        "SecondaryBlobEndpoint": {
            "type": "string"
        },
        "SecondaryBlobHost": {
            "type": "string"
        },
        "SecondaryConnectionString": {
            "type": "string"
        },
        "SecondaryDfsEndpoint": {
            "type": "string"
        },
        "SecondaryDfsHost": {
            "type": "string"
        },
        "SecondaryFileEndpoint": {
            "type": "string"
        },
        "SecondaryFileHost": {
            "type": "string"
        },
        "SecondaryLocation": {
            "type": "string"
        },
        "SecondaryQueueEndpoint": {
            "type": "string"
        },
        "SecondaryQueueHost": {
            "type": "string"
        },
        "SecondaryTableEndpoint": {
            "type": "string"
        },
        "SecondaryTableHost": {
            "type": "string"
        },
        "SecondaryWebEndpoint": {
            "type": "string"
        },
        "SecondaryWebHost": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "AzureFilesAuthentication": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AzureFilesAuthenticationDefinition"
            },
            "maxItems": 1
        },
        "BlobProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BlobPropertiesDefinition"
            },
            "maxItems": 1
        },
        "CustomDomain": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CustomDomainDefinition"
            },
            "maxItems": 1
        },
        "Identity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IdentityDefinition"
            },
            "maxItems": 1
        },
        "NetworkRules": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkRulesDefinition"
            },
            "maxItems": 1
        },
        "QueueProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/QueuePropertiesDefinition"
            },
            "maxItems": 1
        },
        "Routing": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RoutingDefinition"
            },
            "maxItems": 1
        },
        "ShareProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SharePropertiesDefinition"
            },
            "maxItems": 1
        },
        "StaticWebsite": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StaticWebsiteDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AccountReplicationType",
        "AccountTier",
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/PrimaryAccessKey",
        "/properties/PrimaryBlobConnectionString",
        "/properties/PrimaryBlobEndpoint",
        "/properties/PrimaryBlobHost",
        "/properties/PrimaryConnectionString",
        "/properties/PrimaryDfsEndpoint",
        "/properties/PrimaryDfsHost",
        "/properties/PrimaryFileEndpoint",
        "/properties/PrimaryFileHost",
        "/properties/PrimaryLocation",
        "/properties/PrimaryQueueEndpoint",
        "/properties/PrimaryQueueHost",
        "/properties/PrimaryTableEndpoint",
        "/properties/PrimaryTableHost",
        "/properties/PrimaryWebEndpoint",
        "/properties/PrimaryWebHost",
        "/properties/SecondaryAccessKey",
        "/properties/SecondaryBlobConnectionString",
        "/properties/SecondaryBlobEndpoint",
        "/properties/SecondaryBlobHost",
        "/properties/SecondaryConnectionString",
        "/properties/SecondaryDfsEndpoint",
        "/properties/SecondaryDfsHost",
        "/properties/SecondaryFileEndpoint",
        "/properties/SecondaryFileHost",
        "/properties/SecondaryLocation",
        "/properties/SecondaryQueueEndpoint",
        "/properties/SecondaryQueueHost",
        "/properties/SecondaryTableEndpoint",
        "/properties/SecondaryTableHost",
        "/properties/SecondaryWebEndpoint",
        "/properties/SecondaryWebHost"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrimaryAccessKey",
        "/properties/PrimaryBlobConnectionString",
        "/properties/PrimaryConnectionString",
        "/properties/SecondaryAccessKey",
        "/properties/SecondaryBlobConnectionString",
        "/properties/SecondaryConnectionString"
    ]
}