{
    "typeName": "TF::AzureRM::KustoEventgridDataConnection",
    "description": "Manages a Kusto (also known as Azure Data Explorer) Event Grid Data Connection",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-KustoEventgridDataConnection/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BlobStorageEventType": {
            "type": "string",
            "description": "Specifies the blob storage event type that needs to be processed. Possible\nValues are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults\nto `Microsoft.Storage.BlobCreated`."
        },
        "ClusterName": {
            "type": "string",
            "description": "Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created."
        },
        "DataFormat": {
            "type": "string",
            "description": "Specifies the data format of the EventHub messages. Allowed values: `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV` and `TXT`."
        },
        "DatabaseName": {
            "type": "string",
            "description": "Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created."
        },
        "EventhubConsumerGroupName": {
            "type": "string",
            "description": "Specifies the Event Hub consumer group this data connection will use for\ningestion. Changing this forces a new resource to be created."
        },
        "EventhubId": {
            "type": "string",
            "description": "Specifies the resource id of the Event Hub this data connection will use for ingestion.\nChanging this forces a new resource to be created."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "The location where the Kusto Database should be created. Changing this forces a new resource to be created."
        },
        "MappingRuleName": {
            "type": "string",
            "description": "Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created."
        },
        "SkipFirstRecord": {
            "type": "boolean",
            "description": "is the first record of every file ignored? Defaults to `false`."
        },
        "StorageAccountId": {
            "type": "string",
            "description": "Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created."
        },
        "TableName": {
            "type": "string",
            "description": "Specifies the target table name used for the message ingestion. Table must exist before resource is created."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterName",
        "DatabaseName",
        "EventhubConsumerGroupName",
        "EventhubId",
        "Location",
        "Name",
        "ResourceGroupName",
        "StorageAccountId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}