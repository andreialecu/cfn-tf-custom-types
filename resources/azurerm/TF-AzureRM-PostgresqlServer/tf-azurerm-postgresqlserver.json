{
    "typeName": "TF::AzureRM::PostgresqlServer",
    "description": "Manages a PostgreSQL Server.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-PostgresqlServer/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "IdentityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string",
                    "description": "The Type of Identity which should be used for this PostgreSQL Server. At this time the only possible value is `SystemAssigned`."
                }
            },
            "required": [
                "Type"
            ]
        },
        "StorageProfileDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoGrow": {
                    "type": "string"
                },
                "BackupRetentionDays": {
                    "type": "number"
                },
                "GeoRedundantBackup": {
                    "type": "string"
                },
                "StorageMb": {
                    "type": "number"
                }
            },
            "required": []
        },
        "ThreatDetectionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DisabledAlerts": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`."
                },
                "EmailAccountAdmins": {
                    "type": "boolean",
                    "description": "Should the account administrators be emailed when this alert is triggered?."
                },
                "EmailAddresses": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses which alerts should be sent to."
                },
                "Enabled": {
                    "type": "boolean",
                    "description": "Is the policy enabled?."
                },
                "RetentionDays": {
                    "type": "number",
                    "description": "Specifies the number of days to keep in the Threat Detection audit logs."
                },
                "StorageAccountAccessKey": {
                    "type": "string",
                    "description": "Specifies the identifier key of the Threat Detection audit storage account."
                },
                "StorageEndpoint": {
                    "type": "string",
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs."
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdministratorLogin": {
            "type": "string",
            "description": "The Administrator Login for the PostgreSQL Server. Required when `create_mode` is `Default`. Changing this forces a new resource to be created."
        },
        "AdministratorLoginPassword": {
            "type": "string",
            "description": "The Password associated with the `administrator_login` for the PostgreSQL Server. Required when `create_mode` is `Default`."
        },
        "AutoGrowEnabled": {
            "type": "boolean",
            "description": "Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `true`."
        },
        "BackupRetentionDays": {
            "type": "number",
            "description": "Backup retention days for the server, supported values are between `7` and `35` days."
        },
        "CreateMode": {
            "type": "string",
            "description": "The creation mode. Can be used to restore or replicate existing servers. Possible values are `Default`, `Replica`, `GeoRestore`, and `PointInTimeRestore`. Defaults to `Default.`."
        },
        "CreationSourceServerId": {
            "type": "string",
            "description": "For creation modes other then default the source server ID to use."
        },
        "Fqdn": {
            "type": "string"
        },
        "GeoRedundantBackupEnabled": {
            "type": "boolean",
            "description": "Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created."
        },
        "Id": {
            "type": "string"
        },
        "InfrastructureEncryptionEnabled": {
            "type": "boolean",
            "description": "Whether or not infrastructure is encrypted for this server. Defaults to `false`. Changing this forces a new resource to be created."
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created."
        },
        "PublicNetworkAccessEnabled": {
            "type": "boolean",
            "description": "Whether or not public network access is allowed for this server. Defaults to `true`."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the PostgreSQL Server. Changing this forces a new resource to be created."
        },
        "RestorePointInTime": {
            "type": "string",
            "description": "When `create_mode` is `PointInTimeRestore` the point in time to restore from `creation_source_server_id`."
        },
        "SkuName": {
            "type": "string",
            "description": "Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. `B_Gen4_1`, `GP_Gen5_8`). For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/singleserver/servers/create#sku)."
        },
        "SslEnforcement": {
            "type": "string"
        },
        "SslEnforcementEnabled": {
            "type": "boolean",
            "description": "Specifies if SSL should be enforced on connections. Possible values are `true` and `false`."
        },
        "SslMinimalTlsVersionEnforced": {
            "type": "string",
            "description": "The mimimun TLS version to support on the sever. Possible values are `TLSEnforcementDisabled`, `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLSEnforcementDisabled`."
        },
        "StorageMb": {
            "type": "number",
            "description": "Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `16777216` MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile)."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Version": {
            "type": "string",
            "description": "Specifies the version of PostgreSQL to use. Valid values are `9.5`, `9.6`, `10`, `10.0`, and `11`. Changing this forces a new resource to be created."
        },
        "Identity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IdentityDefinition"
            },
            "maxItems": 1
        },
        "StorageProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StorageProfileDefinition"
            },
            "maxItems": 1
        },
        "ThreatDetectionPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ThreatDetectionPolicyDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName",
        "SkuName",
        "Version"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Fqdn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AdministratorLoginPassword",
        "/definitions/ThreatDetectionPolicyDefinition/StorageAccountAccessKey"
    ]
}