{
    "typeName": "TF::AzureRM::ApplicationGateway",
    "description": "Manages an Application Gateway.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-ApplicationGateway/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AuthenticationCertificateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the Authentication Certificate."
                }
            },
            "required": [
                "Name"
            ]
        },
        "AutoscaleConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaxCapacity": {
                    "type": "number",
                    "description": "Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`."
                },
                "MinCapacity": {
                    "type": "number",
                    "description": "Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`."
                }
            },
            "required": [
                "MinCapacity"
            ]
        },
        "BackendAddressPoolDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Fqdns": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of FQDN's which should be part of the Backend Address Pool."
                },
                "IpAddresses": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP Addresses which should be part of the Backend Address Pool."
                },
                "Name": {
                    "type": "string",
                    "description": "The name of the Backend Address Pool."
                }
            },
            "required": [
                "Name"
            ]
        },
        "BackendHttpSettingsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AffinityCookieName": {
                    "type": "string",
                    "description": "The name of the affinity cookie."
                },
                "CookieBasedAffinity": {
                    "type": "string",
                    "description": "Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`."
                },
                "HostName": {
                    "type": "string",
                    "description": "Host header to be sent to the backend servers. Cannot be set if `pick_host_name_from_backend_address` is set to `true`."
                },
                "Name": {
                    "type": "string",
                    "description": "The name of the Backend HTTP Settings Collection."
                },
                "Path": {
                    "type": "string",
                    "description": "The Path which should be used as a prefix for all HTTP requests."
                },
                "PickHostNameFromBackendAddress": {
                    "type": "boolean",
                    "description": "Whether host header should be picked from the host name of the backend server. Defaults to `false`."
                },
                "Port": {
                    "type": "number",
                    "description": "The port which should be used for this Backend HTTP Settings Collection."
                },
                "ProbeName": {
                    "type": "string",
                    "description": "The name of an associated HTTP Probe."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The Protocol which should be used. Possible values are `Http` and `Https`."
                },
                "RequestTimeout": {
                    "type": "number",
                    "description": "The request timeout in seconds, which must be between 1 and 86400 seconds."
                },
                "TrustedRootCertificateNames": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of `trusted_root_certificate` names."
                },
                "AuthenticationCertificate": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AuthenticationCertificateDefinition"
                    }
                },
                "ConnectionDraining": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ConnectionDrainingDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "CookieBasedAffinity",
                "Name",
                "Port",
                "Protocol"
            ]
        },
        "CustomErrorConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CustomErrorPageUrl": {
                    "type": "string",
                    "description": "Error page URL of the application gateway customer error."
                },
                "StatusCode": {
                    "type": "string",
                    "description": "Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`."
                }
            },
            "required": [
                "CustomErrorPageUrl",
                "StatusCode"
            ]
        },
        "FrontendIpConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the Frontend IP Configuration."
                },
                "PrivateIpAddress": {
                    "type": "string",
                    "description": "The Private IP Address to use for the Application Gateway."
                },
                "PrivateIpAddressAllocation": {
                    "type": "string",
                    "description": "The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`."
                },
                "PublicIpAddressId": {
                    "type": "string",
                    "description": "The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/en-us/azure/virtual-network/public-ip-addresses#application-gateways) for details."
                },
                "SubnetId": {
                    "type": "string",
                    "description": "The ID of the Subnet."
                }
            },
            "required": [
                "Name"
            ]
        },
        "FrontendPortDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the Frontend Port."
                },
                "Port": {
                    "type": "number",
                    "description": "The port used for this Frontend Port."
                }
            },
            "required": [
                "Name",
                "Port"
            ]
        },
        "GatewayIpConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The Name of this Gateway IP Configuration."
                },
                "SubnetId": {
                    "type": "string",
                    "description": "The ID of the Subnet which the Application Gateway should be connected to."
                }
            },
            "required": [
                "Name",
                "SubnetId"
            ]
        },
        "HttpListenerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FirewallPolicyId": {
                    "type": "string",
                    "description": "The ID of the Web Application Firewall Policy which should be used as a HTTP Listener."
                },
                "FrontendIpConfigurationName": {
                    "type": "string",
                    "description": "The Name of the Frontend IP Configuration used for this HTTP Listener."
                },
                "FrontendPortName": {
                    "type": "string",
                    "description": "The Name of the Frontend Port use for this HTTP Listener."
                },
                "HostName": {
                    "type": "string",
                    "description": "The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'."
                },
                "HostNames": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the HTTP Listener."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The Protocol to use for this HTTP Listener. Possible values are `Http` and `Https`."
                },
                "RequireSni": {
                    "type": "boolean",
                    "description": "Should Server Name Indication be Required? Defaults to `false`."
                },
                "SslCertificateName": {
                    "type": "string",
                    "description": "The name of the associated SSL Certificate which should be used for this HTTP Listener."
                },
                "CustomErrorConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CustomErrorConfigurationDefinition"
                    }
                }
            },
            "required": [
                "FrontendIpConfigurationName",
                "FrontendPortName",
                "Name",
                "Protocol"
            ]
        },
        "IdentityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IdentityIds": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list with a single user managed identity id to be assigned to the Application Gateway."
                },
                "Type": {
                    "type": "string",
                    "description": "The Managed Service Identity Type of this Application Gateway. The only possible value is `UserAssigned`. Defaults to `UserAssigned`."
                }
            },
            "required": [
                "IdentityIds"
            ]
        },
        "ProbeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Host": {
                    "type": "string",
                    "description": "The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as \u2018127.0.0.1\u2019, unless otherwise configured in custom probe. Cannot be set if `pick_host_name_from_backend_http_settings` is set to `true`."
                },
                "Interval": {
                    "type": "number",
                    "description": "The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds."
                },
                "MinimumServers": {
                    "type": "number",
                    "description": "The minimum number of servers that are always marked as healthy. Defaults to `0`."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the Probe."
                },
                "Path": {
                    "type": "string",
                    "description": "The Path used for this Probe."
                },
                "PickHostNameFromBackendHttpSettings": {
                    "type": "boolean",
                    "description": "Whether the host header should be picked from the backend http settings. Defaults to `false`."
                },
                "Port": {
                    "type": "number",
                    "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The Protocol used for this Probe. Possible values are `Http` and `Https`."
                },
                "Timeout": {
                    "type": "number",
                    "description": "The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds."
                },
                "UnhealthyThreshold": {
                    "type": "number",
                    "description": "The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 - 20 seconds."
                },
                "Match": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MatchDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Interval",
                "Name",
                "Path",
                "Protocol",
                "Timeout",
                "UnhealthyThreshold"
            ]
        },
        "RedirectConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IncludePath": {
                    "type": "boolean",
                    "description": "Whether or not to include the path in the redirected Url. Defaults to `false`."
                },
                "IncludeQueryString": {
                    "type": "boolean",
                    "description": "Whether or not to include the query string in the redirected Url. Default to `false`."
                },
                "Name": {
                    "type": "string",
                    "description": "Unique name of the redirect configuration block."
                },
                "RedirectType": {
                    "type": "string",
                    "description": "The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`."
                },
                "TargetListenerName": {
                    "type": "string",
                    "description": "The name of the listener to redirect to. Cannot be set if `target_url` is set."
                },
                "TargetUrl": {
                    "type": "string",
                    "description": "The Url to redirect the request to. Cannot be set if `target_listener_name` is set."
                }
            },
            "required": [
                "Name",
                "RedirectType"
            ]
        },
        "RequestRoutingRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BackendAddressPoolName": {
                    "type": "string",
                    "description": "The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if `redirect_configuration_name` is set."
                },
                "BackendHttpSettingsName": {
                    "type": "string",
                    "description": "The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if `redirect_configuration_name` is set."
                },
                "HttpListenerName": {
                    "type": "string",
                    "description": "The Name of the HTTP Listener which should be used for this Routing Rule."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of this Request Routing Rule."
                },
                "RedirectConfigurationName": {
                    "type": "string",
                    "description": "The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either `backend_address_pool_name` or `backend_http_settings_name` is set."
                },
                "RewriteRuleSetName": {
                    "type": "string",
                    "description": "The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs."
                },
                "RuleType": {
                    "type": "string",
                    "description": "The Type of Routing that should be used for this Rule. Possible values are `Basic` and `PathBasedRouting`."
                },
                "UrlPathMapName": {
                    "type": "string",
                    "description": "The Name of the URL Path Map which should be associated with this Routing Rule."
                }
            },
            "required": [
                "HttpListenerName",
                "Name",
                "RuleType"
            ]
        },
        "RewriteRuleSetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Unique name of the rewrite rule set block."
                },
                "RewriteRule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/RewriteRuleDefinition"
                    }
                }
            },
            "required": [
                "Name"
            ]
        },
        "SkuDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Capacity": {
                    "type": "number",
                    "description": "The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between 1 and 32, and 1 to 125 for a V2 SKU. This property is optional if `autoscale_configuration` is set."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the SKU to use for this Application Gateway. Possible values are `Standard_Small`, `Standard_Medium`, `Standard_Large`, `Standard_v2`, `WAF_Medium`, `WAF_Large`, and `WAF_v2`."
                },
                "Tier": {
                    "type": "string",
                    "description": "The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`."
                }
            },
            "required": [
                "Name",
                "Tier"
            ]
        },
        "SslCertificateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Data": {
                    "type": "string",
                    "description": "PFX certificate. Required if `key_vault_secret_id` is not set."
                },
                "KeyVaultSecretId": {
                    "type": "string",
                    "description": "Secret Id of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if `data` is not set."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the SSL certificate that is unique within this Application Gateway."
                },
                "Password": {
                    "type": "string",
                    "description": "Password for the pfx file specified in data.  Required if `data` is set."
                }
            },
            "required": [
                "Name"
            ]
        },
        "SslPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CipherSuites": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "DisabledProtocols": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`."
                },
                "MinProtocolVersion": {
                    "type": "string"
                },
                "PolicyName": {
                    "type": "string"
                },
                "PolicyType": {
                    "type": "string",
                    "description": "The Type of the Policy. Possible values are `Predefined` and `Custom`."
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "TrustedRootCertificateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Data": {
                    "type": "string",
                    "description": "The contents of the Trusted Root Certificate which should be used."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the Trusted Root Certificate to use."
                }
            },
            "required": [
                "Data",
                "Name"
            ]
        },
        "UrlPathMapDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DefaultBackendAddressPoolName": {
                    "type": "string",
                    "description": "The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set."
                },
                "DefaultBackendHttpSettingsName": {
                    "type": "string",
                    "description": "The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set."
                },
                "DefaultRedirectConfigurationName": {
                    "type": "string",
                    "description": "The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `default_backend_address_pool_name` or `default_backend_http_settings_name` is set."
                },
                "DefaultRewriteRuleSetName": {
                    "type": "string",
                    "description": "The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs."
                },
                "Name": {
                    "type": "string",
                    "description": "The Name of the URL Path Map."
                },
                "PathRule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PathRuleDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "Name"
            ]
        },
        "WafConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Is the Web Application Firewall be enabled?."
                },
                "FileUploadLimitMb": {
                    "type": "number",
                    "description": "The File Upload Limit in MB. Accepted values are in the range `1`MB to `750`MB for the `WAF_v2` SKU, and `1`MB to `500`MB for all other SKUs. Defaults to `100`MB."
                },
                "FirewallMode": {
                    "type": "string",
                    "description": "The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`."
                },
                "MaxRequestBodySizeKb": {
                    "type": "number",
                    "description": "The Maximum Request Body Size in KB.  Accepted values are in the range `1`KB to `128`KB.  Defaults to `128`KB."
                },
                "RequestBodyCheck": {
                    "type": "boolean",
                    "description": "Is Request Body Inspection enabled?  Defaults to `true`."
                },
                "RuleSetType": {
                    "type": "string",
                    "description": "The Type of the Rule Set used for this Web Application Firewall. Currently, only `OWASP` is supported."
                },
                "RuleSetVersion": {
                    "type": "string",
                    "description": "The Version of the Rule Set used for this Web Application Firewall. Possible values are `2.2.9`, `3.0`, and `3.1`."
                },
                "DisabledRuleGroup": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DisabledRuleGroupDefinition"
                    }
                },
                "Exclusion": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ExclusionDefinition"
                    }
                }
            },
            "required": [
                "Enabled",
                "FirewallMode",
                "RuleSetVersion"
            ]
        },
        "ConnectionDrainingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DrainTimeoutSec": {
                    "type": "number",
                    "description": "The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds."
                },
                "Enabled": {
                    "type": "boolean",
                    "description": "If connection draining is enabled or not."
                }
            },
            "required": [
                "DrainTimeoutSec",
                "Enabled"
            ]
        },
        "MatchDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Body": {
                    "type": "string"
                },
                "StatusCode": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "RewriteRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Unique name of the rewrite rule block."
                },
                "RuleSequence": {
                    "type": "number",
                    "description": "Rule sequence of the rewrite rule that determines the order of execution in a set."
                },
                "Condition": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ConditionDefinition"
                    }
                },
                "RequestHeaderConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/RequestHeaderConfigurationDefinition"
                    }
                },
                "ResponseHeaderConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ResponseHeaderConfigurationDefinition"
                    }
                },
                "Url": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/UrlDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Name",
                "RuleSequence"
            ]
        },
        "PathRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BackendAddressPoolName": {
                    "type": "string"
                },
                "BackendHttpSettingsName": {
                    "type": "string"
                },
                "FirewallPolicyId": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Paths": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "RedirectConfigurationName": {
                    "type": "string"
                },
                "RewriteRuleSetName": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Paths"
            ]
        },
        "DisabledRuleGroupDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RuleGroupName": {
                    "type": "string",
                    "description": "The rule group where specific rules should be disabled. Accepted values are:  `crs_20_protocol_violations`, `crs_21_protocol_anomalies`, `crs_23_request_limits`, `crs_30_http_policy`, `crs_35_bad_robots`, `crs_40_generic_attacks`, `crs_41_sql_injection_attacks`, `crs_41_xss_attacks`, `crs_42_tight_security`, `crs_45_trojans`, `General`, `REQUEST-911-METHOD-ENFORCEMENT`, `REQUEST-913-SCANNER-DETECTION`, `REQUEST-920-PROTOCOL-ENFORCEMENT`, `REQUEST-921-PROTOCOL-ATTACK`, `REQUEST-930-APPLICATION-ATTACK-LFI`, `REQUEST-931-APPLICATION-ATTACK-RFI`, `REQUEST-932-APPLICATION-ATTACK-RCE`, `REQUEST-933-APPLICATION-ATTACK-PHP`, `REQUEST-941-APPLICATION-ATTACK-XSS`, `REQUEST-942-APPLICATION-ATTACK-SQLI`, `REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION`."
                },
                "Rules": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "number"
                    },
                    "description": "A list of rules which should be disabled in that group. Disables all rules in the specified group if `rules` is not specified."
                }
            },
            "required": [
                "RuleGroupName"
            ]
        },
        "ExclusionDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MatchVariable": {
                    "type": "string",
                    "description": "Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are `RequestHeaderNames`, `RequestArgNames` and `RequestCookieNames`."
                },
                "Selector": {
                    "type": "string",
                    "description": "String value which will be used for the filter operation. If empty will exclude all traffic on this `match_variable`."
                },
                "SelectorMatchOperator": {
                    "type": "string",
                    "description": "Operator which will be used to search in the variable content. Possible values are `Equals`, `StartsWith`, `EndsWith`, `Contains`. If empty will exclude all traffic on this `match_variable`."
                }
            },
            "required": [
                "MatchVariable"
            ]
        },
        "ConditionDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IgnoreCase": {
                    "type": "boolean",
                    "description": "Perform a case in-sensitive comparison. Defaults to `false`."
                },
                "Negate": {
                    "type": "boolean",
                    "description": "Negate the result of the condition evaluation. Defaults to `false`."
                },
                "Pattern": {
                    "type": "string",
                    "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition."
                },
                "Variable": {
                    "type": "string",
                    "description": "The [variable](https://docs.microsoft.com/en-us/azure/application-gateway/rewrite-http-headers#server-variables) of the condition."
                }
            },
            "required": [
                "Pattern",
                "Variable"
            ]
        },
        "RequestHeaderConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HeaderName": {
                    "type": "string",
                    "description": "Header name of the header configuration."
                },
                "HeaderValue": {
                    "type": "string",
                    "description": "Header value of the header configuration. To delete a request header set this property to an empty string."
                }
            },
            "required": [
                "HeaderName",
                "HeaderValue"
            ]
        },
        "ResponseHeaderConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HeaderName": {
                    "type": "string",
                    "description": "Header name of the header configuration."
                },
                "HeaderValue": {
                    "type": "string",
                    "description": "Header value of the header configuration. To delete a response header set this property to an empty string."
                }
            },
            "required": [
                "HeaderName",
                "HeaderValue"
            ]
        },
        "UrlDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Path": {
                    "type": "string",
                    "description": "The URL path to rewrite."
                },
                "QueryString": {
                    "type": "string",
                    "description": "The query string to rewrite."
                },
                "Reroute": {
                    "type": "boolean",
                    "description": "Whether the URL path map should be reevaluated after this rewrite has been applied. [More info on rewrite configutation](https://docs.microsoft.com/en-us/azure/application-gateway/rewrite-http-headers-url#rewrite-configuration)."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "EnableHttp2": {
            "type": "boolean",
            "description": "Is HTTP2 enabled on the application gateway resource? Defaults to `false`."
        },
        "FirewallPolicyId": {
            "type": "string",
            "description": "The ID of the Web Application Firewall Policy."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Application Gateway. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Zones": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A collection of availability zones to spread the Application Gateway over."
        },
        "AuthenticationCertificate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AuthenticationCertificateDefinition"
            }
        },
        "AutoscaleConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AutoscaleConfigurationDefinition"
            },
            "maxItems": 1
        },
        "BackendAddressPool": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BackendAddressPoolDefinition"
            },
            "minItems": 1
        },
        "BackendHttpSettings": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BackendHttpSettingsDefinition"
            },
            "minItems": 1
        },
        "CustomErrorConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CustomErrorConfigurationDefinition"
            }
        },
        "FrontendIpConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/FrontendIpConfigurationDefinition"
            },
            "minItems": 1
        },
        "FrontendPort": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FrontendPortDefinition"
            },
            "minItems": 1
        },
        "GatewayIpConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/GatewayIpConfigurationDefinition"
            },
            "maxItems": 2,
            "minItems": 1
        },
        "HttpListener": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpListenerDefinition"
            },
            "minItems": 1
        },
        "Identity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IdentityDefinition"
            },
            "maxItems": 1
        },
        "Probe": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ProbeDefinition"
            }
        },
        "RedirectConfiguration": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RedirectConfigurationDefinition"
            }
        },
        "RequestRoutingRule": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RequestRoutingRuleDefinition"
            },
            "minItems": 1
        },
        "RewriteRuleSet": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RewriteRuleSetDefinition"
            }
        },
        "Sku": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SkuDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "SslCertificate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SslCertificateDefinition"
            }
        },
        "SslPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SslPolicyDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        },
        "TrustedRootCertificate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TrustedRootCertificateDefinition"
            }
        },
        "UrlPathMap": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UrlPathMapDefinition"
            }
        },
        "WafConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WafConfigurationDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/AuthenticationCertificateDefinition/Data",
        "/definitions/SslCertificateDefinition/Data",
        "/definitions/SslCertificateDefinition/Password",
        "/definitions/TrustedRootCertificateDefinition/Data"
    ]
}