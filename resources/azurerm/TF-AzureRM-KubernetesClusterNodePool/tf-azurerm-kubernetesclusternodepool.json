{
    "typeName": "TF::AzureRM::KubernetesClusterNodePool",
    "description": "Manages a Node Pool within a Kubernetes Cluster\n\n-> **Note:** Due to the fast-moving nature of AKS, we recommend using the latest version of the Azure Provider when using AKS - you can find [the latest version of the Azure Provider here](https://registry.terraform.io/providers/hashicorp/azurerm/latest).\n\n~> **NOTE:** Multiple Node Pools are only supported when the Kubernetes Cluster is using Virtual Machine Scale Sets.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-KubernetesClusterNodePool/docs/README.md",
    "definitions": {
        "NodeLabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "KubeletConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowedUnsafeSysctls": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the allow list of unsafe sysctls command or patterns (ending in `*`). Changing this forces a new resource to be created."
                },
                "ContainerLogMaxLine": {
                    "type": "number",
                    "description": "Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created."
                },
                "ContainerLogMaxSizeMb": {
                    "type": "number",
                    "description": "Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created."
                },
                "CpuCfsQuotaEnabled": {
                    "type": "boolean",
                    "description": "Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created."
                },
                "CpuCfsQuotaPeriod": {
                    "type": "string",
                    "description": "Specifies the CPU CFS quota period value. Changing this forces a new resource to be created."
                },
                "CpuManagerPolicy": {
                    "type": "string",
                    "description": "Specifies the CPU Manager policy to use. Possible values are `none` and `static`, Changing this forces a new resource to be created."
                },
                "ImageGcHighThreshold": {
                    "type": "number",
                    "description": "Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`. Changing this forces a new resource to be created."
                },
                "ImageGcLowThreshold": {
                    "type": "number",
                    "description": "Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`. Changing this forces a new resource to be created."
                },
                "PodMaxPid": {
                    "type": "number"
                },
                "TopologyManagerPolicy": {
                    "type": "string",
                    "description": "Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`. Changing this forces a new resource to be created."
                }
            },
            "required": []
        },
        "LinuxOsConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SwapFileSizeMb": {
                    "type": "number",
                    "description": "Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created."
                },
                "TransparentHugePageDefrag": {
                    "type": "string",
                    "description": "specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`. Changing this forces a new resource to be created."
                },
                "TransparentHugePageEnabled": {
                    "type": "string",
                    "description": "Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`. Changing this forces a new resource to be created."
                },
                "SysctlConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SysctlConfigDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "UpgradeSettingsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaxSurge": {
                    "type": "string",
                    "description": "The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade."
                }
            },
            "required": [
                "MaxSurge"
            ]
        },
        "SysctlConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FsAioMaxNr": {
                    "type": "number",
                    "description": "The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created."
                },
                "FsFileMax": {
                    "type": "number",
                    "description": "The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created."
                },
                "FsInotifyMaxUserWatches": {
                    "type": "number",
                    "description": "The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created."
                },
                "FsNrOpen": {
                    "type": "number",
                    "description": "The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created."
                },
                "KernelThreadsMax": {
                    "type": "number",
                    "description": "The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created."
                },
                "NetCoreNetdevMaxBacklog": {
                    "type": "number",
                    "description": "The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created."
                },
                "NetCoreOptmemMax": {
                    "type": "number",
                    "description": "The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created."
                },
                "NetCoreRmemDefault": {
                    "type": "number",
                    "description": "The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created."
                },
                "NetCoreRmemMax": {
                    "type": "number",
                    "description": "The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created."
                },
                "NetCoreSomaxconn": {
                    "type": "number",
                    "description": "The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created."
                },
                "NetCoreWmemDefault": {
                    "type": "number",
                    "description": "The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created."
                },
                "NetCoreWmemMax": {
                    "type": "number",
                    "description": "The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created."
                },
                "NetIpv4IpLocalPortRangeMax": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `1024` and `60999`. Changing this forces a new resource to be created."
                },
                "NetIpv4IpLocalPortRangeMin": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created."
                },
                "NetIpv4NeighDefaultGcThresh1": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created."
                },
                "NetIpv4NeighDefaultGcThresh2": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created."
                },
                "NetIpv4NeighDefaultGcThresh3": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpFinTimeout": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpKeepaliveIntvl": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `75`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpKeepaliveProbes": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpKeepaliveTime": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpMaxSynBacklog": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpMaxTwBuckets": {
                    "type": "number",
                    "description": "The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created."
                },
                "NetIpv4TcpTwReuse": {
                    "type": "boolean",
                    "description": "Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created."
                },
                "NetNetfilterNfConntrackBuckets": {
                    "type": "number",
                    "description": "The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `147456`. Changing this forces a new resource to be created."
                },
                "NetNetfilterNfConntrackMax": {
                    "type": "number",
                    "description": "The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `589824`. Changing this forces a new resource to be created."
                },
                "VmMaxMapCount": {
                    "type": "number",
                    "description": "The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created."
                },
                "VmSwappiness": {
                    "type": "number",
                    "description": "The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created."
                },
                "VmVfsCachePressure": {
                    "type": "number",
                    "description": "The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of Availability Zones where the Nodes in this Node Pool should be created in. Changing this forces a new resource to be created."
        },
        "EnableAutoScaling": {
            "type": "boolean",
            "description": "Whether to enable [auto-scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler). Defaults to `false`."
        },
        "EnableHostEncryption": {
            "type": "boolean",
            "description": "Should the nodes in this Node Pool have host encryption enabled? Defaults to `false`."
        },
        "EnableNodePublicIp": {
            "type": "boolean",
            "description": "Should each node have a Public IP Address? Defaults to `false`.  Changing this forces a new resource to be created."
        },
        "EvictionPolicy": {
            "type": "string",
            "description": "The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created."
        },
        "Id": {
            "type": "string"
        },
        "KubernetesClusterId": {
            "type": "string",
            "description": "The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created."
        },
        "MaxCount": {
            "type": "number"
        },
        "MaxPods": {
            "type": "number",
            "description": "The maximum number of pods that can run on each agent. Changing this forces a new resource to be created."
        },
        "MinCount": {
            "type": "number"
        },
        "Mode": {
            "type": "string",
            "description": "Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created."
        },
        "NodeCount": {
            "type": "number"
        },
        "NodeLabels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/NodeLabelsDefinition"
            },
            "description": "A map of Kubernetes labels which should be applied to nodes in this Node Pool. Changing this forces a new resource to be created."
        },
        "NodePublicIpPrefixId": {
            "type": "string",
            "description": "Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enable_node_public_ip` should be `true`. Changing this forces a new resource to be created."
        },
        "NodeTaints": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created."
        },
        "OrchestratorVersion": {
            "type": "string",
            "description": "Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade)."
        },
        "OsDiskSizeGb": {
            "type": "number",
            "description": "The Agent Operating System disk size in GB. Changing this forces a new resource to be created."
        },
        "OsDiskType": {
            "type": "string",
            "description": "The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created."
        },
        "OsType": {
            "type": "string",
            "description": "The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`."
        },
        "Priority": {
            "type": "string",
            "description": "The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created."
        },
        "ProximityPlacementGroupId": {
            "type": "string",
            "description": "The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created."
        },
        "SpotMaxPrice": {
            "type": "number",
            "description": "The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "VmSize": {
            "type": "string",
            "description": "The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created."
        },
        "VnetSubnetId": {
            "type": "string",
            "description": "The ID of the Subnet where this Node Pool should exist."
        },
        "KubeletConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KubeletConfigDefinition"
            },
            "maxItems": 1
        },
        "LinuxOsConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LinuxOsConfigDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        },
        "UpgradeSettings": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UpgradeSettingsDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "KubernetesClusterId",
        "Name",
        "VmSize"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}