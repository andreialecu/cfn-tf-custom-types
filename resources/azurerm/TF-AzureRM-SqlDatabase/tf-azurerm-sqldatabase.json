{
    "typeName": "TF::AzureRM::SqlDatabase",
    "description": "Allows you to manage an Azure SQL Database\n\n~> **Note:** Deprecated! Please use [mssql_database](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database) for all future Microsoft SQL Azure Database Server uses.\n\n~> **NOTE:** The Database Extended Auditing Policy Can be set inline here as well as with the [mssql_database_extended_auditing_policy resource](mssql_database_extended_auditing_policy.html) resource. You can only use one or the other and using both will cause a conflict.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-SqlDatabase/docs/README.md",
    "definitions": {
        "ExtendedAuditingPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "LogMonitoringEnabled": {
                    "type": "boolean"
                },
                "RetentionInDays": {
                    "type": "number"
                },
                "StorageAccountAccessKey": {
                    "type": "string"
                },
                "StorageAccountAccessKeyIsSecondary": {
                    "type": "boolean"
                },
                "StorageEndpoint": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ImportDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdministratorLogin": {
                    "type": "string",
                    "description": "Specifies the name of the SQL administrator."
                },
                "AdministratorLoginPassword": {
                    "type": "string",
                    "description": "Specifies the password of the SQL administrator."
                },
                "AuthenticationType": {
                    "type": "string",
                    "description": "Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`."
                },
                "OperationMode": {
                    "type": "string",
                    "description": "Specifies the type of import operation being performed. The only allowable value is `Import`."
                },
                "StorageKey": {
                    "type": "string",
                    "description": "Specifies the access key for the storage account."
                },
                "StorageKeyType": {
                    "type": "string",
                    "description": "Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`."
                },
                "StorageUri": {
                    "type": "string",
                    "description": "Specifies the blob URI of the .bacpac file."
                }
            },
            "required": [
                "AdministratorLogin",
                "AdministratorLoginPassword",
                "AuthenticationType",
                "StorageKey",
                "StorageKeyType",
                "StorageUri"
            ]
        },
        "ThreatDetectionPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DisabledAlerts": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`."
                },
                "EmailAccountAdmins": {
                    "type": "string",
                    "description": "Should the account administrators be emailed when this alert is triggered?."
                },
                "EmailAddresses": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses which alerts should be sent to."
                },
                "RetentionDays": {
                    "type": "number",
                    "description": "Specifies the number of days to keep in the Threat Detection audit logs."
                },
                "State": {
                    "type": "string",
                    "description": "The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`."
                },
                "StorageAccountAccessKey": {
                    "type": "string",
                    "description": "Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`."
                },
                "StorageEndpoint": {
                    "type": "string",
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`."
                },
                "UseServerDefault": {
                    "type": "string"
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Collation": {
            "type": "string",
            "description": "The name of the collation. Applies only if `create_mode` is `Default`.  Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new resource to be created."
        },
        "CreateMode": {
            "type": "string",
            "description": "Specifies how to create the database. Valid values are: `Default`, `Copy`, `OnlineSecondary`, `NonReadableSecondary`,  `PointInTimeRestore`, `Recovery`, `Restore` or `RestoreLongTermRetentionBackup`. Must be `Default` to create a new database. Defaults to `Default`. Please see [Azure SQL Database REST API](https://docs.microsoft.com/en-us/rest/api/sql/databases/createorupdate#createmode)."
        },
        "CreationDate": {
            "type": "string"
        },
        "DefaultSecondaryLocation": {
            "type": "string"
        },
        "Edition": {
            "type": "string",
            "description": "The edition of the database to be created. Applies only if `create_mode` is `Default`. Valid values are: `Basic`, `Standard`, `Premium`, `DataWarehouse`, `Business`, `BusinessCritical`, `Free`, `GeneralPurpose`, `Hyperscale`, `Premium`, `PremiumRS`, `Standard`, `Stretch`, `System`, `System2`, or `Web`. Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/)."
        },
        "ElasticPoolName": {
            "type": "string",
            "description": "The name of the elastic database pool."
        },
        "Encryption": {
            "type": "string"
        },
        "ExtendedAuditingPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExtendedAuditingPolicyDefinition"
            },
            "description": "A `extended_auditing_policy` block as defined below."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "MaxSizeBytes": {
            "type": "string",
            "description": "The maximum size that the database can grow to. Applies only if `create_mode` is `Default`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/)."
        },
        "MaxSizeGb": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the database."
        },
        "ReadScale": {
            "type": "boolean",
            "description": "Read-only connections will be redirected to a high-available replica. Please see [Use read-only replicas to load-balance read-only query workloads](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-read-scale-out)."
        },
        "RequestedServiceObjectiveId": {
            "type": "string",
            "description": "A GUID/UUID corresponding to a configured Service Level Objective for the Azure SQL database which can be used to configure a performance level.\n."
        },
        "RequestedServiceObjectiveName": {
            "type": "string",
            "description": "The service objective name for the database. Valid values depend on edition and location and may include `S0`, `S1`, `S2`, `S3`, `P1`, `P2`, `P4`, `P6`, `P11` and `ElasticPool`. You can list the available names with the cli: `shell az sql db list-editions -l westus -o table`. For further information please see [Azure CLI - az sql db](https://docs.microsoft.com/en-us/cli/azure/sql/db?view=azure-cli-latest#az-sql-db-list-editions)."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the database.  This must be the same as Database Server resource group currently."
        },
        "RestorePointInTime": {
            "type": "string",
            "description": "The point in time for the restore. Only applies if `create_mode` is `PointInTimeRestore` e.g. 2013-11-08T22:00:40Z."
        },
        "ServerName": {
            "type": "string",
            "description": "The name of the SQL Server on which to create the database."
        },
        "SourceDatabaseDeletionDate": {
            "type": "string",
            "description": "The deletion date time of the source database. Only applies to deleted databases where `create_mode` is `PointInTimeRestore`."
        },
        "SourceDatabaseId": {
            "type": "string",
            "description": "The URI of the source database if `create_mode` value is not `Default`."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "ZoneRedundant": {
            "type": "boolean",
            "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
        },
        "Import": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ImportDefinition"
            },
            "maxItems": 1
        },
        "ThreatDetectionPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ThreatDetectionPolicyDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName",
        "ServerName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreationDate",
        "/properties/DefaultSecondaryLocation",
        "/properties/Encryption",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/ImportDefinition/AdministratorLoginPassword",
        "/definitions/ImportDefinition/StorageKey",
        "/definitions/ThreatDetectionPolicyDefinition/StorageAccountAccessKey"
    ]
}