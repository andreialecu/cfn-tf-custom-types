{
    "typeName": "TF::AzureRM::AutomationModule",
    "description": "Manages a Automation Module.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-AutomationModule/docs/README.md",
    "definitions": {
        "ModuleLinkDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Uri": {
                    "type": "string",
                    "description": "The uri of the module content (zip or nupkg)."
                },
                "Hash": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HashDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Uri"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "HashDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Algorithm",
                "Value"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutomationAccountName": {
            "type": "string",
            "description": "The name of the automation account in which the Module is created. Changing this forces a new resource to be created."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Module. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which the Module is created. Changing this forces a new resource to be created."
        },
        "ModuleLink": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ModuleLinkDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AutomationAccountName",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}