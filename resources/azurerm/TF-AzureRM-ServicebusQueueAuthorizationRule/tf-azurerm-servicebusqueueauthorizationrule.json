{
    "typeName": "TF::AzureRM::ServicebusQueueAuthorizationRule",
    "description": "Manages an Authorization Rule for a ServiceBus Queue.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-ServicebusQueueAuthorizationRule/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Listen": {
            "type": "boolean",
            "description": "Does this Authorization Rule have Listen permissions to the ServiceBus Queue? Defaults to `false`."
        },
        "Manage": {
            "type": "boolean",
            "description": "Does this Authorization Rule have Manage permissions to the ServiceBus Queue? When this property is `true` - both `listen` and `send` must be too. Defaults to `false`."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Authorization Rule. Changing this forces a new resource to be created."
        },
        "NamespaceName": {
            "type": "string",
            "description": "Specifies the name of the ServiceBus Namespace in which the Queue exists. Changing this forces a new resource to be created."
        },
        "PrimaryConnectionString": {
            "type": "string"
        },
        "PrimaryKey": {
            "type": "string"
        },
        "QueueName": {
            "type": "string",
            "description": "Specifies the name of the ServiceBus Queue. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group in which the ServiceBus Namespace exists. Changing this forces a new resource to be created."
        },
        "SecondaryConnectionString": {
            "type": "string"
        },
        "SecondaryKey": {
            "type": "string"
        },
        "Send": {
            "type": "boolean",
            "description": "Does this Authorization Rule have Send permissions to the ServiceBus Queue? Defaults to `false`."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "NamespaceName",
        "QueueName",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/PrimaryConnectionString",
        "/properties/PrimaryKey",
        "/properties/SecondaryConnectionString",
        "/properties/SecondaryKey"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrimaryConnectionString",
        "/properties/PrimaryKey",
        "/properties/SecondaryConnectionString",
        "/properties/SecondaryKey"
    ]
}