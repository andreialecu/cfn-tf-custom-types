{
    "typeName": "TF::AzureRM::ContainerGroup",
    "description": "Manages as an Azure Container Group instance.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/TF-AzureRM-ContainerGroup/docs/README.md",
    "definitions": {
        "ExposedPortDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Port": {
                    "type": "number"
                },
                "Protocol": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ContainerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Commands": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of commands which should be run on the container. Changing this forces a new resource to be created."
                },
                "Cpu": {
                    "type": "number",
                    "description": "The required number of CPU cores of the containers. Changing this forces a new resource to be created."
                },
                "EnvironmentVariables": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/EnvironmentVariablesDefinition"
                    },
                    "description": "A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created."
                },
                "Image": {
                    "type": "string",
                    "description": "The container image name. Changing this forces a new resource to be created."
                },
                "Memory": {
                    "type": "number",
                    "description": "The required memory of the containers in GB. Changing this forces a new resource to be created."
                },
                "Name": {
                    "type": "string",
                    "description": "Specifies the name of the Container. Changing this forces a new resource to be created."
                },
                "SecureEnvironmentVariables": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SecureEnvironmentVariablesDefinition"
                    },
                    "description": "A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created."
                },
                "Gpu": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/GpuDefinition"
                    },
                    "maxItems": 1
                },
                "LivenessProbe": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LivenessProbeDefinition"
                    },
                    "maxItems": 1
                },
                "Ports": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/PortsDefinition"
                    }
                },
                "ReadinessProbe": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ReadinessProbeDefinition"
                    },
                    "maxItems": 1
                },
                "Volume": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/VolumeDefinition"
                    }
                }
            },
            "required": [
                "Cpu",
                "Image",
                "Memory",
                "Name"
            ]
        },
        "EnvironmentVariablesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "SecureEnvironmentVariablesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "DiagnosticsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "LogAnalytics": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LogAnalyticsDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "DnsConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Nameservers": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of nameservers the containers will search out to resolve requests."
                },
                "Options": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [resolver configuration options](https://man7.org/linux/man-pages/man5/resolv.conf.5.html)."
                },
                "SearchDomains": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of search domains that DNS requests will search along."
                }
            },
            "required": [
                "Nameservers",
                "Options",
                "SearchDomains"
            ]
        },
        "IdentityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IdentityIds": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created."
                },
                "Type": {
                    "type": "string",
                    "description": "The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Type"
            ]
        },
        "ImageRegistryCredentialDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Password": {
                    "type": "string",
                    "description": "The password with which to connect to the registry. Changing this forces a new resource to be created."
                },
                "Server": {
                    "type": "string",
                    "description": "The address to use to connect to the registry without protocol (\"https\"/\"http\"). For example: \"myacr.acr.io\". Changing this forces a new resource to be created."
                },
                "Username": {
                    "type": "string",
                    "description": "The username with which to connect to the registry. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Password",
                "Server",
                "Username"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "GpuDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Count": {
                    "type": "number",
                    "description": "The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created."
                },
                "Sku": {
                    "type": "string",
                    "description": "The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created."
                }
            },
            "required": []
        },
        "LivenessProbeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Exec": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands to be run to validate container readiness. Changing this forces a new resource to be created."
                },
                "FailureThreshold": {
                    "type": "number",
                    "description": "How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "InitialDelaySeconds": {
                    "type": "number",
                    "description": "Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created."
                },
                "PeriodSeconds": {
                    "type": "number",
                    "description": "How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "SuccessThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "TimeoutSeconds": {
                    "type": "number",
                    "description": "Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "HttpGet": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HttpGetDefinition"
                    }
                }
            },
            "required": []
        },
        "PortsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Port": {
                    "type": "number",
                    "description": "The port number the container will expose. Changing this forces a new resource to be created."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created."
                }
            },
            "required": []
        },
        "ReadinessProbeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Exec": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands to be run to validate container readiness. Changing this forces a new resource to be created."
                },
                "FailureThreshold": {
                    "type": "number",
                    "description": "How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "InitialDelaySeconds": {
                    "type": "number",
                    "description": "Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created."
                },
                "PeriodSeconds": {
                    "type": "number",
                    "description": "How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "SuccessThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "TimeoutSeconds": {
                    "type": "number",
                    "description": "Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created."
                },
                "HttpGet": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HttpGetDefinition"
                    }
                }
            },
            "required": []
        },
        "VolumeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EmptyDir": {
                    "type": "boolean",
                    "description": "Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created."
                },
                "MountPath": {
                    "type": "string",
                    "description": "The path on which this volume is to be mounted. Changing this forces a new resource to be created."
                },
                "Name": {
                    "type": "string",
                    "description": "The name of the volume mount. Changing this forces a new resource to be created."
                },
                "ReadOnly": {
                    "type": "boolean",
                    "description": "Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created."
                },
                "Secret": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SecretDefinition"
                    },
                    "description": "A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created."
                },
                "ShareName": {
                    "type": "string",
                    "description": "The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created."
                },
                "StorageAccountKey": {
                    "type": "string",
                    "description": "The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created."
                },
                "StorageAccountName": {
                    "type": "string",
                    "description": "The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created."
                },
                "GitRepo": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/GitRepoDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "MountPath",
                "Name"
            ]
        },
        "SecretDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LogAnalyticsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "LogType": {
                    "type": "string",
                    "description": "The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created."
                },
                "Metadata": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MetadataDefinition"
                    },
                    "description": "Any metadata required for Log Analytics. Changing this forces a new resource to be created."
                },
                "WorkspaceId": {
                    "type": "string",
                    "description": "The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created."
                },
                "WorkspaceKey": {
                    "type": "string",
                    "description": "The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "WorkspaceId",
                "WorkspaceKey"
            ]
        },
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "HttpGetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Path": {
                    "type": "string",
                    "description": "Path to access on the HTTP server. Changing this forces a new resource to be created."
                },
                "Port": {
                    "type": "number",
                    "description": "Number of the port to access on the container. Changing this forces a new resource to be created."
                },
                "Scheme": {
                    "type": "string",
                    "description": "Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created."
                }
            },
            "required": []
        },
        "GitRepoDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Directory": {
                    "type": "string",
                    "description": "Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created."
                },
                "Revision": {
                    "type": "string",
                    "description": "Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created."
                },
                "Url": {
                    "type": "string",
                    "description": "Specifies the Git repository to be cloned. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Url"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DnsNameLabel": {
            "type": "string",
            "description": "The DNS label/name for the container groups IP. Changing this forces a new resource to be created."
        },
        "ExposedPort": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ExposedPortDefinition"
            },
            "description": "Zero or more `exposed_port` blocks as defined below. Changing this forces a new resource to be created."
        },
        "Fqdn": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "IpAddressType": {
            "type": "string",
            "description": "Specifies the ip address type of the container. `Public` or `Private`. Changing this forces a new resource to be created. If set to `Private`, `network_profile_id` also needs to be set."
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Container Group. Changing this forces a new resource to be created."
        },
        "NetworkProfileId": {
            "type": "string",
            "description": "Network profile ID for deploying to virtual network."
        },
        "OsType": {
            "type": "string",
            "description": "The OS for the container group. Allowed values are `Linux` and `Windows`. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the Container Group. Changing this forces a new resource to be created."
        },
        "RestartPolicy": {
            "type": "string",
            "description": "Restart policy for the container group. Allowed values are `Always`, `Never`, `OnFailure`. Defaults to `Always`. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Container": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ContainerDefinition"
            },
            "minItems": 1
        },
        "Diagnostics": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DiagnosticsDefinition"
            },
            "maxItems": 1
        },
        "DnsConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DnsConfigDefinition"
            },
            "maxItems": 1
        },
        "Identity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IdentityDefinition"
            },
            "maxItems": 1
        },
        "ImageRegistryCredential": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ImageRegistryCredentialDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "OsType",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Fqdn",
        "/properties/Id",
        "/properties/IpAddress"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/ContainerDefinition/SecureEnvironmentVariables",
        "/definitions/ImageRegistryCredentialDefinition/Password",
        "/definitions/VolumeDefinition/Secret",
        "/definitions/VolumeDefinition/StorageAccountKey",
        "/definitions/LogAnalyticsDefinition/WorkspaceKey"
    ]
}