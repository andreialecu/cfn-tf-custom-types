{
    "typeName": "TF::Vault::AzureSecretBackend",
    "description": "Creates an Azure Secret Backend for Vault.\n\nThe Azure secrets engine dynamically generates Azure service principals and role assignments. Vault roles can be mapped to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service principals.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-AzureSecretBackend/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ClientId": {
            "type": "string"
        },
        "ClientSecret": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Path": {
            "type": "string"
        },
        "SubscriptionId": {
            "type": "string"
        },
        "TenantId": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "SubscriptionId",
        "TenantId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/ClientId",
        "/properties/ClientSecret",
        "/properties/SubscriptionId",
        "/properties/TenantId"
    ]
}