{
    "typeName": "TF::Vault::ApproleAuthBackendRoleSecretId",
    "description": "Manages an AppRole auth backend SecretID in a Vault server. See the [Vault\ndocumentation](https://www.vaultproject.io/docs/auth/approle) for more\ninformation.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-ApproleAuthBackendRoleSecretId/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Accessor": {
            "type": "string"
        },
        "Backend": {
            "type": "string"
        },
        "CidrList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "If set, specifies blocks of IP addresses which can\nperform the login operation using this SecretID."
        },
        "Id": {
            "type": "string"
        },
        "Metadata": {
            "type": "string",
            "description": "A JSON-encoded string containing metadata in\nkey-value pairs to be set on tokens issued with this SecretID."
        },
        "RoleName": {
            "type": "string",
            "description": "The name of the role to create the SecretID for."
        },
        "SecretId": {
            "type": "string",
            "description": "The SecretID to be created. If set, uses \"Push\"\nmode.  Defaults to Vault auto-generating SecretIDs."
        },
        "WrappingAccessor": {
            "type": "string"
        },
        "WrappingToken": {
            "type": "string"
        },
        "WrappingTtl": {
            "type": "string",
            "description": "If set, the SecretID response will be\n[response-wrapped](https://www.vaultproject.io/docs/concepts/response-wrapping)\nand available for the duration specified. Only a single unwrapping of the\ntoken is allowed."
        }
    },
    "additionalProperties": false,
    "required": [
        "RoleName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Accessor",
        "/properties/Id",
        "/properties/WrappingAccessor",
        "/properties/WrappingToken"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/SecretId",
        "/properties/WrappingToken"
    ]
}