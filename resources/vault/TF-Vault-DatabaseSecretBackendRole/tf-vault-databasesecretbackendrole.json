{
    "typeName": "TF::Vault::DatabaseSecretBackendRole",
    "description": "Creates a Database Secret Backend role in Vault. Database secret backend\nroles can be used to generate dynamic credentials for the database.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-DatabaseSecretBackendRole/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Backend": {
            "type": "string",
            "description": "The unique name of the Vault mount to configure."
        },
        "CreationStatements": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The database statements to execute when\ncreating a user."
        },
        "DbName": {
            "type": "string",
            "description": "The unique name of the database connection to use for\nthe role."
        },
        "DefaultTtl": {
            "type": "number",
            "description": "The default number of seconds for leases for this\nrole."
        },
        "Id": {
            "type": "string"
        },
        "MaxTtl": {
            "type": "number",
            "description": "The maximum number of seconds for leases for this\nrole."
        },
        "Name": {
            "type": "string",
            "description": "A unique name to give the role."
        },
        "RenewStatements": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The database statements to execute when\nrenewing a user."
        },
        "RevocationStatements": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The database statements to execute when\nrevoking a user."
        },
        "RollbackStatements": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The database statements to execute when\nrolling back creation due to an error."
        }
    },
    "additionalProperties": false,
    "required": [
        "Backend",
        "CreationStatements",
        "DbName",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}