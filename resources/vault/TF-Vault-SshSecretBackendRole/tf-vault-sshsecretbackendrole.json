{
    "typeName": "TF::Vault::SshSecretBackendRole",
    "description": "Provides a resource to manage roles in an SSH secret backend\n[SSH secret backend within Vault](https://www.vaultproject.io/docs/secrets/ssh/index.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-SshSecretBackendRole/docs/README.md",
    "definitions": {
        "AllowedUserKeyLengthsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "DefaultCriticalOptionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "DefaultExtensionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AlgorithmSigner": {
            "type": "string",
            "description": "When supplied, this value specifies a signing algorithm for the key. Possible values: ssh-rsa, rsa-sha2-256, rsa-sha2-512."
        },
        "AllowBareDomains": {
            "type": "boolean",
            "description": "Specifies if host certificates that are requested are allowed to use the base domains listed in `allowed_domains`."
        },
        "AllowHostCertificates": {
            "type": "boolean",
            "description": "Specifies if certificates are allowed to be signed for use as a 'host'."
        },
        "AllowSubdomains": {
            "type": "boolean",
            "description": "Specifies if host certificates that are requested are allowed to be subdomains of those listed in `allowed_domains`."
        },
        "AllowUserCertificates": {
            "type": "boolean",
            "description": "Specifies if certificates are allowed to be signed for use as a 'user'."
        },
        "AllowUserKeyIds": {
            "type": "boolean",
            "description": "Specifies if users can override the key ID for a signed certificate with the `key_id` field."
        },
        "AllowedCriticalOptions": {
            "type": "string",
            "description": "Specifies a comma-separated list of critical options that certificates can have when signed."
        },
        "AllowedDomains": {
            "type": "string",
            "description": "The list of domains for which a client can request a host certificate."
        },
        "AllowedExtensions": {
            "type": "string",
            "description": "Specifies a comma-separated list of extensions that certificates can have when signed."
        },
        "AllowedUserKeyLengths": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/AllowedUserKeyLengthsDefinition"
            },
            "description": "Specifies a map of ssh key types and their expected sizes which are allowed to be signed by the CA type."
        },
        "AllowedUsers": {
            "type": "string",
            "description": "Specifies a comma-separated list of usernames that are to be allowed, only if certain usernames are to be allowed."
        },
        "AllowedUsersTemplate": {
            "type": "boolean",
            "description": "Specifies if `allowed_users` can be declared using identity template policies. Non-templated users are also permitted."
        },
        "Backend": {
            "type": "string",
            "description": "The path where the SSH secret backend is mounted."
        },
        "CidrList": {
            "type": "string",
            "description": "The comma-separated string of CIDR blocks for which this role is applicable."
        },
        "DefaultCriticalOptions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DefaultCriticalOptionsDefinition"
            },
            "description": "Specifies a map of critical options that certificates have when signed."
        },
        "DefaultExtensions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DefaultExtensionsDefinition"
            },
            "description": "Specifies a map of extensions that certificates have when signed."
        },
        "DefaultUser": {
            "type": "string",
            "description": "Specifies the default username for which a credential will be generated."
        },
        "Id": {
            "type": "string"
        },
        "KeyIdFormat": {
            "type": "string",
            "description": "Specifies a custom format for the key id of a signed certificate."
        },
        "KeyType": {
            "type": "string",
            "description": "Specifies the type of credentials generated by this role. This can be either `otp`, `dynamic` or `ca`."
        },
        "MaxTtl": {
            "type": "string",
            "description": "Specifies the maximum Time To Live value."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the role to create."
        },
        "Ttl": {
            "type": "string",
            "description": "Specifies the Time To Live value."
        }
    },
    "additionalProperties": false,
    "required": [
        "Backend",
        "KeyType",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}