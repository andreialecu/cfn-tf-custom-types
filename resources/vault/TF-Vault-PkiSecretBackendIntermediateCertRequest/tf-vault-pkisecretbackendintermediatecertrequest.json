{
    "typeName": "TF::Vault::PkiSecretBackendIntermediateCertRequest",
    "description": "Generates a new private key and a CSR for signing the PKI Secret Backend.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-PkiSecretBackendIntermediateCertRequest/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AltNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative names."
        },
        "Backend": {
            "type": "string",
            "description": "The PKI secret backend the resource belongs to."
        },
        "CommonName": {
            "type": "string",
            "description": "CN of intermediate to create."
        },
        "Country": {
            "type": "string",
            "description": "The country."
        },
        "Csr": {
            "type": "string"
        },
        "ExcludeCnFromSans": {
            "type": "boolean",
            "description": "Flag to exclude CN from SANs."
        },
        "Format": {
            "type": "string",
            "description": "The format of data."
        },
        "Id": {
            "type": "string"
        },
        "IpSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative IPs."
        },
        "KeyBits": {
            "type": "number",
            "description": "The number of bits to use."
        },
        "KeyType": {
            "type": "string",
            "description": "The desired key type."
        },
        "Locality": {
            "type": "string",
            "description": "The locality."
        },
        "Organization": {
            "type": "string",
            "description": "The organization."
        },
        "OtherSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of other SANs."
        },
        "Ou": {
            "type": "string",
            "description": "The organization unit."
        },
        "PostalCode": {
            "type": "string",
            "description": "The postal code."
        },
        "PrivateKey": {
            "type": "string"
        },
        "PrivateKeyFormat": {
            "type": "string",
            "description": "The private key format."
        },
        "PrivateKeyType": {
            "type": "string"
        },
        "Province": {
            "type": "string",
            "description": "The province."
        },
        "StreetAddress": {
            "type": "string",
            "description": "The street address."
        },
        "Type": {
            "type": "string",
            "description": "Type of intermediate to create. Must be either \\\"exported\\\" or \\\"internal\\\"."
        },
        "UriSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative URIs."
        }
    },
    "additionalProperties": false,
    "required": [
        "Backend",
        "CommonName",
        "Type"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Csr",
        "/properties/Id",
        "/properties/PrivateKey",
        "/properties/PrivateKeyType"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrivateKey"
    ]
}