{
    "typeName": "TF::Vault::PkiSecretBackendCert",
    "description": "Generates a certificate from the PKI Secret Backend.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-PkiSecretBackendCert/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AltNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative names."
        },
        "AutoRenew": {
            "type": "boolean",
            "description": "If set to `true`, certs will be renewed if the expiration is within `min_seconds_remaining`. Default `false`."
        },
        "Backend": {
            "type": "string",
            "description": "The PKI secret backend the resource belongs to."
        },
        "CaChain": {
            "type": "string"
        },
        "Certificate": {
            "type": "string"
        },
        "CommonName": {
            "type": "string",
            "description": "CN of certificate to create."
        },
        "ExcludeCnFromSans": {
            "type": "boolean",
            "description": "Flag to exclude CN from SANs."
        },
        "Expiration": {
            "type": "number"
        },
        "Format": {
            "type": "string",
            "description": "The format of data."
        },
        "Id": {
            "type": "string"
        },
        "IpSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative IPs."
        },
        "IssuingCa": {
            "type": "string"
        },
        "MinSecondsRemaining": {
            "type": "number",
            "description": "Generate a new certificate when the expiration is within this number of seconds, default is 604800 (7 days)."
        },
        "Name": {
            "type": "string",
            "description": "Name of the role to create the certificate against."
        },
        "OtherSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of other SANs."
        },
        "PrivateKey": {
            "type": "string"
        },
        "PrivateKeyFormat": {
            "type": "string",
            "description": "The private key format."
        },
        "PrivateKeyType": {
            "type": "string"
        },
        "SerialNumber": {
            "type": "string"
        },
        "Ttl": {
            "type": "string",
            "description": "Time to live."
        },
        "UriSans": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of alternative URIs."
        }
    },
    "additionalProperties": false,
    "required": [
        "Backend",
        "CommonName",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CaChain",
        "/properties/Certificate",
        "/properties/Expiration",
        "/properties/Id",
        "/properties/IssuingCa",
        "/properties/PrivateKey",
        "/properties/PrivateKeyType",
        "/properties/SerialNumber"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrivateKey"
    ]
}