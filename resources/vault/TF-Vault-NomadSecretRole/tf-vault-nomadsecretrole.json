{
    "typeName": "TF::Vault::NomadSecretRole",
    "description": "Creates a Vault role for a Nomad token. This role configures how generated tokens \nwill function.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-NomadSecretRole/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Backend": {
            "type": "string",
            "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a `/`. Defaults to `nomad`."
        },
        "Global": {
            "type": "boolean",
            "description": "Specifies if the generated token should be global. Defaults to\nfalse."
        },
        "Id": {
            "type": "string"
        },
        "Policies": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of policies attached to the generated token. This setting is only used\nwhen `type` is 'client'."
        },
        "Role": {
            "type": "string",
            "description": "The name to identify this role within the backend.\nMust be unique within the backend."
        },
        "Type": {
            "type": "string",
            "description": "Specifies the type of token to create when using this role. Valid\nsettings are 'client' and 'management'. Defaults to 'client'."
        }
    },
    "additionalProperties": false,
    "required": [
        "Backend",
        "Role"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}