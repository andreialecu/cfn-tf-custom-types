{
    "typeName": "TF::Vault::AwsAuthBackendLogin",
    "description": "Logs into a Vault server using an AWS auth backend. Login can be\naccomplished using a signed identity request from IAM or using ec2\ninstance metadata. For more information, see the [Vault\ndocumentation](https://www.vaultproject.io/docs/auth/aws.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-AwsAuthBackendLogin/docs/README.md",
    "definitions": {
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Accessor": {
            "type": "string"
        },
        "AuthType": {
            "type": "string"
        },
        "Backend": {
            "type": "string",
            "description": "The unique name of the AWS auth backend. Defaults to\n'aws'."
        },
        "ClientToken": {
            "type": "string"
        },
        "IamHttpRequestMethod": {
            "type": "string",
            "description": "The HTTP method used in the signed IAM\nrequest."
        },
        "IamRequestBody": {
            "type": "string",
            "description": "The base64-encoded body of the signed\nrequest."
        },
        "IamRequestHeaders": {
            "type": "string",
            "description": "The base64-encoded, JSON serialized\nrepresentation of the GetCallerIdentity HTTP request headers."
        },
        "IamRequestUrl": {
            "type": "string",
            "description": "The base64-encoded HTTP URL used in the signed\nrequest."
        },
        "Id": {
            "type": "string"
        },
        "Identity": {
            "type": "string",
            "description": "The base64-encoded EC2 instance identity document to\nauthenticate with. Can be retrieved from the EC2 metadata server."
        },
        "LeaseDuration": {
            "type": "number"
        },
        "LeaseStartTime": {
            "type": "string"
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            }
        },
        "Nonce": {
            "type": "string",
            "description": "The unique nonce to be used for login requests. Can be\nset to a user-specified value, or will contain the server-generated value\nonce a token is issued. EC2 instances can only acquire a single token until\nthe whitelist is tidied again unless they keep track of this nonce."
        },
        "Pkcs7": {
            "type": "string",
            "description": "The PKCS#7 signature of the identity document to\nauthenticate with, with all newline characters removed. Can be retrieved from\nthe EC2 metadata server."
        },
        "Policies": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "Renewable": {
            "type": "boolean"
        },
        "Role": {
            "type": "string",
            "description": "The name of the AWS auth backend role to create tokens\nagainst."
        },
        "Signature": {
            "type": "string",
            "description": "The base64-encoded SHA256 RSA signature of the\ninstance identity document to authenticate with, with all newline characters\nremoved. Can be retrieved from the EC2 metadata server."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Accessor",
        "/properties/AuthType",
        "/properties/ClientToken",
        "/properties/Id",
        "/properties/LeaseDuration",
        "/properties/LeaseStartTime",
        "/properties/Metadata",
        "/properties/Policies",
        "/properties/Renewable"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/ClientToken"
    ]
}