{
    "typeName": "TF::Vault::GenericEndpoint",
    "description": "Writes and manages arbitrary data at a given path in Vault.\n\nThis resource enables configuration of arbitrary vault endpoints. It can\nbe used when a resource type is not available for a type of endpoint,\nincluding when the endpoint is provided by a third-party plugin. This\nresource can be used for endpoints with dynamic behavior including\nwrite-only configuration endpoints, endpoints that return different\nfields when read from those that were written, and endpoints that return\ndata when written to. This makes it more flexible than\nthe [generic secret resource](generic_secret.html) for use with\narbitrary endpoints.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vault/TF-Vault-GenericEndpoint/docs/README.md",
    "definitions": {
        "WriteDataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DataJson": {
            "type": "string",
            "description": "String containing a JSON-encoded object that will be\nwritten to the given path as the secret data."
        },
        "DisableDelete": {
            "type": "boolean"
        },
        "DisableRead": {
            "type": "boolean",
            "description": "True/false. Set this to true if your vault\nauthentication is not able to read the data or if the endpoint does\nnot support the `GET` method. Setting this to `true` will break drift\ndetection. You should set this to `true` for endpoints that are\nwrite-only. Defaults to false."
        },
        "Id": {
            "type": "string"
        },
        "IgnoreAbsentFields": {
            "type": "boolean"
        },
        "Path": {
            "type": "string",
            "description": "The full logical path at which to write the given\ndata. Consult each backend's documentation to see which endpoints\nsupport the `PUT` methods and to determine whether they also support\n`DELETE` and `GET`."
        },
        "WriteData": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/WriteDataDefinition"
            }
        },
        "WriteDataJson": {
            "type": "string"
        },
        "WriteFields": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "DataJson",
        "Path"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/WriteData",
        "/properties/WriteDataJson"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/DataJson"
    ]
}