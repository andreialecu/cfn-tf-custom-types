{
    "typeName": "TF::Heroku::PipelineCoupling",
    "description": "Provides a [Heroku Pipeline Coupling](https://devcenter.heroku.com/articles/pipelines)\nresource.\n\nA pipeline is a group of Heroku apps that share the same codebase. Once a\npipeline is created using [`heroku_pipeline`](./pipeline.html), and apps are added\nto different stages using `heroku_pipeline_coupling`, you can promote app slugs\nto the downstream stages.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/heroku/TF-Heroku-PipelineCoupling/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "App": {
            "type": "string",
            "description": "A Heroku app's `UUID`. Can also be the name of the Heroku app but `UUID` is preferred as it is idempotent."
        },
        "AppId": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Pipeline": {
            "type": "string",
            "description": "The ID of the pipeline to add this app to."
        },
        "Stage": {
            "type": "string",
            "description": "The stage to couple this app to. Must be one of\n`review`, `development`, `staging`, or `production`."
        }
    },
    "additionalProperties": false,
    "required": [
        "App",
        "Pipeline",
        "Stage"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AppId",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}