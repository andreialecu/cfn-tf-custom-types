{
    "typeName": "TF::Heroku::AppWebhook",
    "description": "Provides a [Heroku App Webhook](https://devcenter.heroku.com/categories/app-webhooks).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/heroku/TF-Heroku-AppWebhook/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AppId": {
            "type": "string",
            "description": "The Heroku app to add to."
        },
        "Authorization": {
            "type": "string",
            "description": "Values used in `Authorization` header. Once set, this value cannot be fetched from the Heroku API, but it can be updated."
        },
        "Id": {
            "type": "string"
        },
        "Include": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of events to deliver to the webhook."
        },
        "Level": {
            "type": "string",
            "description": "The webhook level (either `notify` or `sync`)."
        },
        "Secret": {
            "type": "string",
            "description": "Value used to sign webhook payloads. Once set, this value cannot be fetched from the Heroku API, but it can be updated."
        },
        "Url": {
            "type": "string",
            "description": "Optional plan configuration."
        }
    },
    "additionalProperties": false,
    "required": [
        "AppId",
        "Include",
        "Level",
        "Url"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Authorization",
        "/properties/Secret"
    ]
}