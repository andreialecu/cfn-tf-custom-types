{
    "typeName": "TF::Heroku::Pipeline",
    "description": "Provides a [Heroku Pipeline](https://devcenter.heroku.com/articles/pipelines)\nresource.\n\nA pipeline is a group of Heroku apps that share the same codebase. Once a\npipeline is created, and apps are added to different stages using\n[`heroku_pipeline_coupling`](./pipeline_coupling.html), you can promote app\nslugs to the next stage.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/heroku/TF-Heroku-Pipeline/docs/README.md",
    "definitions": {
        "OwnerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Id",
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string",
            "description": "The unique identifier (UUID) of a pipeline owner.\n* `type` - (Required) The type of pipeline owner. Can be either `user` or `team`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the pipeline."
        },
        "Owner": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/OwnerDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}