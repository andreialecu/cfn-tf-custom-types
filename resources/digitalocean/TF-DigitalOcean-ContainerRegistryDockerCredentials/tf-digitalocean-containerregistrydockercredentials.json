{
    "typeName": "TF::DigitalOcean::ContainerRegistryDockerCredentials",
    "description": "Get Docker credentials for your DigitalOcean container registry.\n\nAn error is triggered if the provided container registry name does not exist.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/digitalocean/TF-DigitalOcean-ContainerRegistryDockerCredentials/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CredentialExpirationTime": {
            "type": "string"
        },
        "DockerCredentials": {
            "type": "string"
        },
        "ExpirySeconds": {
            "type": "number",
            "description": "The amount of time to pass before the Docker credentials expire in seconds. Defaults to 1576800000, or roughly 50 years. Must be greater than 0 and less than 1576800000."
        },
        "Id": {
            "type": "string"
        },
        "RegistryName": {
            "type": "string",
            "description": "The name of the container registry."
        },
        "Write": {
            "type": "boolean",
            "description": "Allow for write access to the container registry. Defaults to false."
        }
    },
    "additionalProperties": false,
    "required": [
        "RegistryName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CredentialExpirationTime",
        "/properties/DockerCredentials",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/DockerCredentials"
    ]
}