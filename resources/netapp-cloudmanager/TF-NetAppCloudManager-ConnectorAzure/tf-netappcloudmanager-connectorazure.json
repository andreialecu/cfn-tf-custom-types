{
    "typeName": "TF::NetAppCloudManager::ConnectorAzure",
    "description": "Provides a netapp-cloudmanager_connector_azure resource. This can be used to create a new Cloud Manager Connector in AZURE.\nThe environment needs to be configured with the proper credentials before it can be used (az login).\nThe minimum required policy can be found at [Connector deployment policy for Azure](https://s3.amazonaws.com/occm-sample-policies/Policy_for_Setup_As_Service_Azure.json)\n\nIn order for the Connector to create a Cloud Volumes ONTAP system, it requires a role assignment. This can be done with azurerm provider. The following role is required: [Cloud Manager policy for Azure](https://occm-sample-policies.s3.amazonaws.com/Policy_for_cloud_Manager_Azure_3.8.7.json)\n\n\n<!---\ni think we need to create section for terraform and point to there\n-->",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/netapp-cloudmanager/TF-NetAppCloudManager-ConnectorAzure/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccountId": {
            "type": "string",
            "description": "The NetApp account ID that the Connector will be associated with. If not provided, Cloud Manager uses the first account. If no account exists, Cloud Manager creates a new account. You can find the account ID in the account tab of Cloud Manager at [https://cloudmanager.netapp.com](https://cloudmanager.netapp.com)."
        },
        "AdminPassword": {
            "type": "string",
            "description": "The password for the Connector."
        },
        "AdminUsername": {
            "type": "string",
            "description": "The user name for the Connector."
        },
        "AssociatePublicIpAddress": {
            "type": "boolean",
            "description": "Indicates whether to associate the public IP address to the virtual machine."
        },
        "ClientId": {
            "type": "string"
        },
        "Company": {
            "type": "string",
            "description": "The name of the company of the user."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "The location where the Cloud Manager Connector will be created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Cloud Manager Connector."
        },
        "NetworkSecurityGroupName": {
            "type": "string",
            "description": "The name of the security group for the instance."
        },
        "NetworkSecurityResourceGroup": {
            "type": "string",
            "description": "The resource group in Azure associated with the security group. If not provided, it\u2019s assumed that the security group is within the previously specified resource group."
        },
        "ProxyCertificates": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The proxy certificates. A list of certificate file names."
        },
        "ProxyPassword": {
            "type": "string",
            "description": "The proxy password, if using a proxy to connect to the internet."
        },
        "ProxyUrl": {
            "type": "string",
            "description": "The proxy URL, if using a proxy to connect to the internet."
        },
        "ProxyUserName": {
            "type": "string",
            "description": "The proxy user name, if using a proxy to connect to the internet."
        },
        "ResourceGroup": {
            "type": "string",
            "description": "The resource group in Azure where the resources will be created."
        },
        "SubnetId": {
            "type": "string",
            "description": "The name of the subnet for the virtual machine."
        },
        "SubscriptionId": {
            "type": "string",
            "description": "The ID of the Azure subscription."
        },
        "VirtualMachineSize": {
            "type": "string",
            "description": "The virtual machine type. (for example, Standard_D2s_v3). At least 4 CPU and 16 GB of memory are required."
        },
        "VnetId": {
            "type": "string",
            "description": "The name of the virtual network."
        },
        "VnetResourceGroup": {
            "type": "string",
            "description": "The resource group in Azure associated with the virtual network. If not provided, it\u2019s assumed that the VNet is within the previously specified resource group."
        }
    },
    "additionalProperties": false,
    "required": [
        "AdminPassword",
        "AdminUsername",
        "Company",
        "Location",
        "Name",
        "NetworkSecurityGroupName",
        "ResourceGroup",
        "SubnetId",
        "SubscriptionId",
        "VnetId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ClientId",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AdminPassword"
    ]
}