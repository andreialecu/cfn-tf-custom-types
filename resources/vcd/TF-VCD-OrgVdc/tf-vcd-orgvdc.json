{
    "typeName": "TF::VCD::OrgVdc",
    "description": "Provides a vCloud Director Organization VDC resource. This can be used to create and delete an Organization VDC.\nRequires system administrator privileges.\n\n-> **Note:** This resource supports NSX-T and NSX-V based Org Vdcs by providing relevant\n`network_pool_name` and `provider_vdc_name`\n\nSupported in provider *v2.2+*",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vcd/TF-VCD-OrgVdc/docs/README.md",
    "definitions": {
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ComputeCapacityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cpu": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CpuDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                },
                "Memory": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MemoryDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "StorageProfileDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Default": {
                    "type": "boolean"
                },
                "Enabled": {
                    "type": "boolean"
                },
                "Limit": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Default",
                "Limit",
                "Name"
            ]
        },
        "CpuDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Allocated": {
                    "type": "number"
                },
                "Limit": {
                    "type": "number"
                }
            },
            "required": []
        },
        "MemoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Allocated": {
                    "type": "number"
                },
                "Limit": {
                    "type": "number"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AllocationModel": {
            "type": "string",
            "description": "The allocation model used by this VDC; must be one of\n* AllocationVApp (\"Pay as you go\")\n* AllocationPool (\"Allocation pool\")\n* ReservationPool (\"Reservation pool\")\n* Flex (\"Flex\") (*v2.7+*, *vCD 9.7+*)."
        },
        "AllowOverCommit": {
            "type": "boolean",
            "description": "Set to false to disallow creation of the VDC if the `allocation_model` is AllocationPool or ReservationPool and the ComputeCapacity you specified is greater than what the backing Provider VDC can supply. Default is true."
        },
        "CpuGuaranteed": {
            "type": "number",
            "description": "Percentage of allocated CPU resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when `allocation_model` is AllocationVApp, AllocationPool or Flex. If left empty, vCD sets a value."
        },
        "CpuSpeed": {
            "type": "number",
            "description": "Specifies the clock frequency, in Megahertz, for any virtual CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice as much of this value. Ignored for ReservationPool. Required when `allocation_model` is AllocationVApp, AllocationPool or Flex, and may not be less than 256 MHz. Defaults to 1000 MHz if value isn't provided."
        },
        "DefaultVmSizingPolicyId": {
            "type": "string",
            "description": "Set of VM sizing policy IDs. This field requires `vm_sizing_policy_ids` to be configured together."
        },
        "DeleteForce": {
            "type": "boolean",
            "description": "When destroying use `delete_force=True` to remove a VDC and any objects it contains, regardless of their state."
        },
        "DeleteRecursive": {
            "type": "boolean",
            "description": "When destroying use `delete_recursive=True` to remove the VDC and any objects it contains that are in a state that normally allows removal."
        },
        "Description": {
            "type": "string",
            "description": "VDC friendly description."
        },
        "Elasticity": {
            "type": "boolean",
            "description": "Indicates if the Flex VDC should be elastic. Required with the Flex allocation model."
        },
        "EnableFastProvisioning": {
            "type": "boolean",
            "description": "Request fast provisioning. Request will be honored only if the underlying datastore supports it. Fast provisioning can reduce the time it takes to create virtual machines by using vSphere linked clones. If you disable fast provisioning, all provisioning operations will result in full clones."
        },
        "EnableThinProvisioning": {
            "type": "boolean",
            "description": "Boolean to request thin provisioning. Request will be honored only if the underlying data store supports it. Thin provisioning saves storage space by committing it on demand. This allows over-allocation of storage."
        },
        "EnableVmDiscovery": {
            "type": "boolean",
            "description": "If true, discovery of vCenter VMs is enabled for resource pools backing this VDC. If false, discovery is disabled. If left unspecified, the actual behaviour depends on enablement at the organization level and at the system level."
        },
        "Enabled": {
            "type": "boolean",
            "description": "True if this VDC is enabled for use by the organization VDCs. Default is true."
        },
        "Id": {
            "type": "string"
        },
        "IncludeVmMemoryOverhead": {
            "type": "boolean",
            "description": "Indicates if the Flex VDC should include memory overhead into its accounting for admission control. Required with the Flex allocation model."
        },
        "MemoryGuaranteed": {
            "type": "number",
            "description": "Percentage of allocated memory resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when `allocation_model` is AllocationVApp, AllocationPool or Flex. When Allocation model is AllocationPool minimum value is 0.2. If left empty, vCD sets a value."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "description": "Key value map of metadata to assign to this VDC."
        },
        "Name": {
            "type": "string",
            "description": "VDC name."
        },
        "NetworkPoolName": {
            "type": "string",
            "description": "Reference to a network pool in the Provider VDC. Required if this VDC will contain routed or isolated networks."
        },
        "NetworkQuota": {
            "type": "number",
            "description": "Maximum number of network objects that can be deployed in this VDC. Defaults to 0, which means no networks can be deployed."
        },
        "NicQuota": {
            "type": "number",
            "description": "Maximum number of virtual NICs allowed in this VDC. Defaults to 0, which specifies an unlimited number."
        },
        "Org": {
            "type": "string",
            "description": "Organization to create the VDC in, optional if defined at provider level."
        },
        "ProviderVdcName": {
            "type": "string",
            "description": "Name of the Provider VDC from which this organization VDC is provisioned."
        },
        "VmQuota": {
            "type": "number",
            "description": "The maximum number of VMs that can be created in this VDC. Includes deployed and undeployed VMs in vApps and vApp templates. Defaults to 0, which specifies an unlimited number."
        },
        "VmSizingPolicyIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Default VM sizing policy ID. This field requires `default_vm_sizing_policy_id` to be configured together."
        },
        "ComputeCapacity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ComputeCapacityDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "StorageProfile": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/StorageProfileDefinition"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "AllocationModel",
        "DeleteForce",
        "DeleteRecursive",
        "Name",
        "ProviderVdcName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}