{
    "typeName": "TF::VCD::CatalogMedia",
    "description": "Provides a vCloud Director media resource. This can be used to upload media to catalog and delete it.\n\nSupported in provider *v2.0+*",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vcd/TF-VCD-CatalogMedia/docs/README.md",
    "definitions": {
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Catalog": {
            "type": "string",
            "description": "The name of the catalog where to upload media file."
        },
        "CreationDate": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "- Description of media file."
        },
        "Id": {
            "type": "string"
        },
        "IsIso": {
            "type": "boolean"
        },
        "IsPublished": {
            "type": "boolean"
        },
        "MediaPath": {
            "type": "string",
            "description": "- Absolute or relative path to file to upload."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "description": "Key value map of metadata to assign."
        },
        "Name": {
            "type": "string",
            "description": "Media file name in catalog."
        },
        "Org": {
            "type": "string",
            "description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations."
        },
        "OwnerName": {
            "type": "string"
        },
        "ShowUploadProgress": {
            "type": "boolean",
            "description": "- Default false. Allows to see upload progress."
        },
        "Size": {
            "type": "number"
        },
        "Status": {
            "type": "string"
        },
        "StorageProfileName": {
            "type": "string"
        },
        "UploadPieceSize": {
            "type": "number",
            "description": "- size in MB for splitting upload size. It can possibly impact upload performance. Default 1MB."
        }
    },
    "additionalProperties": false,
    "required": [
        "Catalog",
        "MediaPath",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreationDate",
        "/properties/Id",
        "/properties/IsIso",
        "/properties/IsPublished",
        "/properties/OwnerName",
        "/properties/Size",
        "/properties/Status",
        "/properties/StorageProfileName"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}