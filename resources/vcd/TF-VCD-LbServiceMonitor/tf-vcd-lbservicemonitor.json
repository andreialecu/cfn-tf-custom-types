{
    "typeName": "TF::VCD::LbServiceMonitor",
    "description": "Provides a vCloud Director Edge Gateway Load Balancer Service Monitor resource. A service monitor \ndefines health check parameters for a particular type of network traffic. It can be associated with\na pool. Pool members are monitored according to the service monitor parameters. \n\n~> **Note:** To make load balancing work one must ensure that load balancing is enabled on edge gateway (edge gateway must be advanced).\nThis depends on NSX version to work properly. Please refer to [VMware Product Interoperability Matrices](https://www.vmware.com/resources/compatibility/sim/interop_matrix.php#interop&29=&93=) \nto check supported vCloud director and NSX for vSphere configurations.\n\n~> **Note:** The vCloud Director API for NSX supports a subset of the operations and objects defined in the NSX vSphere \nAPI Guide. The API supports NSX 6.2, 6.3, and 6.4.\n\nSupported in provider *v2.4+*",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vcd/TF-VCD-LbServiceMonitor/docs/README.md",
    "definitions": {
        "ExtensionDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "EdgeGateway": {
            "type": "string",
            "description": "The name of the edge gateway on which the service monitor is to be created."
        },
        "Expected": {
            "type": "string",
            "description": "For types `http` and `https`. String that the monitor expects to match in the status line of\nthe HTTP or HTTPS response (for example, `HTTP/1.1`)."
        },
        "Extension": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ExtensionDefinition"
            },
            "description": "A map of advanced monitor parameters as key=value pairs (i.e. `max-age=SECONDS`, `invert-regex`)\n**Note**: When you need a value of `key` only format just set value to empty string (i.e. `linespan = \"\"`)."
        },
        "Id": {
            "type": "string"
        },
        "Interval": {
            "type": "number",
            "description": "Interval in seconds at which a server is to be monitored using the specified Method.\nDefaults to 10."
        },
        "MaxRetries": {
            "type": "number",
            "description": "Number of times the specified monitoring Method must fail sequentially before the server is\ndeclared down. Defaults to 3."
        },
        "Method": {
            "type": "string",
            "description": "For types `http` and `https`. Select http method to be used to detect server status. One of\nOPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, or CONNECT."
        },
        "Name": {
            "type": "string",
            "description": "Service Monitor name."
        },
        "Org": {
            "type": "string",
            "description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations."
        },
        "Receive": {
            "type": "string",
            "description": "For types `http`,  `https`, and `udp`. The string to be matched in the response content.\n**Note**: When `expected` is not matched, the monitor does not try to match the Receive content."
        },
        "Send": {
            "type": "string",
            "description": "For types `http`,  `https`, and `udp`. The data to be sent."
        },
        "Timeout": {
            "type": "number",
            "description": "Maximum time in seconds within which a response from the server must be received. Defaults to 15."
        },
        "Type": {
            "type": "string",
            "description": "Select the way in which you want to send the health check request to the server \u2014 `http`, `https`,\n`tcp`, `icmp`, or `udp`. Depending on the type selected, the remaining attributes are allowed or not."
        },
        "Url": {
            "type": "string",
            "description": "For types `http` and `https`. URL to be used in the server status request."
        },
        "Vdc": {
            "type": "string",
            "description": "The name of VDC to use, optional if defined at provider level."
        }
    },
    "additionalProperties": false,
    "required": [
        "EdgeGateway",
        "Name",
        "Type"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}