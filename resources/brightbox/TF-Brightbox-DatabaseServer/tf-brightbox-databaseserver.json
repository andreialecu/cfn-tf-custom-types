{
    "typeName": "TF::Brightbox::DatabaseServer",
    "description": "Provides a Brightbox Database Server resource. This can be used to create,\nmodify, and delete Database Servers.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/brightbox/TF-Brightbox-DatabaseServer/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminPassword": {
            "type": "string"
        },
        "AdminUsername": {
            "type": "string"
        },
        "AllowAccess": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "DatabaseEngine": {
            "type": "string",
            "description": "Database engine to request. Default is mysql."
        },
        "DatabaseType": {
            "type": "string",
            "description": "ID of the Database Type required."
        },
        "DatabaseVersion": {
            "type": "string",
            "description": "Database version to request. Default is 8.0."
        },
        "Description": {
            "type": "string",
            "description": "A further description of the Database Server."
        },
        "Id": {
            "type": "string"
        },
        "Locked": {
            "type": "boolean",
            "description": "Set to true to stop the database server from being deleted."
        },
        "MaintenanceHour": {
            "type": "number",
            "description": "Number representing 24hr time start of maintenance window hour for x:00-x:59 (0-23). Default is 6."
        },
        "MaintenanceWeekday": {
            "type": "number",
            "description": "Numerical index of weekday (0 is Sunday, 1 is Monday...) to set when automatic updates may be performed. Default is 0 (Sunday)."
        },
        "Name": {
            "type": "string",
            "description": "A label assigned to the Database Server."
        },
        "Snapshot": {
            "type": "string"
        },
        "SnapshotsSchedule": {
            "type": "string",
            "description": "A crontab pattern to determine approximately when scheduled snapshots will run (must be at least hourly)."
        },
        "SnapshotsScheduleNextAt": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "Zone": {
            "type": "string",
            "description": "The handle of the zone required (`gb1-a`, `gb1-b`)."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AllowAccess"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AdminPassword",
        "/properties/AdminUsername",
        "/properties/Id",
        "/properties/SnapshotsScheduleNextAt",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AdminPassword"
    ]
}