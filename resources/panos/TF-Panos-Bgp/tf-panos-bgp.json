{
    "typeName": "TF::Panos::Bgp",
    "description": "This resource allows you to add/update/delete a virtual router's\nBGP configuration.\n\n**Important Note:**  When it comes to BGP configuration, PAN-OS requires that\nBGP itself first be configured before you can add other BGP sub-config, such\nas dampening profiles or peer groups.  Since every BGP resource must reference a\nvirtual router, the key to accomplishing this is by pointing the `virtual_router`\nparam for each BGP sub-config to `panos_bgp.foo.virtual_router` instead\nof `panos_virtual_router.bar.name`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/panos/TF-Panos-Bgp/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AggregateMed": {
            "type": "boolean",
            "description": "Aggregate route only if they have\nsame MED attributes (default: `true`)."
        },
        "AllowRedistributeDefaultRoute": {
            "type": "boolean",
            "description": "Allow redistribute\ndefault route to BGP."
        },
        "AlwaysCompareMed": {
            "type": "boolean",
            "description": "Always compare MEDs."
        },
        "AsFormat": {
            "type": "string",
            "description": "AS format.  Valid values are `\"2-byte\"` (default)\nor `\"4-byte\"`."
        },
        "AsNumber": {
            "type": "string",
            "description": "Local AS number."
        },
        "BfdProfile": {
            "type": "string",
            "description": "BFD configuration."
        },
        "ConfederationMemberAs": {
            "type": "string",
            "description": "Confederation requires\nmember-AS number."
        },
        "DefaultLocalPreference": {
            "type": "string",
            "description": "Default local preference (default:\n`\"100\"`)."
        },
        "DeterministicMedComparison": {
            "type": "boolean",
            "description": "Deterministic MED\ncomparison (default: `true`)."
        },
        "EcmpMultiAs": {
            "type": "boolean",
            "description": "Support multiple AS in ECMP."
        },
        "Enable": {
            "type": "boolean",
            "description": "Enable BGP or not (default: `true`)."
        },
        "EnableGracefulRestart": {
            "type": "boolean",
            "description": "Enable graceful restart\n(default: `true`)."
        },
        "EnforceFirstAs": {
            "type": "boolean",
            "description": "Enforce First AS for EBGP (default:\n`true`)."
        },
        "Id": {
            "type": "string"
        },
        "InstallRoute": {
            "type": "boolean",
            "description": "Populate BGP learned route to global\nroute table."
        },
        "LocalRestartTime": {
            "type": "number",
            "description": "Local restart time to advertise to\npeer, in seconds (default: `120`)."
        },
        "MaxPeerRestartTime": {
            "type": "number",
            "description": "Maximum of peer restart time\naccepted, in seconds (default: `120`)."
        },
        "ReflectorClusterId": {
            "type": "string",
            "description": "Route reflector cluster ID."
        },
        "RejectDefaultRoute": {
            "type": "boolean",
            "description": "Do not learn default route from\nBGP (default: `true`)."
        },
        "RouterId": {
            "type": "string",
            "description": "Router ID of this BGP instance."
        },
        "StaleRouteTime": {
            "type": "number",
            "description": "Time to remove stale routes after\npeer restart, in seconds (default: `120`)."
        },
        "VirtualRouter": {
            "type": "string",
            "description": "The virtual router to add this BGP\nconfiguration to."
        }
    },
    "additionalProperties": false,
    "required": [
        "VirtualRouter"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}