{
    "typeName": "TF::Panos::PanoramaVirtualRouter",
    "description": "This resource allows you to add/update/delete Panorama virtual routers\nfor templates.\n\n**Note** - The `default` virtual router may be configured with this resource,\nhowever it will not be deleted from Panorama.  It will only be unexported\nfrom the vsys that it is currently imported in, and any interfaces imported\ninto the virtual router will be removed.\n\nThis resource has some overlap with the `panos_panorama_virtual_router_entry`\nresource.  If you want to use this resource with the other one, then make\nsure that your `panos_panorama_virtual_router` spec does not define the\n`interfaces` field.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/panos/TF-Panos-PanoramaVirtualRouter/docs/README.md",
    "definitions": {
        "EcmpWeightedRoundRobinInterfacesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "number"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "EbgpDist": {
            "type": "number",
            "description": "Admin distance - EBGP (default: `20`)."
        },
        "EcmpHashSeed": {
            "type": "number",
            "description": "For `ecmp_load_balance_method` = `ip-hash`:\nUser-specified hash seed."
        },
        "EcmpHashSourceOnly": {
            "type": "boolean",
            "description": "For `ecmp_load_balance_method` = `ip-hash`:\nOnly use source address for hash."
        },
        "EcmpHashUsePort": {
            "type": "boolean",
            "description": "For `ecmp_load_balance_method` = `ip-hash`:\nUse source/destination port for hash."
        },
        "EcmpLoadBalanceMethod": {
            "type": "string",
            "description": "Load balancing algorithm.  Valid\nvalues are `ip-modulo`, `ip-hash`, `weighted-round-robin`, or\n`balanced-round-robin`."
        },
        "EcmpMaxPath": {
            "type": "number",
            "description": "Maximum number of ECMP paths supported."
        },
        "EcmpStrictSourcePath": {
            "type": "boolean",
            "description": "Force VPN traffic to exit interface\nthat the source-ip belongs to."
        },
        "EcmpSymmetricReturn": {
            "type": "boolean",
            "description": "Allows return packets to egress out\nof the ingress interface of the flow."
        },
        "EcmpWeightedRoundRobinInterfaces": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/EcmpWeightedRoundRobinInterfacesDefinition"
            },
            "description": "For `ecmp_load_balance_method` =\n`weighted-round-robin`: Interface weight used in weighted ECMP load balancing."
        },
        "EnableEcmp": {
            "type": "boolean",
            "description": "Enable ECMP."
        },
        "IbgpDist": {
            "type": "number",
            "description": "Admin distance - IBGP (default: `200`)."
        },
        "Id": {
            "type": "string"
        },
        "Interfaces": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of interfaces that should use this virtual\nrouter.  If you intend to use the `panos_panorama_virtual_router_entry`\nresource, then you should leave this param unspecified."
        },
        "Name": {
            "type": "string",
            "description": "The virtual router's name."
        },
        "OspfExtDist": {
            "type": "number",
            "description": "Admin distance - OSPF Ext (default: `110`)."
        },
        "OspfIntDist": {
            "type": "number",
            "description": "Admin distance - OSPF Int (default: `30`)."
        },
        "Ospfv3ExtDist": {
            "type": "number",
            "description": "Admin distance - OSPFv3 Ext (default:\n`110`)."
        },
        "Ospfv3IntDist": {
            "type": "number",
            "description": "Admin distance - OSPFv3 Int (default:\n`30`)."
        },
        "RipDist": {
            "type": "number",
            "description": "Admin distance - RIP (default: `120`)."
        },
        "StaticDist": {
            "type": "number",
            "description": "Admin distance - Static (default: `10`)."
        },
        "StaticIpv6Dist": {
            "type": "number",
            "description": "Admin distance - Static IPv6 (default: `10`)."
        },
        "Template": {
            "type": "string",
            "description": "The template name."
        },
        "Vsys": {
            "type": "string",
            "description": "The vsys that will use this virtual router.  This should\nbe something like `vsys1` or `vsys3`."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Template"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}