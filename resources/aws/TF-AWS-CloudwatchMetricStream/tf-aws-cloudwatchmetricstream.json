{
    "typeName": "TF::AWS::CloudwatchMetricStream",
    "description": "Provides a CloudWatch Metric Stream resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CloudwatchMetricStream/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ExcludeFilterDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Namespace": {
                    "type": "string"
                }
            },
            "required": [
                "Namespace"
            ]
        },
        "IncludeFilterDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Namespace": {
                    "type": "string"
                }
            },
            "required": [
                "Namespace"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "CreationDate": {
            "type": "string"
        },
        "FirehoseArn": {
            "type": "string",
            "description": "ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream."
        },
        "Id": {
            "type": "string"
        },
        "LastUpdateDate": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Friendly name of the metric stream. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
        },
        "NamePrefix": {
            "type": "string",
            "description": "Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`."
        },
        "OutputFormat": {
            "type": "string",
            "description": "Output format for the stream. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html)."
        },
        "RoleArn": {
            "type": "string",
            "description": "ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html)."
        },
        "State": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "ExcludeFilter": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ExcludeFilterDefinition"
            }
        },
        "IncludeFilter": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/IncludeFilterDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "FirehoseArn",
        "OutputFormat",
        "RoleArn"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/CreationDate",
        "/properties/Id",
        "/properties/LastUpdateDate",
        "/properties/State"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}