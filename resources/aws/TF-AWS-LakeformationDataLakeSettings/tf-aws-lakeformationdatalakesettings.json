{
    "typeName": "TF::AWS::LakeformationDataLakeSettings",
    "description": "Manages Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.\n\n~> **NOTE:** Lake Formation introduces fine-grained access control for data in your data lake. Part of the changes include the `IAMAllowedPrincipals` principal in order to make Lake Formation backwards compatible with existing IAM and Glue permissions. For more information, see [Changing the Default Security Settings for Your Data Lake](https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html) and [Upgrading AWS Glue Data Permissions to the AWS Lake Formation Model](https://docs.aws.amazon.com/lake-formation/latest/dg/upgrade-glue-lake-formation.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-LakeformationDataLakeSettings/docs/README.md",
    "definitions": {
        "CreateDatabaseDefaultPermissionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Permissions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Principal": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CreateTableDefaultPermissionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Permissions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Principal": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Admins": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "CatalogId": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "TrustedResourceOwners": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "CreateDatabaseDefaultPermissions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CreateDatabaseDefaultPermissionsDefinition"
            },
            "maxItems": 3
        },
        "CreateTableDefaultPermissions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CreateTableDefaultPermissionsDefinition"
            },
            "maxItems": 3
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}