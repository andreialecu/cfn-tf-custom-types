{
    "typeName": "TF::AWS::FmsPolicy",
    "description": "Provides a resource to create an AWS Firewall Manager policy. You need to be using AWS organizations and have enabled the Firewall Manager administrator account.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-FmsPolicy/docs/README.md",
    "definitions": {
        "ResourceTagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ExcludeMapDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Account": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Orgunit": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "IncludeMapDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Account": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Orgunit": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "SecurityServicePolicyDataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ManagedServiceData": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "DeleteAllPolicyResources": {
            "type": "boolean",
            "description": "If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)."
        },
        "ExcludeResourceTags": {
            "type": "boolean",
            "description": "A boolean value, if true the tags that are specified in the `resource_tags` are not protected by this policy. If set to false and resource_tags are populated, resources that contain tags will be protected by this policy."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The friendly name of the AWS Firewall Manager Policy."
        },
        "PolicyUpdateToken": {
            "type": "string"
        },
        "RemediationEnabled": {
            "type": "boolean",
            "description": "A boolean value, indicates if the policy should automatically applied to resources that already exist in the account."
        },
        "ResourceTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ResourceTagsDefinition"
            },
            "description": "A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags."
        },
        "ResourceType": {
            "type": "string",
            "description": "A resource type to protect. Conflicts with `resource_type_list`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values."
        },
        "ResourceTypeList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of resource types to protect. Conflicts with `resource_type`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values."
        },
        "ExcludeMap": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExcludeMapDefinition"
            },
            "maxItems": 1
        },
        "IncludeMap": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IncludeMapDefinition"
            },
            "maxItems": 1
        },
        "SecurityServicePolicyData": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SecurityServicePolicyDataDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "ExcludeResourceTags",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id",
        "/properties/PolicyUpdateToken"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}