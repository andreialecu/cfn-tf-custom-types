{
    "typeName": "TF::AWS::ApiGatewayDeployment",
    "description": "Manages an API Gateway REST Deployment. A deployment is a snapshot of the REST API configuration. The deployment can then be published to callable endpoints via the [`aws_api_gateway_stage` resource](api_gateway_stage.html) and optionally managed further with the [`aws_api_gateway_base_path_mapping` resource](api_gateway_base_path_mapping.html), [`aws_api_gateway_domain_name` resource](api_gateway_domain_name.html), and [`aws_api_method_settings` resource](api_gateway_method_settings.html). For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html).\n\nTo properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior Terraform resources that manage resources/paths, methods, integrations, etc.\n\n* For REST APIs that are configured via OpenAPI specification ([`aws_api_gateway_rest_api` resource](api_gateway_rest_api.html) `body` argument), no special dependency setup is needed b...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-ApiGatewayDeployment/docs/README.md",
    "definitions": {
        "TriggersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "VariablesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CreatedDate": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of the deployment."
        },
        "ExecutionArn": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InvokeUrl": {
            "type": "string"
        },
        "RestApiId": {
            "type": "string",
            "description": "REST API identifier."
        },
        "StageDescription": {
            "type": "string",
            "description": "Description to set on the stage managed by the `stage_name` argument."
        },
        "StageName": {
            "type": "string",
            "description": "Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. It is recommended to use the [`aws_api_gateway_stage` resource](api_gateway_stage.html) instead to manage stages."
        },
        "Triggers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TriggersDefinition"
            },
            "description": "Map of arbitrary keys and values that, when changed, will trigger a redeployment. To force a redeployment without changing these keys/values, use the [`terraform taint` command](https://www.terraform.io/docs/commands/taint.html)."
        },
        "Variables": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/VariablesDefinition"
            },
            "description": "Map to set on the stage managed by the `stage_name` argument."
        }
    },
    "additionalProperties": false,
    "required": [
        "RestApiId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreatedDate",
        "/properties/ExecutionArn",
        "/properties/Id",
        "/properties/InvokeUrl"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}