{
    "typeName": "TF::AWS::TransferUser",
    "description": "Provides a AWS Transfer User resource. Managing SSH keys can be accomplished with the [`aws_transfer_ssh_key` resource](/docs/providers/aws/r/transfer_ssh_key.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-TransferUser/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "HomeDirectoryMappingsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Entry": {
                    "type": "string"
                },
                "Target": {
                    "type": "string"
                }
            },
            "required": [
                "Entry",
                "Target"
            ]
        },
        "PosixProfileDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Gid": {
                    "type": "number"
                },
                "SecondaryGids": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "number"
                    }
                },
                "Uid": {
                    "type": "number"
                }
            },
            "required": [
                "Gid",
                "Uid"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "HomeDirectory": {
            "type": "string",
            "description": "The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a `/`.  The first item in the path is the name of the home bucket (accessible as `${Transfer:HomeBucket}` in the policy) and the rest is the home directory (accessible as `${Transfer:HomeDirectory}` in the policy). For example, `/example-bucket-1234/username` would set the home bucket to `example-bucket-1234` and the home directory to `username`."
        },
        "HomeDirectoryType": {
            "type": "string",
            "description": "The type of landing directory (folder) you mapped for your users' home directory. Valid values are `PATH` and `LOGICAL`."
        },
        "Id": {
            "type": "string"
        },
        "Policy": {
            "type": "string",
            "description": "An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. Since the IAM variable syntax matches Terraform's interpolation syntax, they must be escaped inside Terraform configuration strings (`$${Transfer:UserName}`).  These are evaluated on-the-fly when navigating the bucket."
        },
        "Role": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user\u2019s access to your Amazon S3 bucket."
        },
        "ServerId": {
            "type": "string",
            "description": "The Server ID of the Transfer Server (e.g. `s-12345678`)."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "UserName": {
            "type": "string",
            "description": "The name used for log in to your SFTP server."
        },
        "HomeDirectoryMappings": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HomeDirectoryMappingsDefinition"
            }
        },
        "PosixProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PosixProfileDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Role",
        "ServerId",
        "UserName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}