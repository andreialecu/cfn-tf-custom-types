{
    "typeName": "TF::AWS::RdsGlobalCluster",
    "description": "Manages an RDS Global Cluster, which is an Aurora global database spread across multiple regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem.\n\nMore information about Aurora global databases can be found in the [Aurora User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database-creating).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-RdsGlobalCluster/docs/README.md",
    "definitions": {
        "GlobalClusterMembersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DbClusterArn": {
                    "type": "string"
                },
                "IsWriter": {
                    "type": "boolean"
                }
            }
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "DatabaseName": {
            "type": "string",
            "description": "Name for an automatically created database on cluster creation."
        },
        "DeletionProtection": {
            "type": "boolean",
            "description": "If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`."
        },
        "Engine": {
            "type": "string",
            "description": "Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`. Defaults to `aurora`. Conflicts with `source_db_cluster_identifier`."
        },
        "EngineVersion": {
            "type": "string",
            "description": "Engine version of the Aurora global database. Upgrading the engine version will result in all cluster members being immediately updated.\n* **NOTE:** When the engine is set to `aurora-mysql`, an engine version compatible with global database is required. The earliest available version is `5.7.mysql_aurora.2.06.0`."
        },
        "ForceDestroy": {
            "type": "boolean",
            "description": "Enable to remove DB Cluster members from Global Cluster on destroy. Required with `source_db_cluster_identifier`."
        },
        "GlobalClusterIdentifier": {
            "type": "string",
            "description": "The global cluster identifier."
        },
        "GlobalClusterMembers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/GlobalClusterMembersDefinition"
            }
        },
        "GlobalClusterResourceId": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "SourceDbClusterIdentifier": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value."
        },
        "StorageEncrypted": {
            "type": "boolean",
            "description": "Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided."
        }
    },
    "additionalProperties": false,
    "required": [
        "GlobalClusterIdentifier"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/GlobalClusterMembers",
        "/properties/GlobalClusterResourceId",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}