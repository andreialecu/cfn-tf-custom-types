{
    "typeName": "TF::AWS::EmrInstanceGroup",
    "description": "Provides an Elastic MapReduce Cluster Instance Group configuration.\nSee [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/emr/) for more information.\n\n~> **NOTE:** At this time, Instance Groups cannot be destroyed through the API nor\nweb interface. Instance Groups are destroyed when the EMR Cluster is destroyed.\nTerraform will resize any Instance Group to zero when destroying the resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-EmrInstanceGroup/docs/README.md",
    "definitions": {
        "EbsConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Iops": {
                    "type": "number",
                    "description": "The number of I/O operations per second (IOPS) that the volume supports."
                },
                "Size": {
                    "type": "number",
                    "description": "The volume size, in gibibytes (GiB). This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10."
                },
                "Type": {
                    "type": "string",
                    "description": "The volume type. Valid options are 'gp2', 'io1' and 'standard'."
                },
                "VolumesPerInstance": {
                    "type": "number",
                    "description": "The number of EBS Volumes to attach per instance."
                }
            },
            "required": [
                "Size",
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoscalingPolicy": {
            "type": "string",
            "description": "The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)."
        },
        "BidPrice": {
            "type": "string",
            "description": "If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances."
        },
        "ClusterId": {
            "type": "string"
        },
        "ConfigurationsJson": {
            "type": "string",
            "description": "A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later."
        },
        "EbsOptimized": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "InstanceCount": {
            "type": "number"
        },
        "InstanceType": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "RunningInstanceCount": {
            "type": "number"
        },
        "Status": {
            "type": "string"
        },
        "EbsConfig": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/EbsConfigDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterId",
        "InstanceType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/RunningInstanceCount",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}