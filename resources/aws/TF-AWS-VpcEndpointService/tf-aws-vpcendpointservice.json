{
    "typeName": "TF::AWS::VpcEndpointService",
    "description": "Provides a VPC Endpoint Service resource.\nService consumers can create an _Interface_ [VPC Endpoint](vpc_endpoint.html) to connect to the service.\n\n~> **NOTE on VPC Endpoint Services and VPC Endpoint Service Allowed Principals:** Terraform provides\nboth a standalone [VPC Endpoint Service Allowed Principal](vpc_endpoint_service_allowed_principal.html) resource\nand a VPC Endpoint Service resource with an `allowed_principals` attribute. Do not use the same principal ARN in both\na VPC Endpoint Service resource and a VPC Endpoint Service Allowed Principal resource. Doing so will cause a conflict\nand will overwrite the association.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-VpcEndpointService/docs/README.md",
    "definitions": {
        "PrivateDnsNameConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AcceptanceRequired": {
            "type": "boolean",
            "description": "Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`."
        },
        "AllowedPrincipals": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The ARNs of one or more principals allowed to discover the endpoint service."
        },
        "Arn": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "BaseEndpointDnsNames": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "GatewayLoadBalancerArns": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Amazon Resource Names (ARNs) of one or more Gateway Load Balancers for the endpoint service."
        },
        "Id": {
            "type": "string"
        },
        "ManagesVpcEndpoints": {
            "type": "boolean"
        },
        "NetworkLoadBalancerArns": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Amazon Resource Names (ARNs) of one or more Network Load Balancers for the endpoint service."
        },
        "PrivateDnsName": {
            "type": "string",
            "description": "The private DNS name for the service."
        },
        "PrivateDnsNameConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PrivateDnsNameConfigurationDefinition"
            }
        },
        "ServiceName": {
            "type": "string"
        },
        "ServiceType": {
            "type": "string"
        },
        "State": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "AcceptanceRequired"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/AvailabilityZones",
        "/properties/BaseEndpointDnsNames",
        "/properties/Id",
        "/properties/ManagesVpcEndpoints",
        "/properties/PrivateDnsNameConfiguration",
        "/properties/ServiceName",
        "/properties/ServiceType",
        "/properties/State"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}