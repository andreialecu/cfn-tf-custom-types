{
    "typeName": "TF::AWS::CurReportDefinition",
    "description": "Manages Cost and Usage Report Definitions.\n\n~> *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.\n\n~> *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CurReportDefinition/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdditionalArtifacts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of additional artifacts. Valid values are: `REDSHIFT`, `QUICKSIGHT`, `ATHENA`. When ATHENA exists within additional_artifacts, no other artifact type can be declared and report_versioning must be `OVERWRITE_REPORT`."
        },
        "AdditionalSchemaElements": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of schema elements. Valid values are: `RESOURCES`."
        },
        "Arn": {
            "type": "string"
        },
        "Compression": {
            "type": "string",
            "description": "Compression format for report. Valid values are: `GZIP`, `ZIP`, `Parquet`. If `Parquet` is used, then format must also be `Parquet`."
        },
        "Format": {
            "type": "string",
            "description": "Format for report. Valid values are: `textORcsv`, `Parquet`. If `Parquet` is used, then Compression must also be `Parquet`."
        },
        "Id": {
            "type": "string"
        },
        "RefreshClosedReports": {
            "type": "boolean",
            "description": "Set to true to update your reports after they have been finalized if AWS detects charges related to previous months."
        },
        "ReportName": {
            "type": "string",
            "description": "Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters."
        },
        "ReportVersioning": {
            "type": "string",
            "description": "Overwrite the previous version of each report or to deliver the report in addition to the previous versions. Valid values are: `CREATE_NEW_REPORT` and `OVERWRITE_REPORT`."
        },
        "S3Bucket": {
            "type": "string",
            "description": "Name of the existing S3 bucket to hold generated reports."
        },
        "S3Prefix": {
            "type": "string",
            "description": "Report path prefix. Limited to 256 characters."
        },
        "S3Region": {
            "type": "string",
            "description": "Region of the existing S3 bucket to hold generated reports."
        },
        "TimeUnit": {
            "type": "string",
            "description": "The frequency on which report data are measured and displayed.  Valid values are: `HOURLY`, `DAILY`."
        }
    },
    "additionalProperties": false,
    "required": [
        "AdditionalSchemaElements",
        "Compression",
        "Format",
        "ReportName",
        "S3Bucket",
        "S3Region",
        "TimeUnit"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}