{
    "typeName": "TF::AWS::CloudwatchEventApiDestination",
    "description": "Provides an EventBridge event API Destination resource.\n\n~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CloudwatchEventApiDestination/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "ConnectionArn": {
            "type": "string",
            "description": "ARN of the EventBridge Connection to use for the API Destination."
        },
        "Description": {
            "type": "string",
            "description": "The description of the new API Destination. Maximum of 512 characters."
        },
        "HttpMethod": {
            "type": "string",
            "description": "Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc."
        },
        "Id": {
            "type": "string"
        },
        "InvocationEndpoint": {
            "type": "string",
            "description": "URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include \"*\" as path parameters wildcards to be set from the Target HttpParameters."
        },
        "InvocationRateLimitPerSecond": {
            "type": "number",
            "description": "Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300)."
        },
        "Name": {
            "type": "string",
            "description": "The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_."
        }
    },
    "additionalProperties": false,
    "required": [
        "ConnectionArn",
        "HttpMethod",
        "InvocationEndpoint",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}