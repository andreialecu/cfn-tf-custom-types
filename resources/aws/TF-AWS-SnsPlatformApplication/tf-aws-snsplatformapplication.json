{
    "typeName": "TF::AWS::SnsPlatformApplication",
    "description": "Provides an SNS platform application resource",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-SnsPlatformApplication/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "EventDeliveryFailureTopicArn": {
            "type": "string",
            "description": "SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure."
        },
        "EventEndpointCreatedTopicArn": {
            "type": "string",
            "description": "SNS Topic triggered when a new platform endpoint is added to your platform application."
        },
        "EventEndpointDeletedTopicArn": {
            "type": "string",
            "description": "SNS Topic triggered when an existing platform endpoint is deleted from your platform application."
        },
        "EventEndpointUpdatedTopicArn": {
            "type": "string",
            "description": "SNS Topic triggered when an existing platform endpoint is changed from your platform application."
        },
        "FailureFeedbackRoleArn": {
            "type": "string",
            "description": "The IAM role permitted to receive failure feedback for this application."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The friendly name for the SNS platform application."
        },
        "Platform": {
            "type": "string",
            "description": "The platform that the app is registered with. See [Platform][1] for supported platforms."
        },
        "PlatformCredential": {
            "type": "string",
            "description": "Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources."
        },
        "PlatformPrincipal": {
            "type": "string",
            "description": "Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources."
        },
        "SuccessFeedbackRoleArn": {
            "type": "string",
            "description": "The IAM role permitted to receive success feedback for this application."
        },
        "SuccessFeedbackSampleRate": {
            "type": "string",
            "description": "The percentage of success to sample (0-100)."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Platform",
        "PlatformCredential"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PlatformCredential",
        "/properties/PlatformPrincipal"
    ]
}