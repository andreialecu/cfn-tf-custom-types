{
    "typeName": "TF::AWS::EfsFileSystem",
    "description": "Provides an Elastic File System (EFS) File System resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-EfsFileSystem/docs/README.md",
    "definitions": {
        "SizeInBytesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Value": {
                    "type": "number"
                },
                "ValueInIa": {
                    "type": "number"
                },
                "ValueInStandard": {
                    "type": "number"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LifecyclePolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "TransitionToIa": {
                    "type": "string"
                }
            },
            "required": [
                "TransitionToIa"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "AvailabilityZoneId": {
            "type": "string"
        },
        "AvailabilityZoneName": {
            "type": "string",
            "description": "the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information."
        },
        "CreationToken": {
            "type": "string",
            "description": "A unique name (a maximum of 64 characters are allowed)\nused as reference when creating the Elastic File System to ensure idempotent file\nsystem creation. By default generated by Terraform. See [Elastic File System]\n(http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information."
        },
        "DnsName": {
            "type": "string"
        },
        "Encrypted": {
            "type": "boolean",
            "description": "If true, the disk will be encrypted."
        },
        "Id": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string",
            "description": "The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true."
        },
        "NumberOfMountTargets": {
            "type": "number"
        },
        "OwnerId": {
            "type": "string"
        },
        "PerformanceMode": {
            "type": "string",
            "description": "The file system performance mode. Can be either `\"generalPurpose\"` or `\"maxIO\"` (Default: `\"generalPurpose\"`)."
        },
        "ProvisionedThroughputInMibps": {
            "type": "number",
            "description": "The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughput_mode` set to `provisioned`."
        },
        "SizeInBytes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SizeInBytesDefinition"
            }
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the file system. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "ThroughputMode": {
            "type": "string",
            "description": "Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisioned_throughput_in_mibps`."
        },
        "LifecyclePolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LifecyclePolicyDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/AvailabilityZoneId",
        "/properties/DnsName",
        "/properties/Id",
        "/properties/NumberOfMountTargets",
        "/properties/OwnerId",
        "/properties/SizeInBytes"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}