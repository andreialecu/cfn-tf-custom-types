{
    "typeName": "TF::AWS::SignerSigningProfilePermission",
    "description": "Creates a Signer Signing Profile Permission. That is, a cross-account permission for a signing profile.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-SignerSigningProfilePermission/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "An AWS Signer action permitted as part of cross-account permissions. Valid values: `signer:StartSigningJob`, `signer:GetSigningProfile`, or `signer:RevokeSignature`."
        },
        "Id": {
            "type": "string"
        },
        "Principal": {
            "type": "string",
            "description": "The AWS principal to be granted a cross-account permission."
        },
        "ProfileName": {
            "type": "string",
            "description": "Name of the signing profile to add the cross-account permissions."
        },
        "ProfileVersion": {
            "type": "string",
            "description": "The signing profile version that a permission applies to."
        },
        "StatementId": {
            "type": "string",
            "description": "A unique statement identifier. By default generated by Terraform."
        },
        "StatementIdPrefix": {
            "type": "string",
            "description": "A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`."
        }
    },
    "additionalProperties": false,
    "required": [
        "Action",
        "Principal",
        "ProfileName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}