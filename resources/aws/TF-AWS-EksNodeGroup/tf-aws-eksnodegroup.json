{
    "typeName": "TF::AWS::EksNodeGroup",
    "description": "Manages an EKS Node Group, which can provision and optionally update an Auto Scaling Group of Kubernetes worker nodes compatible with EKS. Additional documentation about this functionality can be found in the [EKS User Guide](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-EksNodeGroup/docs/README.md",
    "definitions": {
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ResourcesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                }
            }
        },
        "ResourcesDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoscalingGroups": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/ResourcesDefinition"
                    }
                },
                "RemoteAccessSecurityGroupId": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LaunchTemplateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": [
                "Version"
            ]
        },
        "RemoteAccessDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Ec2SshKey": {
                    "type": "string"
                },
                "SourceSecurityGroupIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "ScalingConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DesiredSize": {
                    "type": "number"
                },
                "MaxSize": {
                    "type": "number"
                },
                "MinSize": {
                    "type": "number"
                }
            },
            "required": [
                "DesiredSize",
                "MaxSize",
                "MinSize"
            ]
        },
        "TaintDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Effect": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Effect",
                "Key"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AmiType": {
            "type": "string",
            "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. Defaults to `AL2_x86_64`. Valid values: `AL2_x86_64`, `AL2_x86_64_GPU`, `AL2_ARM_64`, `CUSTOM`. Terraform will only perform drift detection if a configuration value is provided."
        },
        "Arn": {
            "type": "string"
        },
        "CapacityType": {
            "type": "string",
            "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. Terraform will only perform drift detection if a configuration value is provided."
        },
        "ClusterName": {
            "type": "string"
        },
        "DiskSize": {
            "type": "number",
            "description": "Disk size in GiB for worker nodes. Defaults to `20`. Terraform will only perform drift detection if a configuration value is provided."
        },
        "ForceUpdateVersion": {
            "type": "boolean",
            "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue."
        },
        "Id": {
            "type": "string"
        },
        "InstanceTypes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`. Terraform will only perform drift detection if a configuration value is provided."
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/LabelsDefinition"
            },
            "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed."
        },
        "NodeGroupName": {
            "type": "string"
        },
        "NodeGroupNamePrefix": {
            "type": "string"
        },
        "NodeRoleArn": {
            "type": "string"
        },
        "ReleaseVersion": {
            "type": "string"
        },
        "Resources": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ResourcesDefinition2"
            }
        },
        "Status": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "Version": {
            "type": "string"
        },
        "LaunchTemplate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LaunchTemplateDefinition"
            },
            "maxItems": 1
        },
        "RemoteAccess": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RemoteAccessDefinition"
            },
            "maxItems": 1
        },
        "ScalingConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ScalingConfigDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Taint": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TaintDefinition"
            },
            "maxItems": 50
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterName",
        "NodeRoleArn",
        "SubnetIds"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id",
        "/properties/Resources",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}