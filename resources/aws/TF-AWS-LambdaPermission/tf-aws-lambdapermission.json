{
    "typeName": "TF::AWS::LambdaPermission",
    "description": "Gives an external source (like a CloudWatch Event Rule, SNS, or S3) permission to access the Lambda function.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-LambdaPermission/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "The AWS Lambda action you want to allow in this statement. (e.g. `lambda:InvokeFunction`)."
        },
        "EventSourceToken": {
            "type": "string",
            "description": "The Event Source Token to validate.  Used with [Alexa Skills][1]."
        },
        "FunctionName": {
            "type": "string",
            "description": "Name of the Lambda function whose resource policy you are updating."
        },
        "Id": {
            "type": "string"
        },
        "Principal": {
            "type": "string",
            "description": "The principal who is getting this permission. e.g. `s3.amazonaws.com`, an AWS account ID, or any valid AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`."
        },
        "Qualifier": {
            "type": "string",
            "description": "Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN. e.g. `arn:aws:lambda:aws-region:acct-id:function:function-name:2`."
        },
        "SourceAccount": {
            "type": "string",
            "description": "This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner."
        },
        "SourceArn": {
            "type": "string",
            "description": "When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.\nWithout this, any resource from `principal` will be granted permission \u2013 even if that resource is from another account.\nFor S3, this should be the ARN of the S3 Bucket.\nFor CloudWatch Events, this should be the ARN of the CloudWatch Events Rule.\nFor API Gateway, this should be the ARN of the API, as described [here][2]."
        },
        "StatementId": {
            "type": "string",
            "description": "A unique statement identifier. By default generated by Terraform."
        },
        "StatementIdPrefix": {
            "type": "string",
            "description": "A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`."
        }
    },
    "additionalProperties": false,
    "required": [
        "Action",
        "FunctionName",
        "Principal"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}