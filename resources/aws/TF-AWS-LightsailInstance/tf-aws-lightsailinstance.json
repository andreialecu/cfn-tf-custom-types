{
    "typeName": "TF::AWS::LightsailInstance",
    "description": "Provides a Lightsail Instance. Amazon Lightsail is a service to provide easy virtual private servers\nwith custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)\nfor more information.\n\n~> **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see [\"Regions and Availability Zones in Amazon Lightsail\"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-LightsailInstance/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string",
            "description": "The Availability Zone in which to create your\ninstance (see list below)."
        },
        "BlueprintId": {
            "type": "string",
            "description": "The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`."
        },
        "BundleId": {
            "type": "string",
            "description": "The bundle of specification information (see list below)."
        },
        "CpuCount": {
            "type": "number"
        },
        "CreatedAt": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Ipv6Address": {
            "type": "string"
        },
        "Ipv6Addresses": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "IsStaticIp": {
            "type": "boolean"
        },
        "KeyPairName": {
            "type": "string",
            "description": "The name of your key pair. Created in the\nLightsail console (cannot use `aws_key_pair` at this time)."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account."
        },
        "PrivateIpAddress": {
            "type": "string"
        },
        "PublicIpAddress": {
            "type": "string"
        },
        "RamSize": {
            "type": "number"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "UserData": {
            "type": "string",
            "description": "launch script to configure server with additional user data."
        },
        "Username": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "AvailabilityZone",
        "BlueprintId",
        "BundleId",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/CpuCount",
        "/properties/CreatedAt",
        "/properties/Id",
        "/properties/Ipv6Address",
        "/properties/Ipv6Addresses",
        "/properties/IsStaticIp",
        "/properties/PrivateIpAddress",
        "/properties/PublicIpAddress",
        "/properties/RamSize",
        "/properties/Username"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}