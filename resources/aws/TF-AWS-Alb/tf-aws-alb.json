{
    "typeName": "TF::AWS::Alb",
    "description": "CloudFormation equivalent of aws_alb",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-Alb/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AccessLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Bucket": {
                    "type": "string"
                },
                "Enabled": {
                    "type": "boolean"
                },
                "Prefix": {
                    "type": "string"
                }
            },
            "required": [
                "Bucket"
            ]
        },
        "SubnetMappingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllocationId": {
                    "type": "string"
                },
                "Ipv6Address": {
                    "type": "string"
                },
                "PrivateIpv4Address": {
                    "type": "string"
                },
                "SubnetId": {
                    "type": "string"
                }
            },
            "required": [
                "SubnetId"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "ArnSuffix": {
            "type": "string"
        },
        "CustomerOwnedIpv4Pool": {
            "type": "string"
        },
        "DnsName": {
            "type": "string"
        },
        "DropInvalidHeaderFields": {
            "type": "boolean"
        },
        "EnableCrossZoneLoadBalancing": {
            "type": "boolean"
        },
        "EnableDeletionProtection": {
            "type": "boolean"
        },
        "EnableHttp2": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "IdleTimeout": {
            "type": "number"
        },
        "Internal": {
            "type": "boolean"
        },
        "IpAddressType": {
            "type": "string"
        },
        "LoadBalancerType": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "NamePrefix": {
            "type": "string"
        },
        "SecurityGroups": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Subnets": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            }
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "VpcId": {
            "type": "string"
        },
        "ZoneId": {
            "type": "string"
        },
        "AccessLogs": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AccessLogsDefinition"
            },
            "maxItems": 1
        },
        "SubnetMapping": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SubnetMappingDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/ArnSuffix",
        "/properties/DnsName",
        "/properties/Id",
        "/properties/VpcId",
        "/properties/ZoneId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}