{
    "typeName": "TF::AWS::CloudfrontRealtimeLogConfig",
    "description": "Provides a CloudFront real-time log configuration resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CloudfrontRealtimeLogConfig/docs/README.md",
    "definitions": {
        "EndpointDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "StreamType": {
                    "type": "string",
                    "description": "The type of data stream where real-time log data is sent. The only valid value is `Kinesis`."
                },
                "KinesisStreamConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/KinesisStreamConfigDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "StreamType"
            ]
        },
        "KinesisStreamConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RoleArn": {
                    "type": "string",
                    "description": "The ARN of an [IAM role](iam_role.html) that CloudFront can use to send real-time log data to the Kinesis data stream.\nSee the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information."
                },
                "StreamArn": {
                    "type": "string",
                    "description": "The ARN of the [Kinesis data stream](kinesis_stream.html)."
                }
            },
            "required": [
                "RoleArn",
                "StreamArn"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "Fields": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The unique name to identify this real-time log configuration."
        },
        "SamplingRate": {
            "type": "number",
            "description": "The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive."
        },
        "Endpoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EndpointDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Fields",
        "Name",
        "SamplingRate"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}