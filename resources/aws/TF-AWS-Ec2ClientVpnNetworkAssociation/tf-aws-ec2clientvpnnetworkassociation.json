{
    "typeName": "TF::AWS::Ec2ClientVpnNetworkAssociation",
    "description": "Provides network associations for AWS Client VPN endpoints. For more information on usage, please see the\n[AWS Client VPN Administrator's Guide](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-Ec2ClientVpnNetworkAssociation/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AssociationId": {
            "type": "string"
        },
        "ClientVpnEndpointId": {
            "type": "string",
            "description": "The ID of the Client VPN endpoint."
        },
        "Id": {
            "type": "string"
        },
        "SecurityGroups": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of up to five custom security groups to apply to the target network. If not specified, the VPC's default security group is assigned."
        },
        "Status": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string",
            "description": "The ID of the subnet to associate with the Client VPN endpoint."
        },
        "VpcId": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClientVpnEndpointId",
        "SubnetId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AssociationId",
        "/properties/Id",
        "/properties/Status",
        "/properties/VpcId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}