{
    "typeName": "TF::AWS::EcsTaskDefinition",
    "description": "Manages a revision of an ECS task definition to be used in `aws_ecs_service`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-EcsTaskDefinition/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "EphemeralStorageDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SizeInGib": {
                    "type": "number"
                }
            },
            "required": [
                "SizeInGib"
            ]
        },
        "InferenceAcceleratorDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DeviceName": {
                    "type": "string"
                },
                "DeviceType": {
                    "type": "string"
                }
            },
            "required": [
                "DeviceName",
                "DeviceType"
            ]
        },
        "PlacementConstraintsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Expression": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Type"
            ]
        },
        "ProxyConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContainerName": {
                    "type": "string"
                },
                "Properties": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PropertiesDefinition"
                    }
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "ContainerName"
            ]
        },
        "PropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "VolumeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HostPath": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "DockerVolumeConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DockerVolumeConfigurationDefinition"
                    },
                    "maxItems": 1
                },
                "EfsVolumeConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/EfsVolumeConfigurationDefinition"
                    },
                    "maxItems": 1
                },
                "FsxWindowsFileServerVolumeConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/FsxWindowsFileServerVolumeConfigurationDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Name"
            ]
        },
        "DockerVolumeConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Autoprovision": {
                    "type": "boolean"
                },
                "Driver": {
                    "type": "string"
                },
                "DriverOpts": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DriverOptsDefinition"
                    }
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LabelsDefinition"
                    }
                },
                "Scope": {
                    "type": "string"
                }
            },
            "required": []
        },
        "DriverOptsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "EfsVolumeConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FileSystemId": {
                    "type": "string"
                },
                "RootDirectory": {
                    "type": "string"
                },
                "TransitEncryption": {
                    "type": "string"
                },
                "TransitEncryptionPort": {
                    "type": "number"
                },
                "AuthorizationConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AuthorizationConfigDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "FileSystemId"
            ]
        },
        "FsxWindowsFileServerVolumeConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FileSystemId": {
                    "type": "string"
                },
                "RootDirectory": {
                    "type": "string"
                },
                "AuthorizationConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AuthorizationConfigDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "FileSystemId",
                "RootDirectory"
            ]
        },
        "AuthorizationConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CredentialsParameter": {
                    "type": "string"
                },
                "Domain": {
                    "type": "string"
                }
            },
            "required": [
                "CredentialsParameter",
                "Domain"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "ContainerDefinitions": {
            "type": "string",
            "description": "A list of valid [container definitions](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html) provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the [Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) section from the official [Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide)."
        },
        "Cpu": {
            "type": "string",
            "description": "Number of cpu units used by the task. If the `requires_compatibilities` is `FARGATE` this field is required."
        },
        "ExecutionRoleArn": {
            "type": "string",
            "description": "ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume."
        },
        "Family": {
            "type": "string",
            "description": "A unique name for your task definition."
        },
        "Id": {
            "type": "string"
        },
        "IpcMode": {
            "type": "string",
            "description": "IPC resource namespace to be used for the containers in the task The valid values are `host`, `task`, and `none`."
        },
        "Memory": {
            "type": "string",
            "description": "Amount (in MiB) of memory used by the task. If the `requires_compatibilities` is `FARGATE` this field is required."
        },
        "NetworkMode": {
            "type": "string",
            "description": "Docker networking mode to use for the containers in the task. Valid values are `none`, `bridge`, `awsvpc`, and `host`."
        },
        "PidMode": {
            "type": "string",
            "description": "Process namespace to use for the containers in the task. The valid values are `host` and `task`."
        },
        "RequiresCompatibilities": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Set of launch types required by the task. The valid values are `EC2` and `FARGATE`."
        },
        "Revision": {
            "type": "number"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "TaskRoleArn": {
            "type": "string",
            "description": "ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services."
        },
        "EphemeralStorage": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EphemeralStorageDefinition"
            },
            "maxItems": 1
        },
        "InferenceAccelerator": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/InferenceAcceleratorDefinition"
            }
        },
        "PlacementConstraints": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/PlacementConstraintsDefinition"
            },
            "maxItems": 10
        },
        "ProxyConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ProxyConfigurationDefinition"
            },
            "maxItems": 1
        },
        "Volume": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/VolumeDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "ContainerDefinitions",
        "Family"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id",
        "/properties/Revision"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}