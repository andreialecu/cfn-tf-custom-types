{
    "typeName": "TF::AWS::SsoadminAccountAssignment",
    "description": "Provides a Single Sign-On (SSO) Account Assignment resource",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-SsoadminAccountAssignment/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InstanceArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the SSO Instance."
        },
        "PermissionSetArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the Permission Set that the admin wants to grant the principal access to."
        },
        "PrincipalId": {
            "type": "string",
            "description": "An identifier for an object in SSO, such as a user or group. PrincipalIds are GUIDs (For example, `f81d4fae-7dec-11d0-a765-00a0c91e6bf6`)."
        },
        "PrincipalType": {
            "type": "string",
            "description": "The entity type for which the assignment will be created. Valid values: `USER`, `GROUP`."
        },
        "TargetId": {
            "type": "string",
            "description": "An AWS account identifier, typically a 10-12 digit string."
        },
        "TargetType": {
            "type": "string",
            "description": "The entity type for which the assignment will be created. Valid values: `AWS_ACCOUNT`."
        }
    },
    "additionalProperties": false,
    "required": [
        "InstanceArn",
        "PermissionSetArn",
        "PrincipalId",
        "PrincipalType",
        "TargetId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}