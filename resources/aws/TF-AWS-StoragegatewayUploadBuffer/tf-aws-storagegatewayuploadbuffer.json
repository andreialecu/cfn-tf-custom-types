{
    "typeName": "TF::AWS::StoragegatewayUploadBuffer",
    "description": "Manages an AWS Storage Gateway upload buffer.\n\n~> **NOTE:** The Storage Gateway API provides no method to remove an upload buffer disk. Destroying this Terraform resource does not perform any Storage Gateway actions.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-StoragegatewayUploadBuffer/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DiskId": {
            "type": "string",
            "description": "Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`."
        },
        "DiskPath": {
            "type": "string",
            "description": "Local disk path. For example, `/dev/nvme1n1`."
        },
        "GatewayArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the gateway."
        },
        "Id": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "GatewayArn"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}