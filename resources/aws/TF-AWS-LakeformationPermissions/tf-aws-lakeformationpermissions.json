{
    "typeName": "TF::AWS::LakeformationPermissions",
    "description": "Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3. Permissions are granted to a principal, in a Data Catalog, relative to a Lake Formation resource, which includes the Data Catalog, databases, and tables. For more information, see [Security and Access Control to Metadata and Data in Lake Formation](https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html).\n\n~> **NOTE:** Lake Formation grants implicit permissions to data lake administrators, database creators, and table creators. These implicit permissions cannot be revoked _per se_. If this resource reads implicit permissions, it will attempt to revoke them, which causes an error when the resource is destroyed. There are two ways to avoid these errors. First, grant explicit permissions (and `permissions_with_grant_option`) to \"overwrite\" a principal's implicit permissions, which you can then revoke with this resource. Second, avoid using this res...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-LakeformationPermissions/docs/README.md",
    "definitions": {
        "DataLocationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Arn": {
                    "type": "string"
                },
                "CatalogId": {
                    "type": "string"
                }
            },
            "required": [
                "Arn"
            ]
        },
        "DatabaseDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CatalogId": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ]
        },
        "TableDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CatalogId": {
                    "type": "string"
                },
                "DatabaseName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Wildcard": {
                    "type": "boolean"
                }
            },
            "required": [
                "DatabaseName"
            ]
        },
        "TableWithColumnsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CatalogId": {
                    "type": "string"
                },
                "ColumnNames": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "DatabaseName": {
                    "type": "string"
                },
                "ExcludedColumnNames": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "Wildcard": {
                    "type": "boolean"
                }
            },
            "required": [
                "DatabaseName",
                "Name"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CatalogId": {
            "type": "string"
        },
        "CatalogResource": {
            "type": "boolean",
            "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to `false`."
        },
        "Id": {
            "type": "string"
        },
        "Permissions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "PermissionsWithGrantOption": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Subset of `permissions` which the principal can pass."
        },
        "Principal": {
            "type": "string"
        },
        "DataLocation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DataLocationDefinition"
            },
            "maxItems": 1
        },
        "Database": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DatabaseDefinition"
            },
            "maxItems": 1
        },
        "Table": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TableDefinition"
            },
            "maxItems": 1
        },
        "TableWithColumns": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TableWithColumnsDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Permissions",
        "Principal"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}