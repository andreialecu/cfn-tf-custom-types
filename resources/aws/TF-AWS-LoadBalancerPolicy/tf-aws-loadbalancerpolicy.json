{
    "typeName": "TF::AWS::LoadBalancerPolicy",
    "description": "Provides a load balancer policy, which can be attached to an ELB listener or backend server.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-LoadBalancerPolicy/docs/README.md",
    "definitions": {
        "PolicyAttributeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LoadBalancerName": {
            "type": "string",
            "description": "The load balancer on which the policy is defined."
        },
        "PolicyName": {
            "type": "string",
            "description": "The name of the load balancer policy."
        },
        "PolicyTypeName": {
            "type": "string",
            "description": "The policy type."
        },
        "PolicyAttribute": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/PolicyAttributeDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "LoadBalancerName",
        "PolicyName",
        "PolicyTypeName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}