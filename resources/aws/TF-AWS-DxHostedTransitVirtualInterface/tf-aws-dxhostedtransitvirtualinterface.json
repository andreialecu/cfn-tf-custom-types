{
    "typeName": "TF::AWS::DxHostedTransitVirtualInterface",
    "description": "Provides a Direct Connect hosted transit virtual interface resource.\nThis resource represents the allocator's side of the hosted virtual interface.\nA hosted virtual interface is a virtual interface that is owned by another AWS account.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-DxHostedTransitVirtualInterface/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AddressFamily": {
            "type": "string",
            "description": "The address family for the BGP peer. `ipv4 ` or `ipv6`."
        },
        "AmazonAddress": {
            "type": "string",
            "description": "The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers."
        },
        "AmazonSideAsn": {
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "AwsDevice": {
            "type": "string"
        },
        "BgpAsn": {
            "type": "number",
            "description": "The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration."
        },
        "BgpAuthKey": {
            "type": "string",
            "description": "The authentication key for BGP configuration."
        },
        "ConnectionId": {
            "type": "string",
            "description": "The ID of the Direct Connect connection (or LAG) on which to create the virtual interface."
        },
        "CustomerAddress": {
            "type": "string",
            "description": "The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers."
        },
        "Id": {
            "type": "string"
        },
        "JumboFrameCapable": {
            "type": "boolean"
        },
        "Mtu": {
            "type": "number",
            "description": "The maximum transmission unit (MTU) is the size, in bytes, of the largest permissible packet that can be passed over the connection. The MTU of a virtual transit interface can be either `1500` or `8500` (jumbo frames). Default is `1500`."
        },
        "Name": {
            "type": "string",
            "description": "The name for the virtual interface."
        },
        "OwnerAccountId": {
            "type": "string",
            "description": "The AWS account that will own the new virtual interface."
        },
        "Vlan": {
            "type": "number",
            "description": "The VLAN ID."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AddressFamily",
        "BgpAsn",
        "ConnectionId",
        "Name",
        "OwnerAccountId",
        "Vlan"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AmazonSideAsn",
        "/properties/Arn",
        "/properties/AwsDevice",
        "/properties/Id",
        "/properties/JumboFrameCapable"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}