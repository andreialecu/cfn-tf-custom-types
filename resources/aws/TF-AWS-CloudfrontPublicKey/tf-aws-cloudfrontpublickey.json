{
    "typeName": "TF::AWS::CloudfrontPublicKey",
    "description": "CloudFormation equivalent of aws_cloudfront_public_key",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CloudfrontPublicKey/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CallerReference": {
            "type": "string"
        },
        "Comment": {
            "type": "string",
            "description": "An optional comment about the public key."
        },
        "EncodedKey": {
            "type": "string",
            "description": "The encoded public key that you want to add to CloudFront to use with features like field-level encryption."
        },
        "Etag": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name for the public key. By default generated by Terraform."
        },
        "NamePrefix": {
            "type": "string",
            "description": "The name for the public key. Conflicts with `name`."
        }
    },
    "additionalProperties": false,
    "required": [
        "EncodedKey"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CallerReference",
        "/properties/Etag",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}