{
    "typeName": "TF::AWS::NeptuneClusterInstance",
    "description": "A Cluster Instance Resource defines attributes that are specific to a single instance in a Neptune Cluster.\n\nYou can simply add neptune instances and Neptune manages the replication. You can use the [count][1]\nmeta-parameter to make multiple instances and join them all to the same Neptune Cluster, or you may specify different Cluster Instance resources with various `instance_class` sizes.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-NeptuneClusterInstance/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Address": {
            "type": "string"
        },
        "ApplyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any instance modifications\nare applied immediately, or during the next maintenance window. Default is`false`."
        },
        "Arn": {
            "type": "string"
        },
        "AutoMinorVersionUpgrade": {
            "type": "boolean",
            "description": "Indicates that minor engine upgrades will be applied automatically to the instance during the maintenance window. Default is `true`."
        },
        "AvailabilityZone": {
            "type": "string",
            "description": "The EC2 Availability Zone that the neptune instance is created in."
        },
        "ClusterIdentifier": {
            "type": "string",
            "description": "The identifier of the [`aws_neptune_cluster`](/docs/providers/aws/r/neptune_cluster.html) in which to launch this instance."
        },
        "DbiResourceId": {
            "type": "string"
        },
        "Endpoint": {
            "type": "string"
        },
        "Engine": {
            "type": "string",
            "description": "The name of the database engine to be used for the neptune instance. Defaults to `neptune`. Valid Values: `neptune`."
        },
        "EngineVersion": {
            "type": "string",
            "description": "The neptune engine version."
        },
        "Id": {
            "type": "string"
        },
        "Identifier": {
            "type": "string",
            "description": "The identifier for the neptune instance, if omitted, Terraform will assign a random, unique identifier."
        },
        "IdentifierPrefix": {
            "type": "string",
            "description": "Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`."
        },
        "InstanceClass": {
            "type": "string",
            "description": "The instance class to use."
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "NeptuneParameterGroupName": {
            "type": "string",
            "description": "The name of the neptune parameter group to associate with this instance."
        },
        "NeptuneSubnetGroupName": {
            "type": "string",
            "description": "A subnet group to associate with this neptune instance. **NOTE:** This must match the `neptune_subnet_group_name` of the attached [`aws_neptune_cluster`](/docs/providers/aws/r/neptune_cluster.html)."
        },
        "Port": {
            "type": "number",
            "description": "The port on which the DB accepts connections. Defaults to `8182`."
        },
        "PreferredBackupWindow": {
            "type": "string",
            "description": "The daily time range during which automated backups are created if automated backups are enabled. Eg: \"04:00-09:00\"."
        },
        "PreferredMaintenanceWindow": {
            "type": "string",
            "description": "The window to perform maintenance in.\nSyntax: \"ddd:hh24:mi-ddd:hh24:mi\". Eg: \"Mon:00:00-Mon:03:00\"."
        },
        "PromotionTier": {
            "type": "number",
            "description": "Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer."
        },
        "PubliclyAccessible": {
            "type": "boolean",
            "description": "Bool to control if instance is publicly accessible. Default is `false`."
        },
        "StorageEncrypted": {
            "type": "boolean"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the instance. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "Writer": {
            "type": "boolean"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterIdentifier",
        "InstanceClass"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Address",
        "/properties/Arn",
        "/properties/DbiResourceId",
        "/properties/Endpoint",
        "/properties/Id",
        "/properties/KmsKeyArn",
        "/properties/StorageEncrypted",
        "/properties/Writer"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}