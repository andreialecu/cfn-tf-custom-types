{
    "typeName": "TF::AWS::OpsworksStack",
    "description": "Provides an OpsWorks stack resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-OpsworksStack/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "CustomCookbooksSourceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Password": {
                    "type": "string",
                    "description": "Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
                },
                "Revision": {
                    "type": "string",
                    "description": "For sources that are version-aware, the revision to use."
                },
                "SshKey": {
                    "type": "string",
                    "description": "SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of source to use. For example, \"archive\"."
                },
                "Url": {
                    "type": "string",
                    "description": "The URL where the cookbooks resource can be found."
                },
                "Username": {
                    "type": "string",
                    "description": "Username to use when authenticating to the source."
                }
            },
            "required": [
                "Type",
                "Url"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AgentVersion": {
            "type": "string",
            "description": "If set to `\"LATEST\"`, OpsWorks will automatically install the latest version."
        },
        "Arn": {
            "type": "string"
        },
        "BerkshelfVersion": {
            "type": "string",
            "description": "If `manage_berkshelf` is enabled, the version of Berkshelf to use."
        },
        "Color": {
            "type": "string",
            "description": "Color to paint next to the stack's resources in the OpsWorks console."
        },
        "ConfigurationManagerName": {
            "type": "string",
            "description": "Name of the configuration manager to use. Defaults to \"Chef\"."
        },
        "ConfigurationManagerVersion": {
            "type": "string",
            "description": "Version of the configuration manager to use. Defaults to \"11.4\"."
        },
        "CustomJson": {
            "type": "string",
            "description": "Custom JSON attributes to apply to the entire stack."
        },
        "DefaultAvailabilityZone": {
            "type": "string",
            "description": "Name of the availability zone where instances will be created\nby default. This is required unless you set `vpc_id`."
        },
        "DefaultInstanceProfileArn": {
            "type": "string",
            "description": "The ARN of an IAM Instance Profile that created instances\nwill have by default."
        },
        "DefaultOs": {
            "type": "string",
            "description": "Name of OS that will be installed on instances by default."
        },
        "DefaultRootDeviceType": {
            "type": "string",
            "description": "Name of the type of root device instances will have by default."
        },
        "DefaultSshKeyName": {
            "type": "string",
            "description": "Name of the SSH keypair that instances will have by default."
        },
        "DefaultSubnetId": {
            "type": "string",
            "description": "Id of the subnet in which instances will be created by default. Mandatory\nif `vpc_id` is set, and forbidden if it isn't."
        },
        "HostnameTheme": {
            "type": "string",
            "description": "Keyword representing the naming scheme that will be used for instance hostnames\nwithin this stack."
        },
        "Id": {
            "type": "string"
        },
        "ManageBerkshelf": {
            "type": "boolean",
            "description": "Boolean value controlling whether Opsworks will run Berkshelf for this stack."
        },
        "Name": {
            "type": "string",
            "description": "The name of the stack."
        },
        "Region": {
            "type": "string",
            "description": "The name of the region where the stack will exist."
        },
        "ServiceRoleArn": {
            "type": "string",
            "description": "The ARN of an IAM role that the OpsWorks service will act as."
        },
        "StackEndpoint": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "UseCustomCookbooks": {
            "type": "boolean",
            "description": "Boolean value controlling whether the custom cookbook settings are\nenabled."
        },
        "UseOpsworksSecurityGroups": {
            "type": "boolean",
            "description": "Boolean value controlling whether the standard OpsWorks\nsecurity groups apply to created instances."
        },
        "VpcId": {
            "type": "string",
            "description": "The id of the VPC that this stack belongs to."
        },
        "CustomCookbooksSource": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CustomCookbooksSourceDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "DefaultInstanceProfileArn",
        "Name",
        "Region",
        "ServiceRoleArn"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id",
        "/properties/StackEndpoint"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/CustomCookbooksSourceDefinition/Password",
        "/definitions/CustomCookbooksSourceDefinition/SshKey"
    ]
}