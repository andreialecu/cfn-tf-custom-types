{
    "typeName": "TF::AWS::MwaaEnvironment",
    "description": "Creates a MWAA Environment resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-MwaaEnvironment/docs/README.md",
    "definitions": {
        "AirflowConfigurationOptionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LastUpdatedDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ErrorCode": {
                    "type": "string"
                },
                "ErrorMessage": {
                    "type": "string"
                }
            }
        },
        "LastUpdatedDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Error": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/LastUpdatedDefinition"
                    }
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LoggingConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DagProcessingLogs": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DagProcessingLogsDefinition"
                    },
                    "maxItems": 1
                },
                "SchedulerLogs": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SchedulerLogsDefinition"
                    },
                    "maxItems": 1
                },
                "TaskLogs": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TaskLogsDefinition"
                    },
                    "maxItems": 1
                },
                "WebserverLogs": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/WebserverLogsDefinition"
                    },
                    "maxItems": 1
                },
                "WorkerLogs": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/WorkerLogsDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "NetworkConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SecurityGroupIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "SubnetIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "SecurityGroupIds",
                "SubnetIds"
            ]
        },
        "DagProcessingLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "LogLevel": {
                    "type": "string"
                }
            },
            "required": []
        },
        "SchedulerLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "LogLevel": {
                    "type": "string"
                }
            },
            "required": []
        },
        "TaskLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "LogLevel": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WebserverLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "LogLevel": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WorkerLogsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "LogLevel": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AirflowConfigurationOptions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/AirflowConfigurationOptionsDefinition"
            },
            "description": "The `airflow_configuration_options` parameter specifies airflow override options. Check the [Official documentation](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html#configuring-env-variables-reference) for all possible configuration options."
        },
        "AirflowVersion": {
            "type": "string",
            "description": "Airflow version of your environment, will be set by default to the latest version that MWAA supports."
        },
        "Arn": {
            "type": "string"
        },
        "CreatedAt": {
            "type": "string"
        },
        "DagS3Path": {
            "type": "string",
            "description": "The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see [Importing DAGs on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html)."
        },
        "EnvironmentClass": {
            "type": "string",
            "description": "Environment class for the cluster. Possible options are `mw1.small`, `mw1.medium`, `mw1.large`. Will be set by default to `mw1.small`. Please check the [AWS Pricing](https://aws.amazon.com/de/managed-workflows-for-apache-airflow/pricing/) for more information about the environment classes."
        },
        "ExecutionRoleArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the [official AWS documentation](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html) for the detailed role specification."
        },
        "Id": {
            "type": "string"
        },
        "KmsKey": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of your KMS key that you want to use for encryption. Will be set to the ARN of the managed KMS key `aws/airflow` by default. Please check the [Official Documentation](https://docs.aws.amazon.com/mwaa/latest/userguide/custom-keys-certs.html) for more information."
        },
        "LastUpdated": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LastUpdatedDefinition2"
            }
        },
        "MaxWorkers": {
            "type": "number",
            "description": "The maximum number of workers that can be automatically scaled up. Value need to be between `1` and `25`. Will be `10` by default."
        },
        "MinWorkers": {
            "type": "number",
            "description": "The minimum number of workers that you want to run in your environment. Will be `1` by default."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Apache Airflow Environment."
        },
        "PluginsS3ObjectVersion": {
            "type": "string",
            "description": "The plugins.zip file version you want to use."
        },
        "PluginsS3Path": {
            "type": "string",
            "description": "The relative path to the plugins.zip file on your Amazon S3 storage bucket. For example, plugins.zip. If a relative path is provided in the request, then plugins_s3_object_version is required. For more information, see [Importing DAGs on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html)."
        },
        "RequirementsS3ObjectVersion": {
            "type": "string",
            "description": "The requirements.txt file version you want to use."
        },
        "RequirementsS3Path": {
            "type": "string",
            "description": "The relative path to the requirements.txt file on your Amazon S3 storage bucket. For example, requirements.txt. If a relative path is provided in the request, then requirements_s3_object_version is required. For more information, see [Importing DAGs on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html)."
        },
        "ServiceRoleArn": {
            "type": "string"
        },
        "SourceBucketArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname."
        },
        "Status": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of resource tags to associate with the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "WebserverAccessMode": {
            "type": "string",
            "description": "Specifies whether the webserver should be accessible over the internet or via your specified VPC. Possible options: `PRIVATE_ONLY` (default) and `PUBLIC_ONLY`."
        },
        "WebserverUrl": {
            "type": "string"
        },
        "WeeklyMaintenanceWindowStart": {
            "type": "string",
            "description": "Specifies the start date for the weekly maintenance window."
        },
        "LoggingConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LoggingConfigurationDefinition"
            },
            "maxItems": 1
        },
        "NetworkConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkConfigurationDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "DagS3Path",
        "ExecutionRoleArn",
        "Name",
        "SourceBucketArn"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/CreatedAt",
        "/properties/Id",
        "/properties/LastUpdated",
        "/properties/ServiceRoleArn",
        "/properties/Status",
        "/properties/WebserverUrl"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AirflowConfigurationOptions"
    ]
}