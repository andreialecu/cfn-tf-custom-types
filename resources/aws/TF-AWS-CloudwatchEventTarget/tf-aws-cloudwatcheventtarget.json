{
    "typeName": "TF::AWS::CloudwatchEventTarget",
    "description": "Provides an EventBridge Target resource.\n\n~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-CloudwatchEventTarget/docs/README.md",
    "definitions": {
        "BatchTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ArraySize": {
                    "type": "number",
                    "description": "The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000."
                },
                "JobAttempts": {
                    "type": "number",
                    "description": "The number of times to attempt to retry, if the job fails. Valid values are 1 to 10."
                },
                "JobDefinition": {
                    "type": "string",
                    "description": "The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist."
                },
                "JobName": {
                    "type": "string",
                    "description": "The name to use for this execution of the job, if the target is an AWS Batch job."
                }
            },
            "required": [
                "JobDefinition",
                "JobName"
            ]
        },
        "DeadLetterConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Arn": {
                    "type": "string",
                    "description": "- ARN of the SQS queue specified as the target for the dead-letter queue."
                }
            },
            "required": []
        },
        "EcsTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Group": {
                    "type": "string",
                    "description": "Specifies an ECS task group for the task. The maximum length is 255 characters."
                },
                "LaunchType": {
                    "type": "string",
                    "description": "Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: an empty string `\"\"` (to specify no launch type), `EC2`, or `FARGATE`."
                },
                "PlatformVersion": {
                    "type": "string",
                    "description": "Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see [AWS Fargate Platform Versions](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)."
                },
                "TaskCount": {
                    "type": "number",
                    "description": "The number of tasks to create based on the TaskDefinition. The default is 1."
                },
                "TaskDefinitionArn": {
                    "type": "string",
                    "description": "The ARN of the task definition to use if the event target is an Amazon ECS cluster."
                },
                "NetworkConfiguration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/NetworkConfigurationDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "TaskDefinitionArn"
            ]
        },
        "HttpTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HeaderParameters": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HeaderParametersDefinition"
                    },
                    "description": "Enables you to specify HTTP headers to add to the request."
                },
                "PathParameterValues": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of values that correspond sequentially to any path variables in your endpoint ARN (for example `arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*`)."
                },
                "QueryStringParameters": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/QueryStringParametersDefinition"
                    },
                    "description": "Represents keys/values of query string parameters that are appended to the invoked endpoint."
                }
            },
            "required": []
        },
        "HeaderParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "QueryStringParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "InputTransformerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "InputPaths": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InputPathsDefinition"
                    },
                    "description": "Key value pairs specified in the form of JSONPath (for example, time = $.time)\n* You can have as many as 100 key-value pairs.\n* You must use JSON dot notation, not bracket notation.\n* The keys can't start with \"AWS\"."
                },
                "InputTemplate": {
                    "type": "string",
                    "description": "Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes. Values must be escaped for both JSON and Terraform, e.g. `\"\\\"Your string goes here.\\\\nA new line.\\\"\"`."
                }
            },
            "required": [
                "InputTemplate"
            ]
        },
        "InputPathsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "KinesisTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PartitionKeyPath": {
                    "type": "string",
                    "description": "The JSON path to be extracted from the event and used as the partition key."
                }
            },
            "required": []
        },
        "RetryPolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaximumEventAgeInSeconds": {
                    "type": "number",
                    "description": "The age in seconds to continue to make retry attempts."
                },
                "MaximumRetryAttempts": {
                    "type": "number",
                    "description": "maximum number of retry attempts to make before the request fails."
                }
            },
            "required": []
        },
        "RunCommandTargetsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string",
                    "description": "Can be either `tag:tag-key` or `InstanceIds`."
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "If Key is `tag:tag-key`, Values is a list of tag values. If Key is `InstanceIds`, Values is a list of Amazon EC2 instance IDs."
                }
            },
            "required": [
                "Key",
                "Values"
            ]
        },
        "SqsTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MessageGroupId": {
                    "type": "string",
                    "description": "The FIFO message group ID to use as the target."
                }
            },
            "required": []
        },
        "NetworkConfigurationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AssignPublicIp": {
                    "type": "boolean",
                    "description": "Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Default `false`."
                },
                "SecurityGroups": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used."
                },
                "Subnets": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnets associated with the task or service."
                }
            },
            "required": [
                "Subnets"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the target."
        },
        "EventBusName": {
            "type": "string",
            "description": "The event bus to associate with the rule. If you omit this, the `default` event bus is used."
        },
        "Id": {
            "type": "string"
        },
        "Input": {
            "type": "string",
            "description": "Valid JSON text passed to the target. Conflicts with `input_path` and `input_transformer`."
        },
        "InputPath": {
            "type": "string",
            "description": "The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `input_transformer`."
        },
        "RoleArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecs_target` is used."
        },
        "Rule": {
            "type": "string",
            "description": "The name of the rule you want to add targets to."
        },
        "TargetId": {
            "type": "string",
            "description": "The unique target assignment ID.  If missing, will generate a random, unique id."
        },
        "BatchTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BatchTargetDefinition"
            },
            "maxItems": 1
        },
        "DeadLetterConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DeadLetterConfigDefinition"
            },
            "maxItems": 1
        },
        "EcsTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EcsTargetDefinition"
            },
            "maxItems": 1
        },
        "HttpTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpTargetDefinition"
            },
            "maxItems": 1
        },
        "InputTransformer": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/InputTransformerDefinition"
            },
            "maxItems": 1
        },
        "KinesisTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KinesisTargetDefinition"
            },
            "maxItems": 1
        },
        "RetryPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RetryPolicyDefinition"
            },
            "maxItems": 1
        },
        "RunCommandTargets": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RunCommandTargetsDefinition"
            },
            "maxItems": 5
        },
        "SqsTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SqsTargetDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Arn",
        "Rule"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}