{
    "typeName": "TF::AWS::DaxCluster",
    "description": "Provides a DAX Cluster resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/TF-AWS-DaxCluster/docs/README.md",
    "definitions": {
        "NodesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Address": {
                    "type": "string"
                },
                "AvailabilityZone": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Port": {
                    "type": "number"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsAllDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ServerSideEncryptionDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Whether to enable encryption at rest. Defaults to `false`."
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of Availability Zones in which the\nnodes will be created."
        },
        "ClusterAddress": {
            "type": "string"
        },
        "ClusterName": {
            "type": "string"
        },
        "ConfigurationEndpoint": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "IamRoleArn": {
            "type": "string",
            "description": "A valid Amazon Resource Name (ARN) that identifies\nan IAM role. At runtime, DAX will assume this role and use the role's\npermissions to access DynamoDB on your behalf."
        },
        "Id": {
            "type": "string"
        },
        "MaintenanceWindow": {
            "type": "string"
        },
        "NodeType": {
            "type": "string"
        },
        "Nodes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NodesDefinition"
            }
        },
        "NotificationTopicArn": {
            "type": "string"
        },
        "ParameterGroupName": {
            "type": "string"
        },
        "Port": {
            "type": "number"
        },
        "ReplicationFactor": {
            "type": "number"
        },
        "SecurityGroupIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "SubnetGroupName": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level."
        },
        "TagsAll": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsAllDefinition"
            }
        },
        "ServerSideEncryption": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServerSideEncryptionDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterName",
        "IamRoleArn",
        "NodeType",
        "ReplicationFactor"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/ClusterAddress",
        "/properties/ConfigurationEndpoint",
        "/properties/Id",
        "/properties/Nodes",
        "/properties/Port"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}