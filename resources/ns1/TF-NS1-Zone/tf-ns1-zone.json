{
    "typeName": "TF::NS1::Zone",
    "description": "Provides a NS1 DNS Zone resource. This can be used to create, modify, and delete zones.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/ns1/TF-NS1-Zone/docs/README.md",
    "definitions": {
        "SecondariesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Ip": {
                    "type": "string"
                },
                "Notify": {
                    "type": "boolean"
                },
                "Port": {
                    "type": "number"
                }
            },
            "required": [
                "Ip"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdditionalPrimaries": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of additional IPv4 addresses for the primary\nzone. Conflicts with `secondaries`."
        },
        "AutogenerateNsRecord": {
            "type": "boolean",
            "description": ". If set to false, clears\nthe autogenerated NS record on zone creation. This allows an automated\nworkflow for creating zones with the NS record in terraform state. See\nabove for an example. Note that this option only has an effect when a zone is\nbeing created."
        },
        "DnsServers": {
            "type": "string"
        },
        "Dnssec": {
            "type": "boolean",
            "description": "Whether or not DNSSEC is enabled for the zone.\nNote that DNSSEC must be enabled on the account by support for this to be set\nto `true`."
        },
        "Expiry": {
            "type": "number",
            "description": "The SOA Expiry. Conflicts with `primary` and\n`additional_primaries` (default must be accepted)."
        },
        "Hostmaster": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Link": {
            "type": "string",
            "description": "The target zone(domain name) to link to."
        },
        "Networks": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "number"
            },
            "description": "List of network IDs for which the zone is\navailable. If no network is provided, the zone will be created in network 0,\nthe primary NS1 Global Network."
        },
        "NxTtl": {
            "type": "number",
            "description": "The SOA NX TTL. Conflicts with `primary` and\n`additional_primaries` (default must be accepted)."
        },
        "Primary": {
            "type": "string",
            "description": "The primary zones' IPv4 address. This makes the zone a\nsecondary. Conflicts with `secondaries`."
        },
        "Refresh": {
            "type": "number",
            "description": "The SOA Refresh. Conflicts with `primary` and\n`additional_primaries` (default must be accepted)."
        },
        "Retry": {
            "type": "number",
            "description": "The SOA Retry. Conflicts with `primary` and\n`additional_primaries` (default must be accepted)."
        },
        "Ttl": {
            "type": "number",
            "description": "The SOA TTL."
        },
        "Zone": {
            "type": "string",
            "description": "The domain name of the zone."
        },
        "Secondaries": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SecondariesDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Zone"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/DnsServers",
        "/properties/Hostmaster",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}