{
    "typeName": "TF::NSXT::PolicyContextProfile",
    "description": "This resource provides a method for the management of a Context Profile.\nThis resource is supported with NSX 3.0.0 onwards.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/nsxt/TF-NSXT-PolicyContextProfile/docs/README.md",
    "definitions": {
        "AppIdDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Value": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "SubAttribute": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/SubAttributeDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Value"
            ]
        },
        "DomainNameDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Value": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Value"
            ]
        },
        "TagDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "Tag": {
                    "type": "string"
                }
            },
            "required": []
        },
        "UrlCategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Value": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Value"
            ]
        },
        "SubAttributeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CifsSmbVersion": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "TlsCipherSuite": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "TlsVersion": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of the attribute.\n* `value` - (Required) A list of string indicating values for the `url_category`. Must be a subset of valid values for `url_category` on NSX."
        },
        "DisplayName": {
            "type": "string",
            "description": "Display name of the resource."
        },
        "Id": {
            "type": "string"
        },
        "NsxId": {
            "type": "string",
            "description": "The NSX ID of this resource. If set, this ID will be used to create the resource."
        },
        "Path": {
            "type": "string"
        },
        "Revision": {
            "type": "number"
        },
        "AppId": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/AppIdDefinition"
            }
        },
        "DomainName": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DomainNameDefinition"
            },
            "maxItems": 1
        },
        "Tag": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagDefinition"
            }
        },
        "UrlCategory": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/UrlCategoryDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "DisplayName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Path",
        "/properties/Revision"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}