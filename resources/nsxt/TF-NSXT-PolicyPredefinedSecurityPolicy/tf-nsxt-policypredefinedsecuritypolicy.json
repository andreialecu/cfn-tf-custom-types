{
    "typeName": "TF::NSXT::PolicyPredefinedSecurityPolicy",
    "description": "This resource provides a method to modify default Security Policy and its rules.\nThis can be default layer2 policy or default layer3 policy. Maximum one resource\nfor each type should exist in your configuration.\n\n~> **NOTE:** An absolute path, such as `/infra/domains/default/security-policies/default-layer3-section`, can be provided for this resource (this approach will work slightly faster, as the roundtrip for data source retrieval will be spared) In the example below a data source is used in order to pull the predefined policy.\n\nThis resource is applicable to NSX Global Manager, NSX Policy Manager and VMC.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/nsxt/TF-NSXT-PolicyPredefinedSecurityPolicy/docs/README.md",
    "definitions": {
        "DefaultRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "LogLabel": {
                    "type": "string"
                },
                "Logged": {
                    "type": "boolean"
                },
                "Tag": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/TagDefinition"
                    }
                }
            },
            "required": []
        },
        "RuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DestinationGroups": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "DestinationsExcluded": {
                    "type": "boolean"
                },
                "Direction": {
                    "type": "string"
                },
                "Disabled": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "type": "string"
                },
                "IpVersion": {
                    "type": "string"
                },
                "LogLabel": {
                    "type": "string"
                },
                "Logged": {
                    "type": "boolean"
                },
                "Notes": {
                    "type": "string"
                },
                "NsxId": {
                    "type": "string"
                },
                "Profiles": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Scope": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "SequenceNumber": {
                    "type": "number"
                },
                "Services": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "SourceGroups": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "SourcesExcluded": {
                    "type": "boolean"
                },
                "Tag": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/TagDefinition"
                    }
                }
            },
            "required": [
                "DisplayName"
            ]
        },
        "TagDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "Tag": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of the resource.\n* `logged` - (Optional) A boolean flag to enable packet logging.\n* `log_label` - (Optional) Additional information (string) which will be propagated to the rule syslog.\n* `tag` - (Optional) A list of scope + tag pairs to associate with this Rule.\n* `action` - (Optional) The action for the Rule. Must be one of: `ALLOW`, `DROP` or `REJECT`. Note that `REJECT` action is not applicable for L2 policy."
        },
        "Id": {
            "type": "string"
        },
        "Path": {
            "type": "string",
            "description": "Policy path for the predefined Security Policy to modify."
        },
        "Revision": {
            "type": "number"
        },
        "DefaultRule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DefaultRuleDefinition"
            },
            "maxItems": 1
        },
        "Rule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RuleDefinition"
            },
            "maxItems": 1000
        },
        "Tag": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Path"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Revision"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}