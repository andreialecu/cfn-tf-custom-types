{
    "typeName": "TF::BIGIP::LtmVirtualServer",
    "description": "`bigip_ltm_virtual_server` Configures Virtual Server\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource (example: /Common/my-pool ) or partition + directory + name of the resource (example: /Common/test/my-pool ).When including directory in fullpath we have to make sure it is created in the given partition before using it.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/bigip/TF-BIGIP-LtmVirtualServer/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ClientProfiles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of client context profiles associated on the virtual server. Not mutually exclusive with profiles and server_profiles."
        },
        "DefaultPersistenceProfile": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of Virtual server."
        },
        "Destination": {
            "type": "string",
            "description": "Destination IP."
        },
        "FallbackPersistenceProfile": {
            "type": "string",
            "description": "Specifies a fallback persistence profile for the Virtual Server to use when the default persistence profile is not available."
        },
        "Id": {
            "type": "string"
        },
        "IpProtocol": {
            "type": "string",
            "description": "Specify the IP protocol to use with the the virtual server (all, tcp, or udp are valid)."
        },
        "Irules": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The iRules list you want run on this virtual server. iRules help automate the intercepting, processing, and routing of application traffic."
        },
        "Mask": {
            "type": "string",
            "description": "Mask can either be in CIDR notation or decimal, i.e.: 24 or 255.255.255.0. A CIDR mask of 0 is the same as 0.0.0.0."
        },
        "Name": {
            "type": "string",
            "description": "Name of the virtual server."
        },
        "PersistenceProfiles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of persistence profiles associated with the Virtual Server."
        },
        "Policies": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Pool": {
            "type": "string",
            "description": "Default pool name."
        },
        "Port": {
            "type": "number",
            "description": "Listen port for the virtual server."
        },
        "Profiles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of profiles associated both client and server contexts on the virtual server. This includes protocol, ssl, http, etc."
        },
        "ServerProfiles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of server context profiles associated on the virtual server. Not mutually exclusive with profiles and client_profiles."
        },
        "Snatpool": {
            "type": "string",
            "description": "Specifies the name of an existing SNAT pool that you want the virtual server to use to implement selective and intelligent SNATs. DEPRECATED - see Virtual Server Property Groups source-address-translation."
        },
        "Source": {
            "type": "string",
            "description": "Specifies an IP address or network from which the virtual server will accept traffic."
        },
        "SourceAddressTranslation": {
            "type": "string",
            "description": "Can be either omitted for none or the values automap or snat."
        },
        "State": {
            "type": "string"
        },
        "TranslateAddress": {
            "type": "string",
            "description": "Enables or disables address translation for the virtual server. Turn address translation off for a virtual server if you want to use the virtual server to load balance connections to any address. This option is useful when the system is load balancing devices that have the same IP address."
        },
        "TranslatePort": {
            "type": "string",
            "description": "Enables or disables port translation. Turn port translation off for a virtual server if you want to use the virtual server to load balance connections to any service."
        },
        "Vlans": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The virtual server is enabled/disabled on this set of VLANs. See vlans-disabled and vlans-enabled."
        },
        "VlansEnabled": {
            "type": "boolean",
            "description": "Enables the virtual server on the VLANs specified by the VLANs option."
        }
    },
    "additionalProperties": false,
    "required": [
        "Destination",
        "Name",
        "Port"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}