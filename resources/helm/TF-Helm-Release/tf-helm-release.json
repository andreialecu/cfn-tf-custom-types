{
    "typeName": "TF::Helm::Release",
    "description": "A Release is an instance of a chart running in a Kubernetes cluster.\n\nA Chart is a Helm package. It contains all of the resource definitions necessary to run an application, tool, or service inside of a Kubernetes cluster.\n\n`helm_release` describes the desired status of a chart in a kubernetes cluster.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/helm/TF-Helm-Release/docs/README.md",
    "definitions": {
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AppVersion": {
                    "type": "string"
                },
                "Chart": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string"
                },
                "Revision": {
                    "type": "number"
                },
                "Values": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            }
        },
        "PostrenderDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BinaryPath": {
                    "type": "string",
                    "description": "relative or full path to command binary."
                }
            },
            "required": [
                "BinaryPath"
            ]
        },
        "SetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Value"
            ]
        },
        "SetSensitiveDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "full name of the variable to be set."
                },
                "Type": {
                    "type": "string",
                    "description": "type of the variable to be set. Valid options are `auto` and `string`."
                },
                "Value": {
                    "type": "string",
                    "description": "value of the variable to be set."
                }
            },
            "required": [
                "Name",
                "Value"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Atomic": {
            "type": "boolean",
            "description": "If set, installation process purges chart on fail. The wait flag will be set automatically if atomic is used. Defaults to `false`."
        },
        "Chart": {
            "type": "string",
            "description": "Chart name to be installed. The chart name can be local path, a URL to a chart, or the name of the chart if `repository` is specified. It is also possible to use the `<repository>/<chart>` format here if you are running Terraform on a system that the repository has been added to with `helm repo add` but this is not recommended."
        },
        "CleanupOnFail": {
            "type": "boolean",
            "description": "Allow deletion of new resources created in this upgrade when upgrade fails. Defaults to `false`."
        },
        "CreateNamespace": {
            "type": "boolean",
            "description": "Create the namespace if it does not yet exist. Defaults to `false`."
        },
        "DependencyUpdate": {
            "type": "boolean",
            "description": "Runs helm dependency update before installing the chart. Defaults to `false`."
        },
        "Description": {
            "type": "string",
            "description": "Set release description attribute (visible in the history)."
        },
        "Devel": {
            "type": "boolean",
            "description": "Use chart development versions, too. Equivalent to version '>0.0.0-0'. If version is set, this is ignored."
        },
        "DisableCrdHooks": {
            "type": "boolean"
        },
        "DisableOpenapiValidation": {
            "type": "boolean",
            "description": "If set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema. Defaults to `false`."
        },
        "DisableWebhooks": {
            "type": "boolean",
            "description": "Prevent hooks from running. Defaults to `false`."
        },
        "ForceUpdate": {
            "type": "boolean",
            "description": "Force resource update through delete/recreate if needed. Defaults to `false`."
        },
        "Id": {
            "type": "string"
        },
        "Keyring": {
            "type": "string",
            "description": "Location of public keys used for verification. Used only if `verify` is true. Defaults to `/.gnupg/pubring.gpg` in the location set by `home`."
        },
        "Lint": {
            "type": "boolean",
            "description": "Run the helm chart linter during the plan. Defaults to `false`."
        },
        "Manifest": {
            "type": "string"
        },
        "MaxHistory": {
            "type": "number",
            "description": "Maximum number of release versions stored per release. Defaults to `0` (no limit)."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            }
        },
        "Name": {
            "type": "string",
            "description": "Release name."
        },
        "Namespace": {
            "type": "string",
            "description": "The namespace to install the release into. Defaults to `default`."
        },
        "RecreatePods": {
            "type": "boolean",
            "description": "Perform pods restart during upgrade/rollback. Defaults to `false`."
        },
        "RenderSubchartNotes": {
            "type": "boolean",
            "description": "If set, render subchart notes along with the parent. Defaults to `true`."
        },
        "Replace": {
            "type": "boolean",
            "description": "Re-use the given name, even if that name is already used. This is unsafe in production. Defaults to `false`."
        },
        "Repository": {
            "type": "string",
            "description": "Repository URL where to locate the requested chart."
        },
        "RepositoryCaFile": {
            "type": "string",
            "description": "The Repositories CA File."
        },
        "RepositoryCertFile": {
            "type": "string",
            "description": "The repositories cert file."
        },
        "RepositoryKeyFile": {
            "type": "string",
            "description": "The repositories cert key file."
        },
        "RepositoryPassword": {
            "type": "string",
            "description": "Password for HTTP basic authentication against the repository."
        },
        "RepositoryUsername": {
            "type": "string",
            "description": "Username for HTTP basic authentication against the repository."
        },
        "ResetValues": {
            "type": "boolean",
            "description": "When upgrading, reset the values to the ones built into the chart. Defaults to `false`."
        },
        "ReuseValues": {
            "type": "boolean",
            "description": "When upgrading, reuse the last release's values and merge in any overrides. If 'reset_values' is specified, this is ignored. Defaults to `false`."
        },
        "SkipCrds": {
            "type": "boolean",
            "description": "If set, no CRDs will be installed. By default, CRDs are installed if not already present. Defaults to `false`."
        },
        "Status": {
            "type": "string"
        },
        "Timeout": {
            "type": "number",
            "description": "Time in seconds to wait for any individual kubernetes operation (like Jobs for hooks). Defaults to `300` seconds."
        },
        "Values": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of values in raw yaml to pass to helm. Values will be merged, in order, as Helm does with multiple `-f` options."
        },
        "Verify": {
            "type": "boolean",
            "description": "Verify the package before installing it. Helm uses a provenance file to verify the integrity of the chart; this must be hosted alongside the chart. For more information see the [Helm Documentation](https://helm.sh/docs/topics/provenance/). Defaults to `false`."
        },
        "Version": {
            "type": "string",
            "description": "Specify the exact chart version to install. If this is not specified, the latest version is installed."
        },
        "Wait": {
            "type": "boolean",
            "description": "Will wait until all resources are in a ready state before marking the release as successful. It will wait for as long as `timeout`. Defaults to `true`."
        },
        "WaitForJobs": {
            "type": "boolean",
            "description": "If wait is enabled, will wait until all Jobs have been completed before marking the release as successful. It will wait for as long as `timeout`.  Defaults to false."
        },
        "Postrender": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PostrenderDefinition"
            },
            "maxItems": 1
        },
        "Set": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SetDefinition"
            }
        },
        "SetSensitive": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SetSensitiveDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Chart",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Manifest",
        "/properties/Metadata",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/RepositoryPassword",
        "/definitions/SetSensitiveDefinition/Value"
    ]
}