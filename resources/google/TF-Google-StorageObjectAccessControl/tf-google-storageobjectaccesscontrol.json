{
    "typeName": "TF::Google::StorageObjectAccessControl",
    "description": "The ObjectAccessControls resources represent the Access Control Lists\n(ACLs) for objects within Google Cloud Storage. ACLs let you specify\nwho has access to your data and to what extent.\n\nThere are two roles that can be assigned to an entity:\n\nREADERs can get an object, though the acl property will not be revealed.\nOWNERs are READERs, and they can get the acl property, update an object,\nand call all objectAccessControls methods on the object. The owner of an\nobject is always an OWNER.\nFor more information, see Access Control, with the caveat that this API\nuses READER and OWNER instead of READ and FULL_CONTROL.\n\n\nTo get more information about ObjectAccessControl, see:\n\n* [API documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/storage/docs/access-control/create-manage-lists)\n\n<div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">\n  <a href=\"https://console.cloud.google.com/cloudshell/open...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-StorageObjectAccessControl/docs/README.md",
    "definitions": {
        "ProjectTeamDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ProjectNumber": {
                    "type": "string"
                },
                "Team": {
                    "type": "string"
                }
            }
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Bucket": {
            "type": "string"
        },
        "Domain": {
            "type": "string"
        },
        "Email": {
            "type": "string"
        },
        "Entity": {
            "type": "string"
        },
        "EntityId": {
            "type": "string"
        },
        "Generation": {
            "type": "number"
        },
        "Id": {
            "type": "string"
        },
        "Object": {
            "type": "string"
        },
        "ProjectTeam": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ProjectTeamDefinition"
            }
        },
        "Role": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Bucket",
        "Entity",
        "Object",
        "Role"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Domain",
        "/properties/Email",
        "/properties/EntityId",
        "/properties/Generation",
        "/properties/Id",
        "/properties/ProjectTeam"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}