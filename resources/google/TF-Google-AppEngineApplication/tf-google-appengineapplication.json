{
    "typeName": "TF::Google::AppEngineApplication",
    "description": "Allows creation and management of an App Engine application.\n\n~> App Engine applications cannot be deleted once they're created; you have to delete the\n   entire project to delete the application. Terraform will report the application has been\n   successfully deleted; this is a limitation of Terraform, and will go away in the future.\n   Terraform is not able to delete App Engine applications.\n\n~> **Warning:** All arguments including `iap.oauth2_client_secret` will be stored in the raw\nstate as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-AppEngineApplication/docs/README.md",
    "definitions": {
        "UrlDispatchRuleDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Domain": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "Service": {
                    "type": "string"
                }
            }
        },
        "FeatureSettingsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SplitHealthChecks": {
                    "type": "boolean",
                    "description": "Set to false to use the legacy health check instead of the readiness\nand liveness checks."
                }
            },
            "required": [
                "SplitHealthChecks"
            ]
        },
        "IapDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "Oauth2ClientId": {
                    "type": "string"
                },
                "Oauth2ClientSecret": {
                    "type": "string"
                }
            },
            "required": [
                "Oauth2ClientId",
                "Oauth2ClientSecret"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AppId": {
            "type": "string"
        },
        "AuthDomain": {
            "type": "string",
            "description": "The domain to authenticate users with when using App Engine's User API."
        },
        "CodeBucket": {
            "type": "string"
        },
        "DatabaseType": {
            "type": "string",
            "description": "The type of the Cloud Firestore or Cloud Datastore database associated with this application.\nCan be `CLOUD_FIRESTORE` or `CLOUD_DATASTORE_COMPATIBILITY` for new\ninstances.  To support old instances, the value `CLOUD_DATASTORE` is accepted\nby the provider, but will be rejected by the API."
        },
        "DefaultBucket": {
            "type": "string"
        },
        "DefaultHostname": {
            "type": "string"
        },
        "GcrDomain": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LocationId": {
            "type": "string",
            "description": "The [location](https://cloud.google.com/appengine/docs/locations)\nto serve the app from."
        },
        "Name": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The project ID to create the application under.\n~>**NOTE:** GCP only accepts project ID, not project number. If you are using number,\nyou may get a \"Permission denied\" error."
        },
        "ServingStatus": {
            "type": "string",
            "description": "The serving status of the app."
        },
        "UrlDispatchRule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UrlDispatchRuleDefinition"
            }
        },
        "FeatureSettings": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/FeatureSettingsDefinition"
            },
            "maxItems": 1
        },
        "Iap": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IapDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "LocationId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AppId",
        "/properties/CodeBucket",
        "/properties/DefaultBucket",
        "/properties/DefaultHostname",
        "/properties/GcrDomain",
        "/properties/Id",
        "/properties/Name",
        "/properties/UrlDispatchRule"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/IapDefinition/Oauth2ClientSecret"
    ]
}