{
    "typeName": "TF::Google::ProjectDefaultServiceAccounts",
    "description": "Allows management of Google Cloud Platform project default service accounts.\n\nWhen certain service APIs are enabled, Google Cloud Platform automatically creates service accounts to help get started, but\nthis is not recommended for production environments as per [Google's documentation](https://cloud.google.com/iam/docs/service-accounts#default).\nSee the [Organization documentation](https://cloud.google.com/resource-manager/docs/quickstarts) for more details.\n\n~> **WARNING** Some Google Cloud products do not work if the default service accounts are deleted so it is better to `DEPRIVILEGE` as\nGoogle **CAN NOT** recover service accounts that have been deleted for more than 30 days.\nAlso Google recommends using the `constraints/iam.automaticIamGrantsForDefaultServiceAccounts` [constraint](/docs/providers/google/r/google_organization_policy.html)\nto disable automatic IAM Grants to default service accounts.\n\n~> This resource works on a best-effort basis, as no API formally describes the default service accounts...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-ProjectDefaultServiceAccounts/docs/README.md",
    "definitions": {
        "ServiceAccountsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "The action to be performed in the default service accounts. Valid values are: `DEPRIVILEGE`, `DELETE`, `DISABLE`. Note that `DEPRIVILEGE` action will ignore the REVERT configuration in the restore_policy."
        },
        "Id": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The project ID where service accounts are created."
        },
        "RestorePolicy": {
            "type": "string",
            "description": "The action to be performed in the default service accounts on the resource destroy.\nValid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.\nIf set to REVERT it attempts to restore all default SAs but the DEPRIVILEGE action.\nIf set to REVERT_AND_IGNORE_FAILURE it is the same behavior as REVERT but ignores errors returned by the API."
        },
        "ServiceAccounts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ServiceAccountsDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Action",
        "Project"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/ServiceAccounts"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}