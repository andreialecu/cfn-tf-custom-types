{
    "typeName": "TF::Google::DialogflowAgent",
    "description": "A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language\nunderstanding module that understands the nuances of human language. Dialogflow translates end-user text or audio\nduring a conversation to structured data that your apps and services can understand. You design and build a Dialogflow\nagent to handle the types of conversations required for your system.\n\n\nTo get more information about Agent, see:\n\n* [API documentation](https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects/agent)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/dialogflow/docs/)\n\n<div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">\n  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dialogflow_agent_full&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-DialogflowAgent/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApiVersion": {
            "type": "string"
        },
        "AvatarUri": {
            "type": "string"
        },
        "AvatarUriBackend": {
            "type": "string"
        },
        "ClassificationThreshold": {
            "type": "number"
        },
        "DefaultLanguageCode": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "EnableLogging": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "MatchMode": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs.\nIf it is not provided, the provider project is used."
        },
        "SupportedLanguageCodes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "Tier": {
            "type": "string"
        },
        "TimeZone": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "DefaultLanguageCode",
        "DisplayName",
        "TimeZone"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AvatarUriBackend",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}