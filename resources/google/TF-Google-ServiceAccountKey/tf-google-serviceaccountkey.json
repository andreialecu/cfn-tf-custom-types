{
    "typeName": "TF::Google::ServiceAccountKey",
    "description": "Creates and manages service account keys, which allow the use of a service account outside of Google Cloud. \n\n* [API documentation](https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts.keys)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-ServiceAccountKey/docs/README.md",
    "definitions": {
        "KeepersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Keepers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/KeepersDefinition"
            }
        },
        "KeyAlgorithm": {
            "type": "string",
            "description": "The algorithm used to generate the key. KEY_ALG_RSA_2048 is the default algorithm.\nValid values are listed at\n[ServiceAccountPrivateKeyType](https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts.keys#ServiceAccountKeyAlgorithm)\n(only used on create)."
        },
        "Name": {
            "type": "string"
        },
        "PrivateKey": {
            "type": "string"
        },
        "PrivateKeyType": {
            "type": "string"
        },
        "PublicKey": {
            "type": "string"
        },
        "PublicKeyData": {
            "type": "string"
        },
        "PublicKeyType": {
            "type": "string"
        },
        "ServiceAccountId": {
            "type": "string",
            "description": "The Service account id of the Key. This can be a string in the format\n`{ACCOUNT}` or `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`, where `{ACCOUNT}` is the email address or\nunique id of the service account. If the `{ACCOUNT}` syntax is used, the project will be inferred from the account."
        },
        "ValidAfter": {
            "type": "string"
        },
        "ValidBefore": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "ServiceAccountId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Name",
        "/properties/PrivateKey",
        "/properties/PublicKey",
        "/properties/ValidAfter",
        "/properties/ValidBefore"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrivateKey"
    ]
}