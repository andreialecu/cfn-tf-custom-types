{
    "typeName": "TF::Google::CloudSchedulerJob",
    "description": "A scheduled job that can publish a pubsub message or a http request\nevery X interval of time, using crontab format string.\n\nTo use Cloud Scheduler your project must contain an App Engine app\nthat is located in one of the supported regions. If your project\ndoes not have an App Engine app, you must create one.\n\n\nTo get more information about Job, see:\n\n* [API documentation](https://cloud.google.com/scheduler/docs/reference/rest/)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/scheduler/)\n\n<div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">\n  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=scheduler_job_pubsub&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">\n    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudss...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-CloudSchedulerJob/docs/README.md",
    "definitions": {
        "AppEngineHttpTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Body": {
                    "type": "string"
                },
                "Headers": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HeadersDefinition"
                    }
                },
                "HttpMethod": {
                    "type": "string"
                },
                "RelativeUri": {
                    "type": "string"
                },
                "AppEngineRouting": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AppEngineRoutingDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "RelativeUri"
            ]
        },
        "HeadersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "HttpTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Body": {
                    "type": "string"
                },
                "Headers": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HeadersDefinition2"
                    }
                },
                "HttpMethod": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                },
                "OauthToken": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/OauthTokenDefinition"
                    },
                    "maxItems": 1
                },
                "OidcToken": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/OidcTokenDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Uri"
            ]
        },
        "HeadersDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "PubsubTargetDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Attributes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AttributesDefinition"
                    }
                },
                "Data": {
                    "type": "string"
                },
                "TopicName": {
                    "type": "string"
                }
            },
            "required": [
                "TopicName"
            ]
        },
        "AttributesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "RetryConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaxBackoffDuration": {
                    "type": "string"
                },
                "MaxDoublings": {
                    "type": "number"
                },
                "MaxRetryDuration": {
                    "type": "string"
                },
                "MinBackoffDuration": {
                    "type": "string"
                },
                "RetryCount": {
                    "type": "number"
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "AppEngineRoutingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Instance": {
                    "type": "string"
                },
                "Service": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": []
        },
        "OauthTokenDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "ServiceAccountEmail": {
                    "type": "string"
                }
            },
            "required": [
                "ServiceAccountEmail"
            ]
        },
        "OidcTokenDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Audience": {
                    "type": "string"
                },
                "ServiceAccountEmail": {
                    "type": "string"
                }
            },
            "required": [
                "ServiceAccountEmail"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AttemptDeadline": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs.\nIf it is not provided, the provider project is used."
        },
        "Region": {
            "type": "string"
        },
        "Schedule": {
            "type": "string"
        },
        "TimeZone": {
            "type": "string"
        },
        "AppEngineHttpTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AppEngineHttpTargetDefinition"
            },
            "maxItems": 1
        },
        "HttpTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpTargetDefinition"
            },
            "maxItems": 1
        },
        "PubsubTarget": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PubsubTargetDefinition"
            },
            "maxItems": 1
        },
        "RetryConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RetryConfigDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}