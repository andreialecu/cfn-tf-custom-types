{
    "typeName": "TF::Google::KmsCryptoKey",
    "description": "A `CryptoKey` represents a logical key that can be used for cryptographic operations.\n\n\n~> **Note:** CryptoKeys cannot be deleted from Google Cloud Platform.\nDestroying a Terraform-managed CryptoKey will remove it from state\nand delete all CryptoKeyVersions, rendering the key unusable, but *will\nnot delete the resource from the project.* When Terraform destroys these keys,\nany data previously encrypted with these keys will be irrecoverable.\nFor this reason, it is strongly recommended that you add lifecycle hooks\nto the resource to prevent accidental destruction.\n\n\nTo get more information about CryptoKey, see:\n\n* [API documentation](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys)\n* How-to Guides\n    * [Creating a key](https://cloud.google.com/kms/docs/creating-keys#create_a_key)",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-KmsCryptoKey/docs/README.md",
    "definitions": {
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "VersionTemplateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "type": "string"
                },
                "ProtectionLevel": {
                    "type": "string"
                }
            },
            "required": [
                "Algorithm"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "KeyRing": {
            "type": "string"
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/LabelsDefinition"
            }
        },
        "Name": {
            "type": "string"
        },
        "Purpose": {
            "type": "string"
        },
        "RotationPeriod": {
            "type": "string"
        },
        "SelfLink": {
            "type": "string"
        },
        "SkipInitialVersionCreation": {
            "type": "boolean"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        },
        "VersionTemplate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VersionTemplateDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "KeyRing",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/SelfLink"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}