{
    "typeName": "TF::Google::ComputeNetworkPeering",
    "description": "Manages a network peering within GCE. For more information see\n[the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)\nand\n[API](https://cloud.google.com/compute/docs/reference/latest/networks).\n\n-> Both network must create a peering with each other for the peering\nto be functional.\n\n~> Subnets IP ranges across peered VPC networks cannot overlap.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-ComputeNetworkPeering/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ExportCustomRoutes": {
            "type": "boolean",
            "description": "Whether to export the custom routes to the peer network. Defaults to `false`."
        },
        "ExportSubnetRoutesWithPublicIp": {
            "type": "boolean",
            "description": "Whether subnet routes with public IP range are exported. The default value is true, all subnet routes are exported. The IPv4 special-use ranges (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always exported to peers and are not controlled by this field."
        },
        "Id": {
            "type": "string"
        },
        "ImportCustomRoutes": {
            "type": "boolean",
            "description": "Whether to import the custom routes from the peer network. Defaults to `false`."
        },
        "ImportSubnetRoutesWithPublicIp": {
            "type": "boolean",
            "description": "Whether subnet routes with public IP range are imported. The default value is false. The IPv4 special-use ranges (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always imported from peers and are not controlled by this field."
        },
        "Name": {
            "type": "string",
            "description": "Name of the peering."
        },
        "Network": {
            "type": "string",
            "description": "The primary network of the peering."
        },
        "PeerNetwork": {
            "type": "string",
            "description": "The peer network in the peering. The peer network\nmay belong to a different project."
        },
        "State": {
            "type": "string"
        },
        "StateDetails": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Network",
        "PeerNetwork"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/State",
        "/properties/StateDetails"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}