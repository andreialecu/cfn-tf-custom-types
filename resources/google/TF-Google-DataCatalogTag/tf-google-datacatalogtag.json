{
    "typeName": "TF::Google::DataCatalogTag",
    "description": "Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template.\n\nSee [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.\n\n\nTo get more information about Tag, see:\n\n* [API documentation](https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.tags)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/data-catalog/docs)\n\n<div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">\n  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=data_catalog_entry_tag_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">\n    <img alt=\"Open in Cloud Shell\" src=...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-DataCatalogTag/docs/README.md",
    "definitions": {
        "FieldsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BoolValue": {
                    "type": "boolean"
                },
                "DoubleValue": {
                    "type": "number"
                },
                "EnumValue": {
                    "type": "string"
                },
                "FieldName": {
                    "type": "string",
                    "description": "The identifier for this object. Format specified above."
                },
                "StringValue": {
                    "type": "string"
                },
                "TimestampValue": {
                    "type": "string"
                }
            },
            "required": [
                "FieldName"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Column": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Parent": {
            "type": "string"
        },
        "Template": {
            "type": "string"
        },
        "TemplateDisplayname": {
            "type": "string"
        },
        "Fields": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FieldsDefinition"
            },
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Template"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Name",
        "/properties/TemplateDisplayname"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}