{
    "typeName": "TF::Google::ComputeInstanceTemplate",
    "description": "Manages a VM instance template resource within GCE. For more information see\n[the official documentation](https://cloud.google.com/compute/docs/instance-templates)\nand\n[API](https://cloud.google.com/compute/docs/reference/latest/instanceTemplates).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-ComputeInstanceTemplate/docs/README.md",
    "definitions": {
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ConfidentialInstanceConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnableConfidentialCompute": {
                    "type": "boolean"
                }
            },
            "required": [
                "EnableConfidentialCompute"
            ]
        },
        "DiskDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoDelete": {
                    "type": "boolean",
                    "description": "Whether or not the disk should be auto-deleted.\nThis defaults to true."
                },
                "Boot": {
                    "type": "boolean",
                    "description": "Indicates that this is a boot disk."
                },
                "DeviceName": {
                    "type": "string",
                    "description": "A unique device name that is reflected into the\n/dev/  tree of a Linux operating system running within the instance. If not\nspecified, the server chooses a default device name to apply to this disk."
                },
                "DiskName": {
                    "type": "string",
                    "description": "Name of the disk. When not provided, this defaults\nto the name of the instance."
                },
                "DiskSizeGb": {
                    "type": "number",
                    "description": "The size of the image in gigabytes. If not\nspecified, it will inherit the size of its base image. For SCRATCH disks,\nthe size must be exactly 375GB."
                },
                "DiskType": {
                    "type": "string",
                    "description": "The GCE disk type. Can be either `\"pd-ssd\"`,\n`\"local-ssd\"`, `\"pd-balanced\"` or `\"pd-standard\"`."
                },
                "Interface": {
                    "type": "string",
                    "description": "Specifies the disk interface to use for attaching this disk,\nwhich is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI\nand the request will fail if you attempt to attach a persistent disk in any other format\nthan SCSI. Local SSDs can use either NVME or SCSI."
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LabelsDefinition2"
                    },
                    "description": "A set of ket/value label pairs to assign to disk created from\nthis template."
                },
                "Mode": {
                    "type": "string",
                    "description": "The mode in which to attach this disk, either READ_WRITE\nor READ_ONLY. If you are attaching or creating a boot disk, this must\nread-write mode."
                },
                "ResourcePolicies": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Source": {
                    "type": "string",
                    "description": "The name (**not self_link**)\nof the disk (such as those managed by `google_compute_disk`) to attach.\n~> **Note:** Either `source` or `source_image` is **required** in a disk block unless the disk type is `local-ssd`. Check the API [docs](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates/insert) for details."
                },
                "SourceImage": {
                    "type": "string",
                    "description": "The image from which to\ninitialize this disk. This can be one of: the image's `self_link`,\n`projects/{project}/global/images/{image}`,\n`projects/{project}/global/images/family/{family}`, `global/images/{image}`,\n`global/images/family/{family}`, `family/{family}`, `{project}/{family}`,\n`{project}/{image}`, `{family}`, or `{image}`.\n~> **Note:** Either `source` or `source_image` is **required** in a disk block unless the disk type is `local-ssd`. Check the API [docs](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates/insert) for details."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of GCE disk, can be either `\"SCRATCH\"` or\n`\"PERSISTENT\"`."
                },
                "DiskEncryptionKey": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DiskEncryptionKeyDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "LabelsDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "GuestAcceleratorDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Count": {
                    "type": "number"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Count",
                "Type"
            ]
        },
        "NetworkInterfaceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Network": {
                    "type": "string",
                    "description": "The name or self_link of the network to attach this interface to.\nUse `network` attribute for Legacy or Auto subnetted networks and\n`subnetwork` for custom subnetted networks."
                },
                "NetworkIp": {
                    "type": "string",
                    "description": "The private IP address to assign to the instance. If\nempty, the address will be automatically assigned."
                },
                "NicType": {
                    "type": "string",
                    "description": "The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET."
                },
                "Subnetwork": {
                    "type": "string",
                    "description": "the name of the subnetwork to attach this interface\nto. The subnetwork must exist in the same `region` this instance will be\ncreated in. Either `network` or `subnetwork` must be provided."
                },
                "SubnetworkProject": {
                    "type": "string",
                    "description": "The ID of the project in which the subnetwork belongs.\nIf it is not provided, the provider project is used."
                },
                "AccessConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AccessConfigDefinition"
                    }
                },
                "AliasIpRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AliasIpRangeDefinition"
                    }
                }
            },
            "required": []
        },
        "ReservationAffinityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string"
                },
                "SpecificReservation": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SpecificReservationDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Type"
            ]
        },
        "SchedulingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutomaticRestart": {
                    "type": "boolean",
                    "description": "Specifies whether the instance should be\nautomatically restarted if it is terminated by Compute Engine (not\nterminated by a user). This defaults to true."
                },
                "MinNodeCpus": {
                    "type": "number"
                },
                "OnHostMaintenance": {
                    "type": "string",
                    "description": "Defines the maintenance behavior for this\ninstance."
                },
                "Preemptible": {
                    "type": "boolean",
                    "description": "Allows instance to be preempted. This defaults to\nfalse. Read more on this\n[here](https://cloud.google.com/compute/docs/instances/preemptible)."
                },
                "NodeAffinities": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/NodeAffinitiesDefinition"
                    }
                }
            },
            "required": []
        },
        "ServiceAccountDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Email": {
                    "type": "string",
                    "description": "The service account e-mail address. If not given, the\ndefault Google Compute Engine service account is used."
                },
                "Scopes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of service scopes. Both OAuth2 URLs and gcloud\nshort names are supported. To allow full access to all Cloud APIs, use the\n`cloud-platform` scope. See a complete list of scopes [here](https://cloud.google.com/sdk/gcloud/reference/alpha/compute/instances/set-scopes#--scopes)."
                }
            },
            "required": [
                "Scopes"
            ]
        },
        "ShieldedInstanceConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnableIntegrityMonitoring": {
                    "type": "boolean"
                },
                "EnableSecureBoot": {
                    "type": "boolean"
                },
                "EnableVtpm": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        },
        "DiskEncryptionKeyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "KmsKeySelfLink": {
                    "type": "string",
                    "description": "The self link of the encryption key that is stored in Google Cloud KMS."
                }
            },
            "required": [
                "KmsKeySelfLink"
            ]
        },
        "AccessConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NatIp": {
                    "type": "string",
                    "description": "The IP address that will be 1:1 mapped to the instance's\nnetwork ip. If not given, one will be generated."
                },
                "NetworkTier": {
                    "type": "string",
                    "description": "The [networking tier][network-tier] used for configuring\nthis instance template. This field can take the following values: PREMIUM or\nSTANDARD. If this field is not specified, it is assumed to be PREMIUM."
                }
            },
            "required": []
        },
        "AliasIpRangeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IpCidrRange": {
                    "type": "string",
                    "description": "The IP CIDR range represented by this alias IP range. This IP CIDR range\nmust belong to the specified subnetwork and cannot contain IP addresses reserved by\nsystem or used by other network interfaces. At the time of writing only a\nnetmask (e.g. /24) may be supplied, with a CIDR format resulting in an API\nerror."
                },
                "SubnetworkRangeName": {
                    "type": "string",
                    "description": "The subnetwork secondary range name specifying\nthe secondary range from which to allocate the IP CIDR range for this alias IP\nrange. If left unspecified, the primary range of the subnetwork will be used."
                }
            },
            "required": [
                "IpCidrRange"
            ]
        },
        "SpecificReservationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key",
                "Values"
            ]
        },
        "NodeAffinitiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Operator": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key",
                "Operator",
                "Values"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CanIpForward": {
            "type": "boolean",
            "description": "Whether to allow sending and receiving of\npackets with non-matching source or destination IPs. This defaults to false."
        },
        "Description": {
            "type": "string",
            "description": "A brief description of this resource."
        },
        "EnableDisplay": {
            "type": "boolean",
            "description": "Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.\n**Note**: [`allow_stopping_for_update`](#allow_stopping_for_update) must be set to true in order to update this field."
        },
        "Id": {
            "type": "string"
        },
        "InstanceDescription": {
            "type": "string",
            "description": "A brief description to use for instances\ncreated from this template."
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/LabelsDefinition"
            },
            "description": "A set of key/value label pairs to assign to instances\ncreated from this template,."
        },
        "MachineType": {
            "type": "string",
            "description": "The machine type to create."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "description": "Metadata key/value pairs to make available from\nwithin instances created from this template."
        },
        "MetadataFingerprint": {
            "type": "string"
        },
        "MetadataStartupScript": {
            "type": "string",
            "description": "An alternative to using the\nstartup-script metadata key, mostly to match the compute_instance resource.\nThis replaces the startup-script metadata key on the created instance and\nthus the two mechanisms are not allowed to be used simultaneously."
        },
        "MinCpuPlatform": {
            "type": "string",
            "description": "Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as\n`Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)."
        },
        "Name": {
            "type": "string",
            "description": "The name of the instance template. If you leave\nthis blank, Terraform will auto-generate a unique name."
        },
        "NamePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified\nprefix. Conflicts with `name`."
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used."
        },
        "Region": {
            "type": "string",
            "description": "An instance template is a global resource that is not\nbound to a zone or a region. However, you can still specify some regional\nresources in an instance template, which restricts the template to the\nregion where that resource resides. For example, a custom `subnetwork`\nresource is tied to a specific region. Defaults to the region of the\nProvider if no value is given."
        },
        "SelfLink": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Tags to attach to the instance."
        },
        "TagsFingerprint": {
            "type": "string"
        },
        "ConfidentialInstanceConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ConfidentialInstanceConfigDefinition"
            },
            "maxItems": 1
        },
        "Disk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DiskDefinition"
            },
            "minItems": 1
        },
        "GuestAccelerator": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/GuestAcceleratorDefinition"
            }
        },
        "NetworkInterface": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkInterfaceDefinition"
            }
        },
        "ReservationAffinity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ReservationAffinityDefinition"
            },
            "maxItems": 1
        },
        "Scheduling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SchedulingDefinition"
            },
            "maxItems": 1
        },
        "ServiceAccount": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceAccountDefinition"
            },
            "maxItems": 1
        },
        "ShieldedInstanceConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ShieldedInstanceConfigDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "MachineType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/MetadataFingerprint",
        "/properties/SelfLink",
        "/properties/TagsFingerprint"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}