{
    "typeName": "TF::Google::ComputeInstance",
    "description": "Manages a VM instance resource within GCE. For more information see\n[the official documentation](https://cloud.google.com/compute/docs/instances)\nand\n[API](https://cloud.google.com/compute/docs/reference/latest/instances).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/TF-Google-ComputeInstance/docs/README.md",
    "definitions": {
        "GuestAcceleratorDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Count": {
                    "type": "number"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AttachedDiskDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DeviceName": {
                    "type": "string",
                    "description": "Name with which the attached disk will be accessible\nunder `/dev/disk/by-id/google-*`."
                },
                "DiskEncryptionKeyRaw": {
                    "type": "string",
                    "description": "A 256-bit [customer-supplied encryption key]\n(https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),\nencoded in [RFC 4648 base64](https://tools.ietf.org/html/rfc4648#section-4)\nto encrypt this disk. Only one of `kms_key_self_link` and `disk_encryption_key_raw` may be set."
                },
                "KmsKeySelfLink": {
                    "type": "string",
                    "description": "The self_link of the encryption key that is\nstored in Google Cloud KMS to encrypt this disk. Only one of `kms_key_self_link`\nand `disk_encryption_key_raw` may be set."
                },
                "Mode": {
                    "type": "string",
                    "description": "Either \"READ_ONLY\" or \"READ_WRITE\", defaults to \"READ_WRITE\"\nIf you have a persistent disk with data that you want to share\nbetween multiple instances, detach it from any read-write instances and\nattach it to one or more instances in read-only mode."
                },
                "Source": {
                    "type": "string",
                    "description": "The name or self_link of the disk to attach to this instance."
                }
            },
            "required": [
                "Source"
            ]
        },
        "BootDiskDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoDelete": {
                    "type": "boolean",
                    "description": "Whether the disk will be auto-deleted when the instance\nis deleted. Defaults to true."
                },
                "DeviceName": {
                    "type": "string",
                    "description": "Name with which attached disk will be accessible.\nOn the instance, this device will be `/dev/disk/by-id/google-{{device_name}}`."
                },
                "DiskEncryptionKeyRaw": {
                    "type": "string",
                    "description": "A 256-bit [customer-supplied encryption key]\n(https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),\nencoded in [RFC 4648 base64](https://tools.ietf.org/html/rfc4648#section-4)\nto encrypt this disk. Only one of `kms_key_self_link` and `disk_encryption_key_raw`\nmay be set."
                },
                "KmsKeySelfLink": {
                    "type": "string",
                    "description": "The self_link of the encryption key that is\nstored in Google Cloud KMS to encrypt this disk. Only one of `kms_key_self_link`\nand `disk_encryption_key_raw` may be set."
                },
                "Mode": {
                    "type": "string",
                    "description": "The mode in which to attach this disk, either `READ_WRITE`\nor `READ_ONLY`. If not specified, the default is to attach the disk in `READ_WRITE` mode."
                },
                "Source": {
                    "type": "string",
                    "description": "The name or self_link of the existing disk (such as those managed by\n`google_compute_disk`) or disk image. To create an instance from a snapshot, first create a\n`google_compute_disk` from a snapshot and reference it here."
                },
                "InitializeParams": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InitializeParamsDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "ConfidentialInstanceConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnableConfidentialCompute": {
                    "type": "boolean"
                }
            },
            "required": [
                "EnableConfidentialCompute"
            ]
        },
        "NetworkInterfaceDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Network": {
                    "type": "string",
                    "description": "The name or self_link of the network to attach this interface to.\nEither `network` or `subnetwork` must be provided."
                },
                "NetworkIp": {
                    "type": "string",
                    "description": "The private IP address to assign to the instance. If\nempty, the address will be automatically assigned."
                },
                "NicType": {
                    "type": "string",
                    "description": "The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET."
                },
                "Subnetwork": {
                    "type": "string",
                    "description": "The name or self_link of the subnetwork to attach this\ninterface to. The subnetwork must exist in the same region this instance will be\ncreated in. If network isn't provided it will be inferred from the subnetwork.\nEither `network` or `subnetwork` must be provided."
                },
                "SubnetworkProject": {
                    "type": "string",
                    "description": "The project in which the subnetwork belongs.\nIf the `subnetwork` is a self_link, this field is ignored in favor of the project\ndefined in the subnetwork self_link. If the `subnetwork` is a name and this\nfield is not provided, the provider project is used."
                },
                "AccessConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AccessConfigDefinition"
                    }
                },
                "AliasIpRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AliasIpRangeDefinition"
                    }
                }
            },
            "required": []
        },
        "ReservationAffinityDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string"
                },
                "SpecificReservation": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SpecificReservationDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Type"
            ]
        },
        "SchedulingDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutomaticRestart": {
                    "type": "boolean",
                    "description": "Specifies if the instance should be\nrestarted if it was terminated by Compute Engine (not a user).\nDefaults to true."
                },
                "MinNodeCpus": {
                    "type": "number",
                    "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node."
                },
                "OnHostMaintenance": {
                    "type": "string",
                    "description": "Describes maintenance behavior for the\ninstance. Can be MIGRATE or TERMINATE, for more info, read\n[here](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options)."
                },
                "Preemptible": {
                    "type": "boolean",
                    "description": "Specifies if the instance is preemptible.\nIf this field is set to true, then `automatic_restart` must be\nset to false.  Defaults to false."
                },
                "NodeAffinities": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/NodeAffinitiesDefinition"
                    }
                }
            },
            "required": []
        },
        "ScratchDiskDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Interface": {
                    "type": "string",
                    "description": "The disk interface to use for attaching this disk; either SCSI or NVME."
                }
            },
            "required": [
                "Interface"
            ]
        },
        "ServiceAccountDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Email": {
                    "type": "string",
                    "description": "The service account e-mail address. If not given, the\ndefault Google Compute Engine service account is used.\n**Note**: [`allow_stopping_for_update`](#allow_stopping_for_update) must be set to true or your instance must have a `desired_status` of `TERMINATED` in order to update this field."
                },
                "Scopes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of service scopes. Both OAuth2 URLs and gcloud\nshort names are supported. To allow full access to all Cloud APIs, use the\n`cloud-platform` scope. See a complete list of scopes [here](https://cloud.google.com/sdk/gcloud/reference/alpha/compute/instances/set-scopes#--scopes).\n**Note**: [`allow_stopping_for_update`](#allow_stopping_for_update) must be set to true or your instance must have a `desired_status` of `TERMINATED` in order to update this field."
                }
            },
            "required": [
                "Scopes"
            ]
        },
        "ShieldedInstanceConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnableIntegrityMonitoring": {
                    "type": "boolean"
                },
                "EnableSecureBoot": {
                    "type": "boolean"
                },
                "EnableVtpm": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "InitializeParamsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Image": {
                    "type": "string",
                    "description": "The image from which to initialize this disk. This can be\none of: the image's `self_link`, `projects/{project}/global/images/{image}`,\n`projects/{project}/global/images/family/{family}`, `global/images/{image}`,\n`global/images/family/{family}`, `family/{family}`, `{project}/{family}`,\n`{project}/{image}`, `{family}`, or `{image}`. If referred by family, the\nimages names must include the family name. If they don't, use the\n[google_compute_image data source](/docs/providers/google/d/compute_image.html).\nFor instance, the image `centos-6-v20180104` includes its family name `centos-6`.\nThese images can be referred by family name here."
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LabelsDefinition2"
                    }
                },
                "Size": {
                    "type": "number",
                    "description": "The size of the image in gigabytes. If not specified, it\nwill inherit the size of its base image."
                },
                "Type": {
                    "type": "string",
                    "description": "The GCE disk type. May be set to pd-standard, pd-balanced or pd-ssd."
                }
            },
            "required": []
        },
        "LabelsDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AccessConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NatIp": {
                    "type": "string",
                    "description": "The IP address that will be 1:1 mapped to the instance's\nnetwork ip. If not given, one will be generated."
                },
                "NetworkTier": {
                    "type": "string",
                    "description": "The [networking tier][network-tier] used for configuring this instance.\nThis field can take the following values: PREMIUM or STANDARD. If this field is\nnot specified, it is assumed to be PREMIUM."
                },
                "PublicPtrDomainName": {
                    "type": "string",
                    "description": "The DNS domain name for the public PTR record.\nTo set this field on an instance, you must be verified as the owner of the domain.\nSee [the docs](https://cloud.google.com/compute/docs/instances/create-ptr-record) for how\nto become verified as a domain owner."
                }
            },
            "required": []
        },
        "AliasIpRangeDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IpCidrRange": {
                    "type": "string",
                    "description": "The IP CIDR range represented by this alias IP range. This IP CIDR range\nmust belong to the specified subnetwork and cannot contain IP addresses reserved by\nsystem or used by other network interfaces. This range may be a single IP address\n(e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24)."
                },
                "SubnetworkRangeName": {
                    "type": "string",
                    "description": "The subnetwork secondary range name specifying\nthe secondary range from which to allocate the IP CIDR range for this alias IP\nrange. If left unspecified, the primary range of the subnetwork will be used."
                }
            },
            "required": [
                "IpCidrRange"
            ]
        },
        "SpecificReservationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key",
                "Values"
            ]
        },
        "NodeAffinitiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Operator": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key",
                "Operator",
                "Values"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AllowStoppingForUpdate": {
            "type": "boolean",
            "description": "If true, allows Terraform to stop the instance to update its properties.\nIf you try to update a property that requires stopping the instance without setting this field, the update will fail."
        },
        "CanIpForward": {
            "type": "boolean",
            "description": "Whether to allow sending and receiving of\npackets with non-matching source or destination IPs.\nThis defaults to false."
        },
        "CpuPlatform": {
            "type": "string"
        },
        "CurrentStatus": {
            "type": "string"
        },
        "DeletionProtection": {
            "type": "boolean",
            "description": "Enable deletion protection on this instance. Defaults to false.\n**Note:** you must disable deletion protection before removing the resource (e.g., via `terraform destroy`), or the instance cannot be deleted and the Terraform run will not complete successfully."
        },
        "Description": {
            "type": "string",
            "description": "A brief description of this resource."
        },
        "DesiredStatus": {
            "type": "string",
            "description": "Desired status of the instance. Either\n`\"RUNNING\"` or `\"TERMINATED\"`."
        },
        "EnableDisplay": {
            "type": "boolean",
            "description": "Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.\n**Note**: [`allow_stopping_for_update`](#allow_stopping_for_update) must be set to true or your instance must have a `desired_status` of `TERMINATED` in order to update this field."
        },
        "GuestAccelerator": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/GuestAcceleratorDefinition"
            },
            "description": "List of the type and count of accelerator cards attached to the instance. Structure documented below.\n**Note:** GPU accelerators can only be used with [`on_host_maintenance`](#on_host_maintenance) option set to TERMINATE.\n**Note**: This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html) to avoid\nbreaking users during the 0.12 upgrade. To explicitly send a list\nof zero objects you must use the following syntax:\n`example=[]`\nFor more details about this behavior, see [this section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value)."
        },
        "Hostname": {
            "type": "string",
            "description": "A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.\nValid format is a series of labels 1-63 characters long matching the regular expression `[a-z]([-a-z0-9]*[a-z0-9])`, concatenated with periods.\nThe entire hostname must not exceed 253 characters. Changing this forces a new resource to be created."
        },
        "Id": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "LabelFingerprint": {
            "type": "string"
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/LabelsDefinition"
            },
            "description": "A map of key/value label pairs to assign to the instance."
        },
        "MachineType": {
            "type": "string",
            "description": "The machine type to create."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "description": "Metadata key/value pairs to make available from\nwithin the instance. Ssh keys attached in the Cloud Console will be removed.\nAdd them to your config in order to keep them attached to your instance."
        },
        "MetadataFingerprint": {
            "type": "string"
        },
        "MetadataStartupScript": {
            "type": "string",
            "description": "An alternative to using the\nstartup-script metadata key, except this one forces the instance to be\nrecreated (thus re-running the script) if it is changed. This replaces the\nstartup-script metadata key on the created instance and thus the two\nmechanisms are not allowed to be used simultaneously.  Users are free to use\neither mechanism - the only distinction is that this separate attribute\nwilll cause a recreate on modification.  On import, `metadata_startup_script`\nwill be set, but `metadata.startup-script` will not - if you choose to use the\nother mechanism, you will see a diff immediately after import, which will cause a\ndestroy/recreate operation.  You may want to modify your state file manually\nusing `terraform state` commands, depending on your use case."
        },
        "MinCpuPlatform": {
            "type": "string",
            "description": "Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as\n`Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).\n**Note**: [`allow_stopping_for_update`](#allow_stopping_for_update) must be set to true or your instance must have a `desired_status` of `TERMINATED` in order to update this field."
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the resource, required by GCE.\nChanging this forces a new resource to be created."
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used."
        },
        "ResourcePolicies": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "SelfLink": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of network tags to attach to the instance."
        },
        "TagsFingerprint": {
            "type": "string"
        },
        "Zone": {
            "type": "string",
            "description": "The zone that the machine should be created in. If it is not provided, the provider zone is used."
        },
        "AttachedDisk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AttachedDiskDefinition"
            }
        },
        "BootDisk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BootDiskDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "ConfidentialInstanceConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ConfidentialInstanceConfigDefinition"
            },
            "maxItems": 1
        },
        "NetworkInterface": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkInterfaceDefinition"
            },
            "minItems": 1
        },
        "ReservationAffinity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ReservationAffinityDefinition"
            },
            "maxItems": 1
        },
        "Scheduling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SchedulingDefinition"
            },
            "maxItems": 1
        },
        "ScratchDisk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ScratchDiskDefinition"
            }
        },
        "ServiceAccount": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceAccountDefinition"
            },
            "maxItems": 1
        },
        "ShieldedInstanceConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ShieldedInstanceConfigDefinition"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "MachineType",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CpuPlatform",
        "/properties/CurrentStatus",
        "/properties/Id",
        "/properties/InstanceId",
        "/properties/LabelFingerprint",
        "/properties/MetadataFingerprint",
        "/properties/SelfLink",
        "/properties/TagsFingerprint"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/AttachedDiskDefinition/DiskEncryptionKeyRaw",
        "/definitions/BootDiskDefinition/DiskEncryptionKeyRaw"
    ]
}