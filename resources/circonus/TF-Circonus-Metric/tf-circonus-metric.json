{
    "typeName": "TF::Circonus::Metric",
    "description": "The ``circonus_metric`` resource creates and manages a\nsingle [metric resource](https://login.circonus.com/resources/api/calls/metric)\nthat will be instantiated only once a referencing `circonus_check` has been\ncreated.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/circonus/TF-Circonus-Metric/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Active": {
            "type": "boolean",
            "description": "A boolean indicating if the metric is being filtered out\nat the `circonus_check`'s collector(s) or not."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the metric.  A `name` must be unique within a\n`circonus_check` and its meaning is `circonus_check.type` specific."
        },
        "Type": {
            "type": "string",
            "description": "The type of metric.  This value must be present and can be\none of the following values: `numeric`, `text`, `histogram`, `composite`, or\n`caql`."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Type"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}