{
    "typeName": "TF::LaunchDarkly::CustomRole",
    "description": "Provides a LaunchDarkly custom role resource.\n\nThis resource allows you to create and manage custom roles within your LaunchDarkly organization.\n\n-> **Note:** Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/launchdarkly/TF-LaunchDarkly-CustomRole/docs/README.md",
    "definitions": {
        "PolicyDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Actions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Effect": {
                    "type": "string"
                },
                "Resources": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Actions",
                "Effect",
                "Resources"
            ]
        },
        "PolicyStatementsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Actions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of action specifiers defining the actions to which the statement applies. Either `actions` or `not_actions` must be specified. For a list of available actions read [Actions reference](https://docs.launchdarkly.com/home/account-security/custom-roles/actions#actions-reference)."
                },
                "Effect": {
                    "type": "string",
                    "description": "- Either `allow` or `deny`. This argument defines whether the statement allows or denies access to the named resources and actions."
                },
                "NotActions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of action specifiers defining the actions to which the statement does not apply. Either `actions` or `not_actions` must be specified. For a list of available actions read [Actions reference](https://docs.launchdarkly.com/home/account-security/custom-roles/actions#actions-reference)."
                },
                "NotResources": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "- The list of resource specifiers defining the resources to which the statement does not apply. Either `resources` or `not_resources` must be specified. For a list of available resources read [Understanding resource types and scopes](https://docs.launchdarkly.com/home/account-security/custom-roles/resources#understanding-resource-types-and-scopes)."
                },
                "Resources": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "- The list of resource specifiers defining the resources to which the statement applies. Either `resources` or `not_resources` must be specified. For a list of available resources read [Understanding resource types and scopes](https://docs.launchdarkly.com/home/account-security/custom-roles/resources#understanding-resource-types-and-scopes)."
                }
            },
            "required": [
                "Effect"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "The description of the custom role."
        },
        "Id": {
            "type": "string"
        },
        "Key": {
            "type": "string",
            "description": "The unique key that references the custom role."
        },
        "Name": {
            "type": "string",
            "description": "The human-readable name for the custom role."
        },
        "Policy": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/PolicyDefinition"
            }
        },
        "PolicyStatements": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PolicyStatementsDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Key",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}