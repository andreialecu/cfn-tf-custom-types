{
    "typeName": "TF::SDM::SecretStore",
    "description": "A SecretStore is a server where resource secrets (passwords, keys) are stored. \n Coming soon support for HashiCorp Vault and AWS Secret Store. Contact support@strongdm.com to request access to the beta.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/sdm/TF-SDM-SecretStore/docs/README.md",
    "definitions": {
        "AwsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Region": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TagsDefinition"
                    }
                }
            },
            "required": [
                "Name",
                "Region"
            ]
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Default": {
                    "type": "string"
                }
            },
            "required": []
        },
        "VaultTlsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CaCertPath": {
                    "type": "string"
                },
                "ClientCertPath": {
                    "type": "string"
                },
                "ClientKeyPath": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ServerAddress": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TagsDefinition2"
                    }
                }
            },
            "required": [
                "ClientCertPath",
                "ClientKeyPath",
                "Name",
                "ServerAddress"
            ]
        },
        "TagsDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "VaultTokenDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "ServerAddress": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TagsDefinition3"
                    }
                }
            },
            "required": [
                "Name",
                "ServerAddress"
            ]
        },
        "TagsDefinition3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Aws": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AwsDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        },
        "VaultTls": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VaultTlsDefinition"
            }
        },
        "VaultToken": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VaultTokenDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}