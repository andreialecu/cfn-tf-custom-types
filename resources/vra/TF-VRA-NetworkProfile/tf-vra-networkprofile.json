{
    "typeName": "TF::VRA::NetworkProfile",
    "description": "CloudFormation equivalent of vra_network_profile",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vra/TF-VRA-NetworkProfile/docs/README.md",
    "definitions": {
        "CustomPropertiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LinksDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Href": {
                    "type": "string"
                },
                "Hrefs": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Rel": {
                    "type": "string"
                }
            }
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Key",
                "Value"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CloudAccountId": {
            "type": "string"
        },
        "CreatedAt": {
            "type": "string"
        },
        "CustomProperties": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/CustomPropertiesDefinition"
            },
            "description": "Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed."
        },
        "Description": {
            "type": "string",
            "description": "A human-friendly description."
        },
        "ExternalRegionId": {
            "type": "string"
        },
        "FabricNetworkIds": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of fabric network Ids which are assigned to the network profile.\nexample:[ \"6543\" ]."
        },
        "Id": {
            "type": "string"
        },
        "IsolatedExternalFabricNetworkId": {
            "type": "string",
            "description": "The id of the fabric network used for outbound access."
        },
        "IsolatedNetworkCidrPrefix": {
            "type": "number"
        },
        "IsolatedNetworkDomainCidr": {
            "type": "string"
        },
        "IsolatedNetworkDomainId": {
            "type": "string"
        },
        "IsolationType": {
            "type": "string"
        },
        "Links": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/LinksDefinition"
            }
        },
        "Name": {
            "type": "string",
            "description": "A human-friendly name used as an identifier in APIs that support this option."
        },
        "OrgId": {
            "type": "string"
        },
        "OrganizationId": {
            "type": "string"
        },
        "Owner": {
            "type": "string"
        },
        "RegionId": {
            "type": "string",
            "description": "The id of the region for which this profile is defined as in vRealize Automation(vRA)."
        },
        "SecurityGroupIds": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "UpdatedAt": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "RegionId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CloudAccountId",
        "/properties/CreatedAt",
        "/properties/ExternalRegionId",
        "/properties/Id",
        "/properties/Links",
        "/properties/OrgId",
        "/properties/OrganizationId",
        "/properties/Owner",
        "/properties/UpdatedAt"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}