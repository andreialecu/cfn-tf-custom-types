{
    "typeName": "TF::MongoDBAtlas::CustomDbRole",
    "description": "`mongodbatlas_custom_db_role` provides a Custom DB Role resource. The customDBRoles resource lets you retrieve, create and modify the custom MongoDB roles in your cluster. Use custom MongoDB roles to specify custom sets of actions which cannot be described by the built-in Atlas database user privileges.\n\n-> **IMPORTANT** Custom roles cannot use actions unavailable to any cluster version in your project. Custom roles are defined at the project level, and must be compatible with each MongoDB version used by your project\u2019s clusters. If you have a cluster in your project with MongoDB 3.4, you cannot create a custom role that uses actions introduced in MongoDB 3.6, such as useUUID.\n\n\n-> **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/mongodbatlas/TF-MongoDBAtlas-CustomDbRole/docs/README.md",
    "definitions": {
        "ActionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Resources": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/ResourcesDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "Action"
            ]
        },
        "InheritedRolesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DatabaseName": {
                    "type": "string"
                },
                "RoleName": {
                    "type": "string"
                }
            },
            "required": [
                "DatabaseName",
                "RoleName"
            ]
        },
        "ResourcesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cluster": {
                    "type": "boolean"
                },
                "CollectionName": {
                    "type": "string"
                },
                "DatabaseName": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "ProjectId": {
            "type": "string",
            "description": "The unique ID for the project to create the database user."
        },
        "RoleName": {
            "type": "string",
            "description": "Name of the custom role."
        },
        "Actions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ActionsDefinition"
            }
        },
        "InheritedRoles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/InheritedRolesDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "ProjectId",
        "RoleName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}