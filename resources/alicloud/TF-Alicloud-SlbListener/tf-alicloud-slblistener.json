{
    "typeName": "TF::Alicloud::SlbListener",
    "description": "Provides an Application Load Balancer Listener resource.\n\nFor information about slb and how to use it, see [What is Server Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).\n\nFor information about listener and how to use it, to see the following:\n\n* [Configure a HTTP Listener](https://www.alibabacloud.com/help/doc-detail/27592.htm).\n* [Configure a HTTPS Listener](https://www.alibabacloud.com/help/doc-detail/27593.htm).\n* [Configure a TCP Listener](https://www.alibabacloud.com/help/doc-detail/27594.htm).\n* [Configure a UDP Listener](https://www.alibabacloud.com/help/doc-detail/27595.htm).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-SlbListener/docs/README.md",
    "definitions": {
        "XForwardedForDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RetriveSlbId": {
                    "type": "boolean"
                },
                "RetriveSlbIp": {
                    "type": "boolean"
                },
                "RetriveSlbProto": {
                    "type": "boolean"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AclId": {
            "type": "string",
            "description": "the id of access control list to be apply on the listener, is the id of resource alicloud_slb_acl. If `acl_status` is \"on\", it is mandatory. Otherwise, it will be ignored."
        },
        "AclStatus": {
            "type": "string",
            "description": "Whether to enable \"acl(access control list)\", the acl is specified by `acl_id`. Valid values are `on` and `off`. Default to `off`."
        },
        "AclType": {
            "type": "string",
            "description": "Mode for handling the acl specified by acl_id. If `acl_status` is \"on\", it is mandatory. Otherwise, it will be ignored. Valid values are `white` and `black`. `white` means the Listener can only be accessed by client ip belongs to the acl; `black` means the Listener can not be accessed by client ip belongs to the acl."
        },
        "BackendPort": {
            "type": "number",
            "description": "Port used by the Server Load Balancer instance backend. Valid value range: [1-65535]."
        },
        "Bandwidth": {
            "type": "number",
            "description": "Bandwidth peak of Listener. For the public network instance charged per traffic consumed, the Bandwidth on Listener can be set to -1, indicating the bandwidth peak is unlimited. Valid values are [-1, 1-1000] in Mbps."
        },
        "CaCertificateId": {
            "type": "string"
        },
        "Cookie": {
            "type": "string",
            "description": "The cookie configured on the server. It is mandatory when `sticky_session` is \"on\" and `sticky_session_type` is \"server\". Otherwise, it will be ignored. Valid value\uff1aString in line with RFC 2965, with length being 1- 200. It only contains characters such as ASCII codes, English letters and digits instead of the comma, semicolon or spacing, and it cannot start with $."
        },
        "CookieTimeout": {
            "type": "number",
            "description": "Cookie timeout. It is mandatory when `sticky_session` is \"on\" and `sticky_session_type` is \"insert\". Otherwise, it will be ignored. Valid value range: [1-86400] in seconds."
        },
        "DeleteProtectionValidation": {
            "type": "boolean",
            "description": "Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false."
        },
        "Description": {
            "type": "string",
            "description": "The description of slb listener. This description can have a string of 1 to 80 characters. Default value: null."
        },
        "EnableHttp2": {
            "type": "string",
            "description": "Whether to enable https listener support http2 or not. Valid values are `on` and `off`. Default to `on`."
        },
        "EstablishedTimeout": {
            "type": "number",
            "description": "Timeout of tcp listener established connection idle timeout. Valid value range: [10-900] in seconds. Default to 900."
        },
        "ForwardPort": {
            "type": "number",
            "description": "The port that http redirect to https."
        },
        "FrontendPort": {
            "type": "number",
            "description": "Port used by the Server Load Balancer instance frontend. Valid value range: [1-65535]."
        },
        "Gzip": {
            "type": "boolean",
            "description": "Whether to enable \"Gzip Compression\". If enabled, files of specific file types will be compressed, otherwise, no files will be compressed. Default to true. Available in v1.13.0+."
        },
        "HealthCheck": {
            "type": "string",
            "description": "Whether to enable health check. Valid values are`on` and `off`. TCP and UDP listener's HealthCheck is always on, so it will be ignore when launching TCP or UDP listener."
        },
        "HealthCheckConnectPort": {
            "type": "number",
            "description": "Port used for health check. Valid value range: [1-65535]. Default to \"None\" means the backend server port is used."
        },
        "HealthCheckDomain": {
            "type": "string",
            "description": "Domain name used for health check. When it used to launch TCP listener, `health_check_type` must be \"http\". Its length is limited to 1-80 and only characters such as letters, digits, \u2018-\u2018 and \u2018.\u2019 are allowed. When it is not set or empty,  Server Load Balancer uses the private network IP address of each backend server as Domain used for health check."
        },
        "HealthCheckHttpCode": {
            "type": "string",
            "description": "Regular health check HTTP status code. Multiple codes are segmented by \u201c,\u201d. It is required when `health_check` is on. Default to `http_2xx`.  Valid values are: `http_2xx`,  `http_3xx`, `http_4xx` and `http_5xx`."
        },
        "HealthCheckInterval": {
            "type": "number",
            "description": "Time interval of health checks. It is required when `health_check` is on. Valid value range: [1-50] in seconds. Default to 2."
        },
        "HealthCheckMethod": {
            "type": "string",
            "description": "The method of health check. Valid values: [\"head\", \"get\"]."
        },
        "HealthCheckTimeout": {
            "type": "number",
            "description": "Maximum timeout of each health check response. It is required when `health_check` is on. Valid value range: [1-300] in seconds. Default to 5. Note: If `health_check_timeout` < `health_check_interval`, its will be replaced by `health_check_interval`."
        },
        "HealthCheckType": {
            "type": "string",
            "description": "Type of health check. Valid values are: `tcp` and `http`. Default to `tcp` . TCP supports TCP and HTTP health check mode, you can select the particular mode depending on your application."
        },
        "HealthCheckUri": {
            "type": "string",
            "description": "URI used for health check. When it used to launch TCP listener, `health_check_type` must be \"http\". Its length is limited to 1-80 and it must start with /. Only characters such as letters, digits, \u2018-\u2019, \u2018/\u2019, \u2018.\u2019, \u2018%\u2019, \u2018?\u2019, #\u2019 and \u2018&\u2019 are allowed."
        },
        "HealthyThreshold": {
            "type": "number",
            "description": "Threshold determining the result of the health check is success. It is required when `health_check` is on. Valid value range: [1-10] in seconds. Default to 3."
        },
        "Id": {
            "type": "string"
        },
        "IdleTimeout": {
            "type": "number",
            "description": "Timeout of http or https listener established connection idle timeout. Valid value range: [1-60] in seconds. Default to 15."
        },
        "InstancePort": {
            "type": "number"
        },
        "LbPort": {
            "type": "number"
        },
        "LbProtocol": {
            "type": "string"
        },
        "ListenerForward": {
            "type": "string",
            "description": "Whether to enable http redirect to https, Valid values are `on` and `off`. Default to `off`."
        },
        "LoadBalancerId": {
            "type": "string",
            "description": "The Load Balancer ID which is used to launch a new listener."
        },
        "MasterSlaveServerGroupId": {
            "type": "string"
        },
        "PersistenceTimeout": {
            "type": "number",
            "description": "Timeout of connection persistence. Valid value range: [0-3600] in seconds. Default to 0 and means closing it."
        },
        "Protocol": {
            "type": "string",
            "description": "The protocol to listen on. Valid values are [`http`, `https`, `tcp`, `udp`]."
        },
        "RequestTimeout": {
            "type": "number",
            "description": "Timeout of http or https listener request (which does not get response from backend) timeout. Valid value range: [1-180] in seconds. Default to 60."
        },
        "Scheduler": {
            "type": "string",
            "description": "Scheduling algorithm, Valid values are `wrr`, `rr` and `wlc`.  Default to \"wrr\"."
        },
        "ServerCertificateId": {
            "type": "string",
            "description": "SLB Server certificate ID. It is required when `protocol` is `https`."
        },
        "ServerGroupId": {
            "type": "string",
            "description": "the id of server group to be apply on the listener, is the id of resource `alicloud_slb_server_group`."
        },
        "SslCertificateId": {
            "type": "string",
            "description": "It has been deprecated from 1.59.0 and using `server_certificate_id` instead."
        },
        "StickySession": {
            "type": "string",
            "description": "Whether to enable session persistence, Valid values are `on` and `off`. Default to `off`."
        },
        "StickySessionType": {
            "type": "string",
            "description": "Mode for handling the cookie. If `sticky_session` is \"on\", it is mandatory. Otherwise, it will be ignored. Valid values are `insert` and `server`. `insert` means it is inserted from Server Load Balancer; `server` means the Server Load Balancer learns from the backend server."
        },
        "TlsCipherPolicy": {
            "type": "string",
            "description": "Https listener TLS cipher policy. Valid values are `tls_cipher_policy_1_0`, `tls_cipher_policy_1_1`, `tls_cipher_policy_1_2`, `tls_cipher_policy_1_2_strict`. Default to `tls_cipher_policy_1_0`. Currently the `tls_cipher_policy` can not be updated when load balancer instance is \"Shared-Performance\"."
        },
        "UnhealthyThreshold": {
            "type": "number",
            "description": "Threshold determining the result of the health check is fail. It is required when `health_check` is on. Valid value range: [1-10] in seconds. Default to 3."
        },
        "XForwardedFor": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/XForwardedForDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "FrontendPort",
        "LoadBalancerId",
        "Protocol"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}