{
    "typeName": "TF::Alicloud::LogMachineGroup",
    "description": "Log Service manages all the ECS instances whose logs need to be collected by using the Logtail client in the form of machine groups.\n [Refer to details](https://www.alibabacloud.com/help/doc-detail/28966.htm)",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-LogMachineGroup/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IdentifyList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The specific machine identification, which can be an IP address or user-defined identity."
        },
        "IdentifyType": {
            "type": "string",
            "description": "The machine identification type, including IP and user-defined identity. Valid values are \"ip\" and \"userdefined\". Default to \"ip\"."
        },
        "Name": {
            "type": "string",
            "description": "The machine group name, which is unique in the same project."
        },
        "Project": {
            "type": "string",
            "description": "The project name to the machine group belongs."
        },
        "Topic": {
            "type": "string",
            "description": "The topic of a machine group."
        }
    },
    "additionalProperties": false,
    "required": [
        "IdentifyList",
        "Name",
        "Project"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}