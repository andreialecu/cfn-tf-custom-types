{
    "typeName": "TF::Alicloud::EssAttachment",
    "description": "Attaches several ECS instances to a specified scaling group or remove them from it.\n\n-> **NOTE:** ECS instances can be attached or remove only when the scaling group is active and it has no scaling activity in progress.\n\n-> **NOTE:** There are two types ECS instances in a scaling group: \"AutoCreated\" and \"Attached\". The total number of them can not larger than the scaling group \"MaxSize\".",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-EssAttachment/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Force": {
            "type": "boolean",
            "description": "Whether to remove forcibly \"AutoCreated\" ECS instances in order to release scaling group capacity \"MaxSize\" for attaching ECS instances. Default to false."
        },
        "Id": {
            "type": "string"
        },
        "InstanceIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "ID of the ECS instance to be attached to the scaling group. You can input up to 20 IDs."
        },
        "ScalingGroupId": {
            "type": "string",
            "description": "ID of the scaling group of a scaling configuration."
        }
    },
    "additionalProperties": false,
    "required": [
        "InstanceIds",
        "ScalingGroupId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}