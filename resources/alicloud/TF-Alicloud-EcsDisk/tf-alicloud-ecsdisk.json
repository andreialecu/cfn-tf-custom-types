{
    "typeName": "TF::Alicloud::EcsDisk",
    "description": "CloudFormation equivalent of alicloud_ecs_disk",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-EcsDisk/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdvancedFeatures": {
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "Category": {
            "type": "string"
        },
        "DedicatedBlockStorageClusterId": {
            "type": "string"
        },
        "DeleteAutoSnapshot": {
            "type": "boolean"
        },
        "DeleteWithInstance": {
            "type": "boolean"
        },
        "Description": {
            "type": "string"
        },
        "DiskName": {
            "type": "string"
        },
        "DryRun": {
            "type": "boolean"
        },
        "EnableAutoSnapshot": {
            "type": "boolean"
        },
        "EncryptAlgorithm": {
            "type": "string"
        },
        "Encrypted": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "PaymentType": {
            "type": "string"
        },
        "PerformanceLevel": {
            "type": "string"
        },
        "ResourceGroupId": {
            "type": "string"
        },
        "Size": {
            "type": "number"
        },
        "SnapshotId": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "StorageSetId": {
            "type": "string"
        },
        "StorageSetPartitionNumber": {
            "type": "number"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            }
        },
        "Type": {
            "type": "string"
        },
        "ZoneId": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}