{
    "typeName": "TF::Alicloud::LogtailAttachment",
    "description": "The Logtail access service is a log collection agent provided by Log Service.\nYou can use Logtail to collect logs from servers such as Alibaba Cloud Elastic\nCompute Service (ECS) instances in real time in the Log Service console. [Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm)\n\nThis resource amis to attach one logtail configure to a machine group.\n\n-> **NOTE:** One logtail configure can be attached to multiple machine groups and one machine group can attach several logtail configures.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-LogtailAttachment/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LogtailConfigName": {
            "type": "string",
            "description": "The Logtail configuration name, which is unique in the same project."
        },
        "MachineGroupName": {
            "type": "string",
            "description": "The machine group name, which is unique in the same project."
        },
        "Project": {
            "type": "string",
            "description": "The project name to the log store belongs."
        }
    },
    "additionalProperties": false,
    "required": [
        "LogtailConfigName",
        "MachineGroupName",
        "Project"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}