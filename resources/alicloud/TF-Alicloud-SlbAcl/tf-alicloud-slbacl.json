{
    "typeName": "TF::Alicloud::SlbAcl",
    "description": "An access control list contains multiple IP addresses or CIDR blocks.\nThe access control list can help you to define multiple instance listening dimension,\nand to meet the multiple usage for single access control list.\n\nServer Load Balancer allows you to configure access control for listeners.\nYou can configure different whitelists or blacklists for different listeners.\n\nYou can configure access control\nwhen you create a listener or change access control configuration after a listener is created.\n\n-> **NOTE:** One access control list can be attached to many Listeners in different load balancer as whitelists or blacklists.\n\n-> **NOTE:** The maximum number of access control lists per region  is 50.\n\n-> **NOTE:** The maximum number of IP addresses added each time is 50.\n\n-> **NOTE:** The maximum number of entries per access control list is 300.\n\n-> **NOTE:** The maximum number of listeners that an access control list can be added to is 50.\n\nFor information about slb and how to use it, see [What is Server Loa...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-SlbAcl/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "EntryListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Comment": {
                    "type": "string"
                },
                "Entry": {
                    "type": "string"
                }
            },
            "required": [
                "Entry"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpVersion": {
            "type": "string",
            "description": "The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: \"ipv4\"."
        },
        "Name": {
            "type": "string",
            "description": "Name of the access control list."
        },
        "ResourceGroupId": {
            "type": "string",
            "description": "Resource group ID."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "EntryList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/EntryListDefinition"
            },
            "maxItems": 300
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}