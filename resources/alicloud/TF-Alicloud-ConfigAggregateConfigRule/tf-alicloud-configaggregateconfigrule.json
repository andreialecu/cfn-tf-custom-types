{
    "typeName": "TF::Alicloud::ConfigAggregateConfigRule",
    "description": "CloudFormation equivalent of alicloud_config_aggregate_config_rule",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-ConfigAggregateConfigRule/docs/README.md",
    "definitions": {
        "InputParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AggregateConfigRuleName": {
            "type": "string"
        },
        "AggregatorId": {
            "type": "string"
        },
        "ConfigRuleTriggerTypes": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "ExcludeResourceIdsScope": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InputParameters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/InputParametersDefinition"
            }
        },
        "MaximumExecutionFrequency": {
            "type": "string"
        },
        "RegionIdsScope": {
            "type": "string"
        },
        "ResourceGroupIdsScope": {
            "type": "string"
        },
        "ResourceTypesScope": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "RiskLevel": {
            "type": "number"
        },
        "SourceIdentifier": {
            "type": "string"
        },
        "SourceOwner": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "TagKeyScope": {
            "type": "string"
        },
        "TagValueScope": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AggregateConfigRuleName",
        "AggregatorId",
        "ConfigRuleTriggerTypes",
        "ResourceTypesScope",
        "RiskLevel",
        "SourceIdentifier",
        "SourceOwner"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}