{
    "typeName": "TF::Alicloud::MseCluster",
    "description": "Provides a MSE Cluster resource. It is a one-stop microservice platform for the industry's mainstream open source microservice frameworks Spring Cloud and Dubbo, providing governance center, managed registry and managed configuration center.\n\n-> **NOTE:** Available in 1.94.0+.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-MseCluster/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AclEntryList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The whitelist."
        },
        "ClusterAliasName": {
            "type": "string",
            "description": "The alias of MSE Cluster."
        },
        "ClusterSpecification": {
            "type": "string",
            "description": "The engine specification of MSE Cluster. Valid values: `MSE_SC_1_2_200_c`, `MSE_SC_2`, `MSE_SC_4_8_200_c_4_200_c`, `MSE_SC_8_16_200_c`."
        },
        "ClusterType": {
            "type": "string",
            "description": "The type of MSE Cluster."
        },
        "ClusterVersion": {
            "type": "string",
            "description": "The version of MSE Cluster."
        },
        "DiskType": {
            "type": "string",
            "description": "The type of Disk."
        },
        "Id": {
            "type": "string"
        },
        "InstanceCount": {
            "type": "number",
            "description": "The count of instance."
        },
        "NetType": {
            "type": "string",
            "description": "The type of network. Range limit: 1~5."
        },
        "PrivateSlbSpecification": {
            "type": "string",
            "description": "The specification of private network SLB."
        },
        "PubNetworkFlow": {
            "type": "string",
            "description": "The public network bandwidth. `0` means no access to the public network."
        },
        "PubSlbSpecification": {
            "type": "string",
            "description": "The specification of public network SLB."
        },
        "Status": {
            "type": "string"
        },
        "VswitchId": {
            "type": "string",
            "description": "The id of VSwitch."
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterSpecification",
        "ClusterType",
        "ClusterVersion",
        "InstanceCount",
        "NetType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}