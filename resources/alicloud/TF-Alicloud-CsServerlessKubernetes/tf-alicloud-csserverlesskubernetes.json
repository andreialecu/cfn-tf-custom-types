{
    "typeName": "TF::Alicloud::CsServerlessKubernetes",
    "description": "This resource will help you to manager a Serverless Kubernetes Cluster. The cluster is same as container service created by web console.\n\n\n-> **NOTE:** Serverless Kubernetes cluster only supports VPC network and it can access internet while creating kubernetes cluster.\nA Nat Gateway and configuring a SNAT for it can ensure one VPC network access internet. If there is no nat gateway in the\nVPC, you can set `new_nat_gateway` to \"true\" to create one automatically.\n\n-> **NOTE:** Creating serverless kubernetes cluster need to install several packages and it will cost about 5 minutes. Please be patient.\n\n-> **NOTE:** The provider supports to download kube config, client certificate, client key and cluster ca certificate\nafter creating cluster successfully, and you can put them into the specified location, like '~/.kube/config'.\n\n-> **NOTE:** If you want to manage serverless Kubernetes, you can use [Kubernetes Provider](https://www.terraform.io/docs/providers/kubernetes/index.html).\n\n-> **NOTE:** You need to act...",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-CsServerlessKubernetes/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AddonsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Config": {
                    "type": "string"
                },
                "Disabled": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": []
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ClientCert": {
            "type": "string",
            "description": "The path of client certificate, like `~/.kube/client-cert.pem`."
        },
        "ClientKey": {
            "type": "string",
            "description": "The path of client key, like `~/.kube/client-key.pem`."
        },
        "ClusterCaCert": {
            "type": "string",
            "description": "The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`."
        },
        "DeletionProtection": {
            "type": "boolean",
            "description": "Whether enable the deletion protection or not.\n- true: Enable deletion protection.\n- false: Disable deletion protection."
        },
        "EndpointPublicAccessEnabled": {
            "type": "boolean",
            "description": "Whether to create internet  eip for API Server. Default to false."
        },
        "ForceUpdate": {
            "type": "boolean",
            "description": "Default false, when you want to change `vpc_id` and `vswitch_id`, you have to set this field to true, then the cluster will be recreated."
        },
        "Id": {
            "type": "string"
        },
        "KubeConfig": {
            "type": "string",
            "description": "The path of kube config, like `~/.kube/config`."
        },
        "LoadBalancerSpec": {
            "type": "string"
        },
        "LoggingType": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The kubernetes cluster's name. It is the only in one Alicloud account."
        },
        "NamePrefix": {
            "type": "string",
            "description": "The kubernetes cluster name's prefix. It is conflict with `name`. If it is specified, terraform will using it to build the only cluster name. Default to \"Terraform-Creation\"."
        },
        "NewNatGateway": {
            "type": "boolean",
            "description": "Whether to create a new nat gateway while creating kubernetes cluster. Default to true."
        },
        "PrivateZone": {
            "type": "boolean",
            "description": "Enable Privatezone if you need to use the service discovery feature within the serverless cluster. Default to false."
        },
        "ResourceGroupId": {
            "type": "string"
        },
        "SecurityGroupId": {
            "type": "string",
            "description": "The ID of the security group to which the ECS instances in the cluster belong. If it is not specified, a new Security group will be built."
        },
        "ServiceCidr": {
            "type": "string"
        },
        "ServiceDiscoveryTypes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "SlsProjectName": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            },
            "description": "Default nil, A map of tags assigned to the kubernetes cluster ."
        },
        "TimeZone": {
            "type": "string"
        },
        "Version": {
            "type": "string"
        },
        "VpcId": {
            "type": "string",
            "description": "The vpc where new kubernetes cluster will be located. Specify one vpc's id, if it is not specified, a new VPC  will be built."
        },
        "VswitchId": {
            "type": "string"
        },
        "VswitchIds": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The vswitches where new kubernetes cluster will be located."
        },
        "ZoneId": {
            "type": "string"
        },
        "Addons": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AddonsDefinition"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "VpcId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}