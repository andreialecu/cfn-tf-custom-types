{
    "typeName": "TF::Alicloud::GaForwardingRule",
    "description": "CloudFormation equivalent of alicloud_ga_forwarding_rule",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-GaForwardingRule/docs/README.md",
    "definitions": {
        "RuleActionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Order": {
                    "type": "number"
                },
                "RuleActionType": {
                    "type": "string"
                },
                "ForwardGroupConfig": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/ForwardGroupConfigDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "Order",
                "RuleActionType"
            ]
        },
        "RuleConditionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RuleConditionType": {
                    "type": "string"
                },
                "HostConfig": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/HostConfigDefinition"
                    }
                },
                "PathConfig": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/PathConfigDefinition"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "RuleConditionType"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ForwardGroupConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ServerGroupTuples": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/ServerGroupTuplesDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": []
        },
        "HostConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "PathConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "ServerGroupTuplesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndpointGroupId": {
                    "type": "string"
                }
            },
            "required": [
                "EndpointGroupId"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AcceleratorId": {
            "type": "string"
        },
        "ForwardingRuleId": {
            "type": "string"
        },
        "ForwardingRuleName": {
            "type": "string"
        },
        "ForwardingRuleStatus": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "ListenerId": {
            "type": "string"
        },
        "Priority": {
            "type": "number"
        },
        "RuleActions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RuleActionsDefinition"
            },
            "minItems": 1
        },
        "RuleConditions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RuleConditionsDefinition"
            },
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "AcceleratorId",
        "ListenerId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ForwardingRuleId",
        "/properties/ForwardingRuleStatus",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}