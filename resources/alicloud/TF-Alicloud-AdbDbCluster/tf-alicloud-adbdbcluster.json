{
    "typeName": "TF::Alicloud::AdbDbCluster",
    "description": "CloudFormation equivalent of alicloud_adb_db_cluster",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-AdbDbCluster/docs/README.md",
    "definitions": {
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoRenewPeriod": {
            "type": "number"
        },
        "ComputeResource": {
            "type": "string"
        },
        "ConnectionString": {
            "type": "string"
        },
        "DbClusterCategory": {
            "type": "string"
        },
        "DbClusterClass": {
            "type": "string"
        },
        "DbClusterVersion": {
            "type": "string"
        },
        "DbNodeClass": {
            "type": "string"
        },
        "DbNodeCount": {
            "type": "number"
        },
        "DbNodeStorage": {
            "type": "number"
        },
        "Description": {
            "type": "string"
        },
        "ElasticIoResource": {
            "type": "number"
        },
        "Id": {
            "type": "string"
        },
        "MaintainTime": {
            "type": "string"
        },
        "Mode": {
            "type": "string"
        },
        "ModifyType": {
            "type": "string"
        },
        "PayType": {
            "type": "string"
        },
        "PaymentType": {
            "type": "string"
        },
        "Period": {
            "type": "number"
        },
        "RenewalStatus": {
            "type": "string"
        },
        "ResourceGroupId": {
            "type": "string"
        },
        "SecurityIps": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Status": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            }
        },
        "VswitchId": {
            "type": "string"
        },
        "ZoneId": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "DbClusterCategory",
        "Mode"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ConnectionString",
        "/properties/Id",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}