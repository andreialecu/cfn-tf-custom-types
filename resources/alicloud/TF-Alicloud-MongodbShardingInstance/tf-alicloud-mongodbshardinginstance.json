{
    "typeName": "TF::Alicloud::MongodbShardingInstance",
    "description": "Provides a MongoDB sharding instance resource supports replica set instances only. the MongoDB provides stable, reliable, and automatic scalable database services. \nIt offers a full range of database solutions, such as disaster recovery, backup, recovery, monitoring, and alarms.\nYou can see detail product introduction [here](https://www.alibabacloud.com/help/doc-detail/26558.htm)\n\n-> **NOTE:**  Available in 1.40.0+\n\n-> **NOTE:**  The following regions don't support create Classic network MongoDB sharding instance.\n[`cn-zhangjiakou`,`cn-huhehaote`,`ap-southeast-2`,`ap-southeast-3`,`ap-southeast-5`,`ap-south-1`,`me-east-1`,`ap-northeast-1`,`eu-west-1`] \n\n-> **NOTE:**  Create MongoDB Sharding instance or change instance type and storage would cost 10~20 minutes. Please make full preparation",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-MongodbShardingInstance/docs/README.md",
    "definitions": {
        "KmsEncryptionContextDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TagsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "MongoListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NodeClass": {
                    "type": "string"
                }
            },
            "required": [
                "NodeClass"
            ]
        },
        "ShardListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NodeClass": {
                    "type": "string"
                },
                "NodeStorage": {
                    "type": "number"
                }
            },
            "required": [
                "NodeClass",
                "NodeStorage"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccountPassword": {
            "type": "string",
            "description": "Password of the root account. It is a string of 6 to 32 characters and is composed of letters, numbers, and underlines."
        },
        "BackupPeriod": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "MongoDB Instance backup period. It is required when `backup_time` was existed. Valid values: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]. Default to [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]."
        },
        "BackupTime": {
            "type": "string",
            "description": "MongoDB instance backup time. It is required when `backup_period` was existed. In the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. If not set, the system will return a default, like \"23:00Z-24:00Z\"."
        },
        "EngineVersion": {
            "type": "string",
            "description": "Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/zh/doc-detail/61884.htm) `EngineVersion`."
        },
        "Id": {
            "type": "string"
        },
        "InstanceChargeType": {
            "type": "string",
            "description": "Valid values are `PrePaid`, `PostPaid`,System default to `PostPaid`."
        },
        "KmsEncryptedPassword": {
            "type": "string",
            "description": "An KMS encrypts password used to a instance. If the `account_password` is filled in, this field will be ignored."
        },
        "KmsEncryptionContext": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/KmsEncryptionContextDefinition"
            },
            "description": "An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating instance with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set."
        },
        "Name": {
            "type": "string",
            "description": "The name of DB instance. It a string of 2 to 256 characters."
        },
        "Period": {
            "type": "number",
            "description": "The duration that you will buy DB instance (in month). It is valid when instance_charge_type is `PrePaid`. Valid values: [1~9], 12, 24, 36. System default to 1."
        },
        "RetentionPeriod": {
            "type": "number"
        },
        "SecurityGroupId": {
            "type": "string",
            "description": "The Security Group ID of ECS."
        },
        "SecurityIpList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `[\"127.0.0.1\"]`."
        },
        "StorageEngine": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/TagsDefinition"
            }
        },
        "TdeStatus": {
            "type": "string",
            "description": "The TDE(Transparent Data Encryption) status."
        },
        "VswitchId": {
            "type": "string",
            "description": "The virtual switch ID to launch DB instances in one VPC."
        },
        "ZoneId": {
            "type": "string",
            "description": "The Zone to launch the DB instance. MongoDB sharding instance does not support multiple-zone.\nIf it is a multi-zone and `vswitch_id` is specified, the vswitch must in one of them."
        },
        "MongoList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MongoListDefinition"
            },
            "maxItems": 32,
            "minItems": 2
        },
        "ShardList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ShardListDefinition"
            },
            "maxItems": 32,
            "minItems": 2
        }
    },
    "additionalProperties": false,
    "required": [
        "EngineVersion"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/RetentionPeriod"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/AccountPassword"
    ]
}