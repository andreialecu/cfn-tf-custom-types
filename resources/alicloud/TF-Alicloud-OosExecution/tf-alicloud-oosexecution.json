{
    "typeName": "TF::Alicloud::OosExecution",
    "description": "Provides a OOS Execution resource. For information about Alicloud OOS Execution and how to use it, see [What is Resource Alicloud OOS Execution](https://www.alibabacloud.com/help/doc-detail/120771.htm).\n\n-> **NOTE:** Available in 1.93.0+.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-OosExecution/docs/README.md",
    "definitions": {
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Counters": {
            "type": "string"
        },
        "CreateDate": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "The description of OOS Execution."
        },
        "EndDate": {
            "type": "string"
        },
        "ExecutedBy": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IsParent": {
            "type": "boolean"
        },
        "LoopMode": {
            "type": "string",
            "description": "The loop mode of OOS Execution."
        },
        "Mode": {
            "type": "string",
            "description": "The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`."
        },
        "Outputs": {
            "type": "string"
        },
        "Parameters": {
            "type": "string",
            "description": "The parameters required by the template. Default to `{}`."
        },
        "ParentExecutionId": {
            "type": "string",
            "description": "The id of parent execution."
        },
        "RamRole": {
            "type": "string"
        },
        "SafetyCheck": {
            "type": "string",
            "description": "The mode of safety check."
        },
        "StartDate": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "StatusMessage": {
            "type": "string"
        },
        "TemplateContent": {
            "type": "string"
        },
        "TemplateId": {
            "type": "string"
        },
        "TemplateName": {
            "type": "string",
            "description": "The name of execution template."
        },
        "TemplateVersion": {
            "type": "string",
            "description": "The version of execution template."
        },
        "UpdateDate": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "TemplateName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Counters",
        "/properties/CreateDate",
        "/properties/EndDate",
        "/properties/ExecutedBy",
        "/properties/Id",
        "/properties/IsParent",
        "/properties/Outputs",
        "/properties/RamRole",
        "/properties/StartDate",
        "/properties/Status",
        "/properties/StatusMessage",
        "/properties/TemplateId",
        "/properties/UpdateDate"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}