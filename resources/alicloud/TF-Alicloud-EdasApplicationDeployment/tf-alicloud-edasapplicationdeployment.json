{
    "typeName": "TF::Alicloud::EdasApplicationDeployment",
    "description": "Creates an EDAS application deployment. It will rollback to last package version when run `terraform destroy`.\n\n-> **NOTE:** Available in 1.82.0+",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/alicloud/TF-Alicloud-EdasApplicationDeployment/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AppId": {
            "type": "string",
            "description": "The ID of the application that you want to deploy."
        },
        "GroupId": {
            "type": "string",
            "description": "The ID of the instance group where the application is going to be deployed. Set this parameter to all if you want to deploy the application to all groups."
        },
        "Id": {
            "type": "string"
        },
        "LastPackageVersion": {
            "type": "string"
        },
        "PackageVersion": {
            "type": "string",
            "description": "The version of the application that you want to deploy. It must be unique for every application. The length cannot exceed 64 characters. We recommended you to use a timestamp."
        },
        "WarUrl": {
            "type": "string",
            "description": "The address to store the uploaded web application (WAR) package for application deployment. This parameter is required when the deployType parameter is set as url."
        }
    },
    "additionalProperties": false,
    "required": [
        "AppId",
        "GroupId",
        "WarUrl"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/LastPackageVersion"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}