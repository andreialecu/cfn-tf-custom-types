{
    "typeName": "TF::Kubernetes::StorageClass",
    "description": "Storage class is the foundation of dynamic provisioning, allowing cluster administrators to define abstractions for the underlying storage platform.\n\nRead more at https://kubernetes.io/blog/2017/03/dynamic-provisioning-and-storage-classes-kubernetes/",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/kubernetes/TF-Kubernetes-StorageClass/docs/README.md",
    "definitions": {
        "ParametersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "AllowedTopologiesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MatchLabelExpressions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/MatchLabelExpressionsDefinition"
                    }
                }
            },
            "required": []
        },
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Annotations": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AnnotationsDefinition"
                    }
                },
                "GenerateName": {
                    "type": "string"
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LabelsDefinition"
                    }
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": []
        },
        "AnnotationsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "MatchLabelExpressionsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AllowVolumeExpansion": {
            "type": "boolean",
            "description": "Indicates whether the storage class allow volume expand, default true."
        },
        "Id": {
            "type": "string"
        },
        "MountOptions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Persistent Volumes that are dynamically created by a storage class will have the mount options specified."
        },
        "Parameters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ParametersDefinition"
            },
            "description": "The parameters for the provisioner that should create volumes of this storage class.\nRead more about [available parameters](https://kubernetes.io/docs/concepts/storage/storage-classes/#parameters)."
        },
        "ReclaimPolicy": {
            "type": "string",
            "description": "Indicates the reclaim policy to use.  If no reclaimPolicy is specified when a StorageClass object is created, it will default to Delete."
        },
        "StorageProvisioner": {
            "type": "string",
            "description": "Indicates the type of the provisioner."
        },
        "VolumeBindingMode": {
            "type": "string",
            "description": "Indicates when volume binding and dynamic provisioning should occur."
        },
        "AllowedTopologies": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AllowedTopologiesDefinition"
            },
            "maxItems": 1
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "StorageProvisioner"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}