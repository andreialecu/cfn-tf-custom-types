{
    "typeName": "TF::Kubernetes::Service",
    "description": "A Service is an abstraction which defines a logical set of pods and a policy by which to access them - sometimes called a micro-service.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/kubernetes/TF-Kubernetes-Service/docs/README.md",
    "definitions": {
        "StatusDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hostname": {
                    "type": "string"
                },
                "Ip": {
                    "type": "string"
                }
            }
        },
        "StatusDefinition2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Ingress": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/StatusDefinition"
                    }
                }
            }
        },
        "StatusDefinition3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "LoadBalancer": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/StatusDefinition2"
                    }
                }
            }
        },
        "MetadataDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Annotations": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AnnotationsDefinition"
                    }
                },
                "GenerateName": {
                    "type": "string"
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LabelsDefinition"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string"
                }
            },
            "required": []
        },
        "AnnotationsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "LabelsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "SpecDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClusterIp": {
                    "type": "string"
                },
                "ExternalIps": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "ExternalName": {
                    "type": "string"
                },
                "ExternalTrafficPolicy": {
                    "type": "string"
                },
                "HealthCheckNodePort": {
                    "type": "number"
                },
                "LoadBalancerIp": {
                    "type": "string"
                },
                "LoadBalancerSourceRanges": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "PublishNotReadyAddresses": {
                    "type": "boolean"
                },
                "Selector": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SelectorDefinition"
                    }
                },
                "SessionAffinity": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Port": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PortDefinition"
                    }
                }
            },
            "required": []
        },
        "SelectorDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                }
            },
            "required": []
        },
        "PortDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "NodePort": {
                    "type": "number"
                },
                "Port": {
                    "type": "number"
                },
                "Protocol": {
                    "type": "string"
                },
                "TargetPort": {
                    "type": "string"
                }
            },
            "required": [
                "Port"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Status": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StatusDefinition3"
            }
        },
        "WaitForLoadBalancer": {
            "type": "boolean",
            "description": "Terraform will wait for the load balancer to have at least 1 endpoint before considering the resource created. Defaults to `true`."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MetadataDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Spec": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SpecDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}