{
    "typeName": "TF::TLS::PrivateKey",
    "description": "Generates a secure private key and encodes it as PEM. This resource is\nprimarily intended for easily bootstrapping throwaway development\nenvironments.\n\n~> **Important Security Notice** The private key generated by this resource will\nbe stored *unencrypted* in your Terraform state file. **Use of this resource\nfor production deployments is *not* recommended**. Instead, generate\na private key file outside of Terraform and distribute it securely\nto the system where Terraform will be run.\n\nThis is a *logical resource*, so it contributes only to the current Terraform\nstate and does not create any external managed resources.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/tls/TF-TLS-PrivateKey/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Algorithm": {
            "type": "string",
            "description": "The name of the algorithm to use for\nthe key. Currently-supported values are \"RSA\" and \"ECDSA\"."
        },
        "EcdsaCurve": {
            "type": "string",
            "description": "When `algorithm` is \"ECDSA\", the name of the elliptic\ncurve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the\ndefault."
        },
        "Id": {
            "type": "string"
        },
        "PrivateKeyPem": {
            "type": "string"
        },
        "PublicKeyFingerprintMd5": {
            "type": "string"
        },
        "PublicKeyOpenssh": {
            "type": "string"
        },
        "PublicKeyPem": {
            "type": "string"
        },
        "RsaBits": {
            "type": "number",
            "description": "When `algorithm` is \"RSA\", the size of the generated\nRSA key in bits. Defaults to 2048."
        }
    },
    "additionalProperties": false,
    "required": [
        "Algorithm"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/PrivateKeyPem",
        "/properties/PublicKeyFingerprintMd5",
        "/properties/PublicKeyOpenssh",
        "/properties/PublicKeyPem"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/PrivateKeyPem"
    ]
}