{
    "typeName": "TF::Okta::InlineHook",
    "description": "Creates an inline hook.\n\nThis resource allows you to create and configure an inline hook.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/okta/TF-Okta-InlineHook/docs/README.md",
    "definitions": {
        "AuthDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "ChannelDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "HeadersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Auth": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/AuthDefinition"
            },
            "description": "Authentication required for inline hook request."
        },
        "Channel": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ChannelDefinition"
            },
            "description": "Details of the endpoint the inline hook will hit.\n- `version` - (Required) Version of the channel. The currently-supported version is `\"1.0.0\"`.\n- `uri` - (Required) The URI the hook will hit.\n- `type` - (Optional) The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n- `method` - (Optional) The request method to use. Default is `\"POST\"`."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The inline hook display name."
        },
        "Status": {
            "type": "string"
        },
        "Type": {
            "type": "string",
            "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n- `method` - (Optional) The request method to use. Default is `\"POST\"`."
        },
        "Version": {
            "type": "string",
            "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n- `uri` - (Required) The URI the hook will hit.\n- `type` - (Optional) The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n- `method` - (Optional) The request method to use. Default is `\"POST\"`."
        },
        "Headers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/HeadersDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Channel",
        "Name",
        "Type",
        "Version"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}