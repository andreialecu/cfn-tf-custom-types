{
    "typeName": "TF::Okta::AppOauth",
    "description": "Creates an OIDC Application.\n\nThis resource allows you to create and configure an OIDC Application.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/okta/TF-Okta-AppOauth/docs/README.md",
    "definitions": {
        "JwksDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "E": {
                    "type": "string"
                },
                "Kid": {
                    "type": "string"
                },
                "Kty": {
                    "type": "string"
                },
                "N": {
                    "type": "string"
                }
            },
            "required": [
                "Kid",
                "Kty"
            ]
        },
        "UsersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoKeyRotation": {
            "type": "boolean",
            "description": "Requested key rotation mode."
        },
        "AutoSubmitToolbar": {
            "type": "boolean",
            "description": "Display auto submit toolbar."
        },
        "ClientBasicSecret": {
            "type": "string",
            "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic."
        },
        "ClientId": {
            "type": "string",
            "description": "OAuth client ID. If set during creation, app is created with this id."
        },
        "ClientSecret": {
            "type": "string"
        },
        "ClientUri": {
            "type": "string",
            "description": "URI to a web page providing information about the client."
        },
        "ConsentMethod": {
            "type": "string",
            "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`."
        },
        "CustomClientId": {
            "type": "string"
        },
        "GrantTypes": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).\nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`."
        },
        "Groups": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The groups assigned to the application. It is recommended not to use this and instead use `okta_app_group_assignment`."
        },
        "HideIos": {
            "type": "boolean",
            "description": "Do not display application icon on mobile app."
        },
        "HideWeb": {
            "type": "boolean",
            "description": "Do not display application icon to users."
        },
        "Id": {
            "type": "string"
        },
        "ImplicitAssignment": {
            "type": "boolean",
            "description": "*Early Access Property*. Enables [Federation Broker Mode]( https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored."
        },
        "IssuerMode": {
            "type": "string",
            "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client."
        },
        "Label": {
            "type": "string",
            "description": "The Application's display name."
        },
        "LoginMode": {
            "type": "string",
            "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`."
        },
        "LoginScopes": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`."
        },
        "LoginUri": {
            "type": "string",
            "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`."
        },
        "LogoUri": {
            "type": "string",
            "description": "URI that references a logo for the client."
        },
        "Name": {
            "type": "string",
            "description": "Name of the claim that will be used in the token.\n- `value` - (Required) Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted."
        },
        "OmitSecret": {
            "type": "boolean",
            "description": "This tells the provider not to persist the application's secret to state. Your app will be recreated if this ever changes from true => false."
        },
        "PolicyUri": {
            "type": "string",
            "description": "URI to web page providing client policy document."
        },
        "PostLogoutRedirectUris": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of URIs for redirection after logout."
        },
        "Profile": {
            "type": "string",
            "description": "Custom JSON that represents an OAuth application's profile."
        },
        "RedirectUris": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service."
        },
        "ResponseTypes": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of OAuth 2.0 response type strings."
        },
        "SignOnMode": {
            "type": "string"
        },
        "Status": {
            "type": "string",
            "description": "The status of the application, by default, it is `\"ACTIVE\"`."
        },
        "TokenEndpointAuthMethod": {
            "type": "string",
            "description": "Requested authentication method for the token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`, `\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`."
        },
        "TosUri": {
            "type": "string",
            "description": "URI to web page providing client tos (terms of service)."
        },
        "Type": {
            "type": "string",
            "description": "Groups claim type. Valid values: `\"FILTER\"`, `\"EXPRESSION\"`.\n- `filter_type` - (Optional) Groups claim filter. Can only be set if type is `\"FILTER\"`. Valid values: `\"EQUALS\"`, `\"STARTS_WITH\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n- `name` - (Required) Name of the claim that will be used in the token.\n- `value` - (Required) Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted."
        },
        "Jwks": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/JwksDefinition"
            }
        },
        "Users": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/UsersDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Label",
        "Type"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ClientSecret",
        "/properties/Id",
        "/properties/Name",
        "/properties/SignOnMode"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/ClientBasicSecret",
        "/properties/ClientSecret"
    ]
}