{
    "typeName": "TF::Okta::PolicyMfaDefault",
    "description": "Configures default MFA Policy.\n\nThis resource allows you to configure default MFA Policy.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/okta/TF-Okta-PolicyMfaDefault/docs/README.md",
    "definitions": {
        "DuoDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "FidoU2fDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "FidoWebauthnDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "GoogleOtpDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "HotpDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaCallDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaEmailDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaOtpDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaPasswordDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaPushDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaQuestionDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "OktaSmsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "RsaTokenDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "SymantecVipDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        },
        "YubikeyTokenDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DefaultIncludedGroupId": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Duo": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DuoDefinition"
            },
            "description": "DUO [MFA policy settings](#mfa-settings)."
        },
        "FidoU2f": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FidoU2fDefinition"
            },
            "description": "Fido U2F [MFA policy settings](#mfa-settings)."
        },
        "FidoWebauthn": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/FidoWebauthnDefinition"
            },
            "description": "Fido Web Authn [MFA policy settings](#mfa-settings)."
        },
        "GoogleOtp": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/GoogleOtpDefinition"
            },
            "description": "Google OTP [MFA policy settings](#mfa-settings)."
        },
        "Hotp": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/HotpDefinition"
            },
            "description": "HMAC-based One-Time Password [MFA policy settings](#mfa-settings)."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "OktaCall": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaCallDefinition"
            },
            "description": "Okta Call [MFA policy settings](#mfa-settings)."
        },
        "OktaEmail": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaEmailDefinition"
            },
            "description": "Okta Email [MFA policy settings](#mfa-settings)."
        },
        "OktaOtp": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaOtpDefinition"
            },
            "description": "Okta OTP [MFA policy settings](#mfa-settings)."
        },
        "OktaPassword": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaPasswordDefinition"
            },
            "description": "Okta Password [MFA policy settings](#mfa-settings)."
        },
        "OktaPush": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaPushDefinition"
            },
            "description": "Okta Push [MFA policy settings](#mfa-settings)."
        },
        "OktaQuestion": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaQuestionDefinition"
            },
            "description": "Okta Question [MFA policy settings](#mfa-settings)."
        },
        "OktaSms": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OktaSmsDefinition"
            },
            "description": "Okta SMS [MFA policy settings](#mfa-settings)."
        },
        "Priority": {
            "type": "number"
        },
        "RsaToken": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RsaTokenDefinition"
            },
            "description": "RSA Token [MFA policy settings](#mfa-settings)."
        },
        "Status": {
            "type": "string"
        },
        "SymantecVip": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SymantecVipDefinition"
            },
            "description": "Symantec VIP [MFA policy settings](#mfa-settings)."
        },
        "YubikeyToken": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/YubikeyTokenDefinition"
            },
            "description": "Yubikey Token [MFA policy settings](#mfa-settings)."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/DefaultIncludedGroupId",
        "/properties/Description",
        "/properties/Id",
        "/properties/Name",
        "/properties/Priority",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}