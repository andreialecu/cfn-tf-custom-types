{
    "typeName": "TF::Okta::GroupMembership",
    "description": "Manage an individual instance of group membership.\n\nThis resource allows you to manage group membership for a given user and group at an individual level. This allows you\nto manage group membership in terraform without overriding other automatic membership operations performed by group\nrules and other non-managed actions.\n\nWhen using this with a `okta_user` resource, you should add a lifecycle ignore for group memberships to avoid conflicts\nin desired state.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/okta/TF-Okta-GroupMembership/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "GroupId": {
            "type": "string",
            "description": "The ID of the Okta Group."
        },
        "Id": {
            "type": "string"
        },
        "UserId": {
            "type": "string",
            "description": "The ID of the Okta User."
        }
    },
    "additionalProperties": false,
    "required": [
        "GroupId",
        "UserId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}