{
    "typeName": "TF::AVI::Availabilityzone",
    "description": "The AvailabilityZone resource allows the creation and management of Avi AvailabilityZone",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Availabilityzone/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CloudRef": {
            "type": "string",
            "description": "Availability zone belongs to cloud. It is a reference to an object of type cloud. Field introduced in 20.1.1."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Availabilty zone where vcenter list belongs to. Field introduced in 20.1.1."
        },
        "TenantRef": {
            "type": "string",
            "description": "Availabilityzone belongs to tenant. It is a reference to an object of type tenant. Field introduced in 20.1.1."
        },
        "Uuid": {
            "type": "string"
        },
        "VcenterRefs": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Group of vcenter list belong to availabilty zone. It is a reference to an object of type vcenterserver. Field introduced in 20.1.1. Minimum of 1 items required."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "VcenterRefs"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}