{
    "typeName": "TF::AVI::Ipaddrgroup",
    "description": "The IpAddrGroup resource allows the creation and management of Avi IpAddrGroup",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Ipaddrgroup/docs/README.md",
    "definitions": {
        "AddrsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "IpPortsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hostname": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Port": {
                    "type": "number"
                },
                "Ip": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/IpDefinition"
                    }
                }
            },
            "required": [
                "Port"
            ]
        },
        "MarkersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key"
            ]
        },
        "PrefixesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Mask": {
                    "type": "number"
                },
                "IpAddr": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/IpAddrDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "Mask"
            ]
        },
        "RangesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Begin": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/BeginDefinition"
                    },
                    "minItems": 1
                },
                "End": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/EndDefinition"
                    },
                    "minItems": 1
                }
            },
            "required": []
        },
        "IpDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "IpAddrDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "BeginDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "EndDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApicEpgName": {
            "type": "string"
        },
        "CountryCodes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Populate the ip address ranges from the geo database for this country."
        },
        "Description": {
            "type": "string",
            "description": "User defined description for the object."
        },
        "Id": {
            "type": "string"
        },
        "MarathonAppName": {
            "type": "string",
            "description": "Populate ip addresses from tasks of this marathon app."
        },
        "MarathonServicePort": {
            "type": "number",
            "description": "Task port associated with marathon service port. If marathon app has multiple service ports, this is required. Else, the first task port is used."
        },
        "Name": {
            "type": "string",
            "description": "Name of the ip address group."
        },
        "TenantRef": {
            "type": "string",
            "description": "It is a reference to an object of type tenant."
        },
        "Uuid": {
            "type": "string"
        },
        "Addrs": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AddrsDefinition"
            }
        },
        "IpPorts": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpPortsDefinition"
            }
        },
        "Markers": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MarkersDefinition"
            }
        },
        "Prefixes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PrefixesDefinition"
            }
        },
        "Ranges": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RangesDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}