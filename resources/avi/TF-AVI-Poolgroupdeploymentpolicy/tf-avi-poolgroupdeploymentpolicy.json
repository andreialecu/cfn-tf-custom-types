{
    "typeName": "TF::AVI::Poolgroupdeploymentpolicy",
    "description": "The PoolGroupDeploymentPolicy resource allows the creation and management of Avi PoolGroupDeploymentPolicy",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Poolgroupdeploymentpolicy/docs/README.md",
    "definitions": {
        "MarkersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key"
            ]
        },
        "RulesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MetricId": {
                    "type": "string"
                },
                "Operator": {
                    "type": "string"
                },
                "Threshold": {
                    "type": "number"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoDisableOldProdPools": {
            "type": "boolean",
            "description": "It will automatically disable old production pools once there is a new production candidate."
        },
        "Description": {
            "type": "string",
            "description": "User defined description for the object."
        },
        "EvaluationDuration": {
            "type": "number",
            "description": "Duration of evaluation period for automatic deployment. Allowed values are 60-86400. Unit is sec."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the pool group deployment policy."
        },
        "Scheme": {
            "type": "string",
            "description": "Deployment scheme. Enum options - BLUE_GREEN, CANARY."
        },
        "TargetTestTrafficRatio": {
            "type": "number",
            "description": "Target traffic ratio before pool is made production. Allowed values are 1-100. Unit is ratio."
        },
        "TenantRef": {
            "type": "string",
            "description": "It is a reference to an object of type tenant."
        },
        "TestTrafficRatioRampup": {
            "type": "number",
            "description": "Ratio of the traffic that is sent to the pool under test. Test ratio of 100 means blue green. Allowed values are 1-100."
        },
        "Uuid": {
            "type": "string"
        },
        "WebhookRef": {
            "type": "string",
            "description": "Webhook configured with url that avi controller will pass back information about pool group, old and new pool information and current deployment rule results. It is a reference to an object of type webhook. Field introduced in 17.1.1."
        },
        "Markers": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MarkersDefinition"
            }
        },
        "Rules": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RulesDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}