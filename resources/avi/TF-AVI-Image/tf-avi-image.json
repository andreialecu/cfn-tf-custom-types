{
    "typeName": "TF::AVI::Image",
    "description": "The Image resource allows the creation and management of Avi Image",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Image/docs/README.md",
    "definitions": {
        "CloudInfoValuesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CloudName": {
                    "type": "string"
                },
                "CloudDataValues": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CloudDataValuesDefinition"
                    }
                }
            },
            "required": []
        },
        "ControllerInfoDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hash": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "Build": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/BuildDefinition"
                    }
                },
                "Patch": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/PatchDefinition"
                    }
                }
            },
            "required": []
        },
        "MigrationsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ApiVersion": {
                    "type": "string"
                },
                "ControllerHostMinFreeDiskSize": {
                    "type": "number"
                },
                "ControllerMinCores": {
                    "type": "number"
                },
                "ControllerMinFreeDiskSize": {
                    "type": "number"
                },
                "ControllerMinMemory": {
                    "type": "number"
                },
                "ControllerMinTotalDisk": {
                    "type": "number"
                },
                "MaxActiveVersions": {
                    "type": "number"
                },
                "RollbackControllerDiskSpace": {
                    "type": "number"
                },
                "RollbackSeDiskSpace": {
                    "type": "number"
                },
                "SeHostMinFreeDiskSize": {
                    "type": "number"
                },
                "SeMinCores": {
                    "type": "number"
                },
                "SeMinFreeDiskSize": {
                    "type": "number"
                },
                "SeMinMemory": {
                    "type": "number"
                },
                "SeMinTotalDisk": {
                    "type": "number"
                },
                "Versions": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "SeInfoDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hash": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "Build": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/BuildDefinition"
                    }
                },
                "Patch": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/PatchDefinition"
                    }
                }
            },
            "required": []
        },
        "CloudDataValuesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "BuildDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BuildNo": {
                    "type": "number"
                },
                "Date": {
                    "type": "string"
                },
                "MinVersion": {
                    "type": "string"
                },
                "PatchVersion": {
                    "type": "string"
                },
                "Product": {
                    "type": "string"
                },
                "ProductName": {
                    "type": "string"
                },
                "Tag": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": []
        },
        "PatchDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PatchType": {
                    "type": "string"
                },
                "Reboot": {
                    "type": "boolean"
                },
                "RebootList": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/RebootListDefinition"
                    }
                }
            },
            "required": []
        },
        "RebootListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PatchVersion": {
                    "type": "string"
                },
                "Reboot": {
                    "type": "boolean"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ControllerPatchName": {
            "type": "string",
            "description": "Mandatory controller patch name that is applied along with this base image. Field introduced in 18.2.10, 20.1.1."
        },
        "ControllerPatchUuid": {
            "type": "string",
            "description": "It references the controller-patch associated with the uber image. Field introduced in 18.2.8, 20.1.1."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Name of the image. Field introduced in 18.2.6."
        },
        "SePatchName": {
            "type": "string",
            "description": "Mandatory serviceengine patch name that is applied along with this base image. Field introduced in 18.2.10, 20.1.1."
        },
        "SePatchUuid": {
            "type": "string",
            "description": "It references the service engine patch associated with the uber image. Field introduced in 18.2.8, 20.1.1."
        },
        "Status": {
            "type": "string",
            "description": "Status to check if the image is present. Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO, SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN, SYSERR_NOT_UPGRADING, SYSERR_PENDING, SYSERR_EVENT_GEN_FAILURE, SYSERR_CONFIG_PARAM_MISSING, SYSERR_RANGE, SYSERR_BAD_REQUEST... Field introduced in 18.2.6."
        },
        "TenantRef": {
            "type": "string",
            "description": "Tenant that this object belongs to. It is a reference to an object of type tenant. Field introduced in 18.2.6."
        },
        "Type": {
            "type": "string",
            "description": "Type of the image patch/system. Enum options - IMAGE_TYPE_PATCH, IMAGE_TYPE_SYSTEM, IMAGE_TYPE_MUST_CHECK. Field introduced in 18.2.6."
        },
        "UberBundle": {
            "type": "boolean",
            "description": "Status to check if the image is an uber bundle. Field introduced in 18.2.8, 20.1.1."
        },
        "Uuid": {
            "type": "string"
        },
        "CloudInfoValues": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CloudInfoValuesDefinition"
            }
        },
        "ControllerInfo": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/ControllerInfoDefinition"
            }
        },
        "Migrations": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MigrationsDefinition"
            }
        },
        "SeInfo": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SeInfoDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}