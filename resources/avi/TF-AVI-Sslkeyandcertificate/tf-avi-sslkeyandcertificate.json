{
    "typeName": "TF::AVI::Sslkeyandcertificate",
    "description": "The SSLKeyAndCertificate resource allows the creation and management of Avi SSLKeyAndCertificate",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Sslkeyandcertificate/docs/README.md",
    "definitions": {
        "CaCertsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CaRef": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Certificate": {
                    "type": "string"
                },
                "CertificateSigningRequest": {
                    "type": "string"
                },
                "ChainVerified": {
                    "type": "boolean"
                },
                "DaysUntilExpire": {
                    "type": "number"
                },
                "ExpiryStatus": {
                    "type": "string"
                },
                "Fingerprint": {
                    "type": "string"
                },
                "NotAfter": {
                    "type": "string"
                },
                "NotBefore": {
                    "type": "string"
                },
                "PublicKey": {
                    "type": "string"
                },
                "SelfSigned": {
                    "type": "boolean"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "Signature": {
                    "type": "string"
                },
                "SignatureAlgorithm": {
                    "type": "string"
                },
                "SubjectAltNames": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Text": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                },
                "Issuer": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/IssuerDefinition"
                    }
                },
                "KeyParams": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/KeyParamsDefinition"
                    }
                },
                "Subject": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/SubjectDefinition"
                    }
                }
            },
            "required": []
        },
        "DynamicParamsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IsDynamic": {
                    "type": "boolean"
                },
                "IsSensitive": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ]
        },
        "KeyParamsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "type": "string"
                },
                "EcParams": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/EcParamsDefinition"
                    }
                },
                "RsaParams": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/RsaParamsDefinition"
                    }
                }
            },
            "required": [
                "Algorithm"
            ]
        },
        "MarkersDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Key"
            ]
        },
        "OcspConfigDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FailedOcspJobsRetryInterval": {
                    "type": "number"
                },
                "MaxTries": {
                    "type": "number"
                },
                "OcspReqInterval": {
                    "type": "number"
                },
                "OcspRespTimeout": {
                    "type": "number"
                },
                "ResponderUrlLists": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "UrlAction": {
                    "type": "string"
                }
            },
            "required": []
        },
        "IssuerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CommonName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "DistinguishedName": {
                    "type": "string"
                },
                "EmailAddress": {
                    "type": "string"
                },
                "Locality": {
                    "type": "string"
                },
                "Organization": {
                    "type": "string"
                },
                "OrganizationUnit": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                }
            },
            "required": []
        },
        "SubjectDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CommonName": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "DistinguishedName": {
                    "type": "string"
                },
                "EmailAddress": {
                    "type": "string"
                },
                "Locality": {
                    "type": "string"
                },
                "Organization": {
                    "type": "string"
                },
                "OrganizationUnit": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                }
            },
            "required": []
        },
        "EcParamsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Curve": {
                    "type": "string"
                }
            },
            "required": []
        },
        "RsaParamsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Exponent": {
                    "type": "number"
                },
                "KeySize": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CertificateBase64": {
            "type": "boolean",
            "description": "States if the certificate is base64 encoded."
        },
        "CertificateManagementProfileRef": {
            "type": "string",
            "description": "It is a reference to an object of type certificatemanagementprofile."
        },
        "CreatedBy": {
            "type": "string",
            "description": "Creator name."
        },
        "EnableOcspStapling": {
            "type": "boolean",
            "description": "Enables ocsp stapling. Field introduced in 20.1.1. Allowed in basic(allowed values- false) edition, essentials(allowed values- false) edition, enterprise edition."
        },
        "EnckeyBase64": {
            "type": "string",
            "description": "Encrypted private key corresponding to the private key (e.g. Those generated by an hsm such as thales nshield)."
        },
        "EnckeyName": {
            "type": "string",
            "description": "Name of the encrypted private key (e.g. Those generated by an hsm such as thales nshield)."
        },
        "Format": {
            "type": "string",
            "description": "Format of the key/certificate file. Enum options - SSL_PEM, SSL_PKCS12."
        },
        "HardwaresecuritymodulegroupRef": {
            "type": "string",
            "description": "It is a reference to an object of type hardwaresecuritymodulegroup."
        },
        "Id": {
            "type": "string"
        },
        "Key": {
            "type": "string",
            "description": "Private key."
        },
        "KeyBase64": {
            "type": "boolean",
            "description": "States if the private key is base64 encoded."
        },
        "KeyPassphrase": {
            "type": "string",
            "description": "Passphrase used to encrypt the private key."
        },
        "Name": {
            "type": "string",
            "description": "Name of the object."
        },
        "Status": {
            "type": "string",
            "description": "Enum options - ssl_certificate_finished, ssl_certificate_pending."
        },
        "TenantRef": {
            "type": "string",
            "description": "It is a reference to an object of type tenant."
        },
        "Type": {
            "type": "string",
            "description": "Enum options - ssl_certificate_type_virtualservice, ssl_certificate_type_system, ssl_certificate_type_ca."
        },
        "Uuid": {
            "type": "string"
        },
        "CaCerts": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CaCertsDefinition"
            }
        },
        "Certificate": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/CertificateDefinition"
            },
            "minItems": 1
        },
        "DynamicParams": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DynamicParamsDefinition"
            }
        },
        "KeyParams": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/KeyParamsDefinition"
            }
        },
        "Markers": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MarkersDefinition"
            }
        },
        "OcspConfig": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OcspConfigDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/properties/Key",
        "/properties/KeyPassphrase"
    ]
}