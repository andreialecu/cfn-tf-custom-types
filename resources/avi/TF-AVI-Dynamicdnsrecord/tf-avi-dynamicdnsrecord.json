{
    "typeName": "TF::AVI::Dynamicdnsrecord",
    "description": "The DynamicDnsRecord resource allows the creation and management of Avi DynamicDnsRecord",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/avi/TF-AVI-Dynamicdnsrecord/docs/README.md",
    "definitions": {
        "CnameDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cname": {
                    "type": "string"
                }
            },
            "required": [
                "Cname"
            ]
        },
        "Ip6AddressDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "IpAddressDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Addr": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Addr",
                "Type"
            ]
        },
        "MxRecordsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Host": {
                    "type": "string"
                },
                "Priority": {
                    "type": "number"
                }
            },
            "required": [
                "Host",
                "Priority"
            ]
        },
        "NsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Nsname": {
                    "type": "string"
                },
                "Ip6Address": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/Ip6AddressDefinition"
                    }
                },
                "IpAddress": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/IpAddressDefinition"
                    }
                }
            },
            "required": [
                "Nsname"
            ]
        },
        "ServiceLocatorsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Port": {
                    "type": "number"
                },
                "Priority": {
                    "type": "number"
                },
                "Target": {
                    "type": "string"
                },
                "Weight": {
                    "type": "number"
                }
            },
            "required": [
                "Port"
            ]
        },
        "TxtRecordsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "TextStr": {
                    "type": "string"
                }
            },
            "required": [
                "TextStr"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Algorithm": {
            "type": "string",
            "description": "Specifies the algorithm to pick the ip address(es) to be returned,when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is round-robin. Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH. Field introduced in 20.1.3."
        },
        "Delegated": {
            "type": "boolean",
            "description": "Configured fqdns are delegated domains (i.e. They represent a zone cut). Field introduced in 20.1.3."
        },
        "Description": {
            "type": "string",
            "description": "Details of dns record. Field introduced in 20.1.3."
        },
        "DnsVsUuid": {
            "type": "string",
            "description": "Uuid of the dns vs. Field introduced in 20.1.3."
        },
        "Fqdn": {
            "type": "string",
            "description": "Fully qualified domain name. Field introduced in 20.1.3."
        },
        "Id": {
            "type": "string"
        },
        "Metadata": {
            "type": "string",
            "description": "Internal metadata for the dns record. Field introduced in 20.1.3."
        },
        "Name": {
            "type": "string",
            "description": "Dynamicdnsrecord name, needed for a top level uuid protobuf, for display in shell. Field introduced in 20.1.3."
        },
        "NumRecordsInResponse": {
            "type": "number",
            "description": "Specifies the number of records returned by the dns service.enter 0 to return all records. Default is 0. Allowed values are 0-20. Special values are 0- 'return all records'. Field introduced in 20.1.3."
        },
        "TenantRef": {
            "type": "string",
            "description": "Tenant_uuid from dns vs's tenant_uuid. It is a reference to an object of type tenant. Field introduced in 20.1.3."
        },
        "Ttl": {
            "type": "number",
            "description": "Time to live for this dns record. Field introduced in 20.1.3."
        },
        "Type": {
            "type": "string",
            "description": "Dns record type. Enum options - DNS_RECORD_OTHER, DNS_RECORD_A, DNS_RECORD_NS, DNS_RECORD_CNAME, DNS_RECORD_SOA, DNS_RECORD_PTR, DNS_RECORD_HINFO, DNS_RECORD_MX, DNS_RECORD_TXT, DNS_RECORD_RP, DNS_RECORD_DNSKEY, DNS_RECORD_AAAA, DNS_RECORD_SRV, DNS_RECORD_OPT, DNS_RECORD_RRSIG, DNS_RECORD_AXFR, DNS_RECORD_ANY. Field introduced in 20.1.3."
        },
        "Uuid": {
            "type": "string"
        },
        "WildcardMatch": {
            "type": "boolean",
            "description": "Enable wild-card match of fqdn  if an exact match is not found in the dns table, the longest match is chosen by wild-carding the fqdn in the dns request. Default is false. Field introduced in 20.1.3."
        },
        "Cname": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/CnameDefinition"
            }
        },
        "Ip6Address": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Ip6AddressDefinition"
            }
        },
        "IpAddress": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpAddressDefinition"
            }
        },
        "MxRecords": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MxRecordsDefinition"
            }
        },
        "Ns": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NsDefinition"
            }
        },
        "ServiceLocators": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceLocatorsDefinition"
            }
        },
        "TxtRecords": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TxtRecordsDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}