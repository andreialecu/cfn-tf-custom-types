{
    "typeName": "TF::Thunder::SlbTemplateDiameter",
    "description": "`thunder_slb_template_diameter` Provides details about thunder slb template diameter",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/thunder/TF-Thunder-SlbTemplateDiameter/docs/README.md",
    "definitions": {
        "AvpListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Avp": {
                    "type": "number"
                },
                "Int32": {
                    "type": "number"
                },
                "Int64": {
                    "type": "number"
                },
                "Mandatory": {
                    "type": "number"
                },
                "String": {
                    "type": "string"
                }
            },
            "required": []
        },
        "MessageCodeListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MessageCode": {
                    "type": "number"
                }
            },
            "required": []
        },
        "OriginHostDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "OriginHostName": {
                    "type": "string"
                },
                "Uuid": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AvpCode": {
            "type": "number",
            "description": "avp code."
        },
        "AvpString": {
            "type": "string",
            "description": "pattern to be matched in the avp string name, max length 127 bytes."
        },
        "CustomizeCea": {
            "type": "number",
            "description": "customizing cea response."
        },
        "DwrTime": {
            "type": "number",
            "description": "dwr health-check timer interval (in 100 milli second unit, default is 100, 0 means unset this option)."
        },
        "DwrUpRetry": {
            "type": "number",
            "description": "number of successful dwr health-check before declaring target up."
        },
        "ForwardToLatestServer": {
            "type": "number",
            "description": "Forward client message to the latest server that sends message with the same session id."
        },
        "ForwardUnknownSessionId": {
            "type": "number",
            "description": "Forward server message even it has unknown session id."
        },
        "Id": {
            "type": "string"
        },
        "IdleTimeout": {
            "type": "number",
            "description": "user sesison idle timeout (in minutes, default is 5)."
        },
        "LoadBalanceOnSessionId": {
            "type": "number",
            "description": "Load balance based on the session id."
        },
        "MultipleOriginHost": {
            "type": "number",
            "description": "allowing multiple origin-host to a single server."
        },
        "Name": {
            "type": "string",
            "description": "diameter template Name."
        },
        "OriginRealm": {
            "type": "string",
            "description": "origin-realm name avp."
        },
        "ProductName": {
            "type": "string",
            "description": "product name avp."
        },
        "ServiceGroupName": {
            "type": "string",
            "description": "service group name, this is the service group that the message needs to be copied to."
        },
        "SessionAge": {
            "type": "number",
            "description": "user session age allowed (default 10), this is not idle-time (in minutes)."
        },
        "TerminateOnCcaT": {
            "type": "number",
            "description": "remove diameter session when receiving CCA-T message."
        },
        "UserTag": {
            "type": "string",
            "description": "Customized tag."
        },
        "Uuid": {
            "type": "string",
            "description": "uuid of the object."
        },
        "VendorId": {
            "type": "number",
            "description": "vendor-id avp (Vendon Id)."
        },
        "AvpList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AvpListDefinition"
            }
        },
        "MessageCodeList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MessageCodeListDefinition"
            }
        },
        "OriginHost": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/OriginHostDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}