{
    "typeName": "TF::Thunder::SlbTemplateClientSsl",
    "description": "`thunder_slb_template_client_ssl` Provides details about thunder slb template client ssl",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/thunder/TF-Thunder-SlbTemplateClientSsl/docs/README.md",
    "definitions": {
        "BypassCertIssuerMultiClassListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BypassCertIssuerMultiClassListName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "BypassCertSanMultiClassListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BypassCertSanMultiClassListName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "BypassCertSubjectMultiClassListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BypassCertSubjectMultiClassListName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CaCertsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CaCert": {
                    "type": "string"
                },
                "CaShared": {
                    "type": "number"
                },
                "ClientOcsp": {
                    "type": "number"
                },
                "ClientOcspSg": {
                    "type": "string"
                },
                "ClientOcspSrvr": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateIssuerContainsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateIssuerContains": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateIssuerEndsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateIssuerEndsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateIssuerEqualsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateIssuerEquals": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateIssuerStartsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateIssuerStarts": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cert": {
                    "type": "string"
                },
                "ChainCert": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "KeyEncrypted": {
                    "type": "string"
                },
                "Passphrase": {
                    "type": "string"
                },
                "Shared": {
                    "type": "number"
                },
                "Uuid": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSanContainsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSanContains": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSanEndsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSanEndsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSanEqualsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSanEquals": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSanStartsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSanStarts": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSubjectContainsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSubjectContains": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSubjectEndsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSubjectEndsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSubjectEqualsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSubjectEquals": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CertificateSubjectStartsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateSubjectStarts": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CipherWithoutPrioListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CipherWoPrio": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ClientAuthContainsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientAuthContains": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ClientAuthEndsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientAuthEndsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ClientAuthEqualsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientAuthEquals": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ClientAuthStartsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientAuthStartsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ContainsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Contains": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CrlCertsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Crl": {
                    "type": "string"
                },
                "CrlShared": {
                    "type": "number"
                }
            },
            "required": []
        },
        "EcListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Ec": {
                    "type": "string"
                }
            },
            "required": []
        },
        "EndsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "EqualsListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Equals": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ExceptionWebCategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ExceptionAbortion": {
                    "type": "number"
                },
                "ExceptionAdultAndPornography": {
                    "type": "number"
                },
                "ExceptionAlcoholAndTobacco": {
                    "type": "number"
                },
                "ExceptionAuctions": {
                    "type": "number"
                },
                "ExceptionBotNets": {
                    "type": "number"
                },
                "ExceptionBusinessAndEconomy": {
                    "type": "number"
                },
                "ExceptionCdns": {
                    "type": "number"
                },
                "ExceptionCheating": {
                    "type": "number"
                },
                "ExceptionComputerAndInternetInfo": {
                    "type": "number"
                },
                "ExceptionComputerAndInternetSecurity": {
                    "type": "number"
                },
                "ExceptionConfirmedSpamSources": {
                    "type": "number"
                },
                "ExceptionCultAndOccult": {
                    "type": "number"
                },
                "ExceptionDating": {
                    "type": "number"
                },
                "ExceptionDeadSites": {
                    "type": "number"
                },
                "ExceptionDrugs": {
                    "type": "number"
                },
                "ExceptionDynamicComment": {
                    "type": "number"
                },
                "ExceptionEducationalInstitutions": {
                    "type": "number"
                },
                "ExceptionEntertainmentAndArts": {
                    "type": "number"
                },
                "ExceptionFashionAndBeauty": {
                    "type": "number"
                },
                "ExceptionFinancialServices": {
                    "type": "number"
                },
                "ExceptionFoodAndDining": {
                    "type": "number"
                },
                "ExceptionGambling": {
                    "type": "number"
                },
                "ExceptionGames": {
                    "type": "number"
                },
                "ExceptionGovernment": {
                    "type": "number"
                },
                "ExceptionGross": {
                    "type": "number"
                },
                "ExceptionHacking": {
                    "type": "number"
                },
                "ExceptionHateAndRacism": {
                    "type": "number"
                },
                "ExceptionHealthAndMedicine": {
                    "type": "number"
                },
                "ExceptionHomeAndGarden": {
                    "type": "number"
                },
                "ExceptionHuntingAndFishing": {
                    "type": "number"
                },
                "ExceptionIllegal": {
                    "type": "number"
                },
                "ExceptionImageAndVideoSearch": {
                    "type": "number"
                },
                "ExceptionInternetCommunications": {
                    "type": "number"
                },
                "ExceptionInternetPortals": {
                    "type": "number"
                },
                "ExceptionJobSearch": {
                    "type": "number"
                },
                "ExceptionKeyloggersAndMonitoring": {
                    "type": "number"
                },
                "ExceptionKids": {
                    "type": "number"
                },
                "ExceptionLegal": {
                    "type": "number"
                },
                "ExceptionLocalInformation": {
                    "type": "number"
                },
                "ExceptionMalwareSites": {
                    "type": "number"
                },
                "ExceptionMarijuana": {
                    "type": "number"
                },
                "ExceptionMilitary": {
                    "type": "number"
                },
                "ExceptionMotorVehicles": {
                    "type": "number"
                },
                "ExceptionMusic": {
                    "type": "number"
                },
                "ExceptionNewsAndMedia": {
                    "type": "number"
                },
                "ExceptionNudity": {
                    "type": "number"
                },
                "ExceptionOnlineGreetingCards": {
                    "type": "number"
                },
                "ExceptionOpenHttpProxies": {
                    "type": "number"
                },
                "ExceptionParkedDomains": {
                    "type": "number"
                },
                "ExceptionPayToSurf": {
                    "type": "number"
                },
                "ExceptionPeerToPeer": {
                    "type": "number"
                },
                "ExceptionPersonalSitesAndBlogs": {
                    "type": "number"
                },
                "ExceptionPersonalStorage": {
                    "type": "number"
                },
                "ExceptionPhilosophyAndPolitics": {
                    "type": "number"
                },
                "ExceptionPhishingAndOtherFraud": {
                    "type": "number"
                },
                "ExceptionPrivateIpAddresses": {
                    "type": "number"
                },
                "ExceptionProxyAvoidAndAnonymizers": {
                    "type": "number"
                },
                "ExceptionQuestionable": {
                    "type": "number"
                },
                "ExceptionRealEstate": {
                    "type": "number"
                },
                "ExceptionRecreationAndHobbies": {
                    "type": "number"
                },
                "ExceptionReferenceAndResearch": {
                    "type": "number"
                },
                "ExceptionReligion": {
                    "type": "number"
                },
                "ExceptionSearchEngines": {
                    "type": "number"
                },
                "ExceptionSexEducation": {
                    "type": "number"
                },
                "ExceptionSharewareAndFreeware": {
                    "type": "number"
                },
                "ExceptionShopping": {
                    "type": "number"
                },
                "ExceptionSocialNetwork": {
                    "type": "number"
                },
                "ExceptionSociety": {
                    "type": "number"
                },
                "ExceptionSpamUrls": {
                    "type": "number"
                },
                "ExceptionSports": {
                    "type": "number"
                },
                "ExceptionSpywareAndAdware": {
                    "type": "number"
                },
                "ExceptionStockAdviceAndTools": {
                    "type": "number"
                },
                "ExceptionStreamingMedia": {
                    "type": "number"
                },
                "ExceptionSwimsuitsAndIntimateApparel": {
                    "type": "number"
                },
                "ExceptionTrainingAndTools": {
                    "type": "number"
                },
                "ExceptionTranslation": {
                    "type": "number"
                },
                "ExceptionTravel": {
                    "type": "number"
                },
                "ExceptionUncategorized": {
                    "type": "number"
                },
                "ExceptionUnconfirmedSpamSources": {
                    "type": "number"
                },
                "ExceptionViolence": {
                    "type": "number"
                },
                "ExceptionWeapons": {
                    "type": "number"
                },
                "ExceptionWebAdvertisements": {
                    "type": "number"
                },
                "ExceptionWebBasedEmail": {
                    "type": "number"
                },
                "ExceptionWebHostingSites": {
                    "type": "number"
                }
            },
            "required": []
        },
        "ExceptionWebReputationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ExceptionLowRisk": {
                    "type": "number"
                },
                "ExceptionMalicious": {
                    "type": "number"
                },
                "ExceptionModerateRisk": {
                    "type": "number"
                },
                "ExceptionSuspicious": {
                    "type": "number"
                },
                "ExceptionThreshold": {
                    "type": "number"
                },
                "ExceptionTrustworthy": {
                    "type": "number"
                }
            },
            "required": []
        },
        "ForwardProxyTrustedCaListsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ForwardProxyTrustedCa": {
                    "type": "string"
                },
                "FpTrustedCaShared": {
                    "type": "number"
                }
            },
            "required": []
        },
        "MultiClassListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MultiClistName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ReqCaListsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientCertReqCaShared": {
                    "type": "number"
                },
                "ClientCertificateRequestCa": {
                    "type": "string"
                }
            },
            "required": []
        },
        "ServerNameListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ServerCert": {
                    "type": "string"
                },
                "ServerCertRegex": {
                    "type": "string"
                },
                "ServerChain": {
                    "type": "string"
                },
                "ServerChainRegex": {
                    "type": "string"
                },
                "ServerEncrypted": {
                    "type": "string"
                },
                "ServerEncryptedRegex": {
                    "type": "string"
                },
                "ServerKey": {
                    "type": "string"
                },
                "ServerKeyRegex": {
                    "type": "string"
                },
                "ServerName": {
                    "type": "string"
                },
                "ServerNameAlternate": {
                    "type": "number"
                },
                "ServerNameRegex": {
                    "type": "string"
                },
                "ServerNameRegexAlternate": {
                    "type": "number"
                },
                "ServerPassphrase": {
                    "type": "string"
                },
                "ServerPassphraseRegex": {
                    "type": "string"
                },
                "ServerShared": {
                    "type": "number"
                },
                "ServerSharedRegex": {
                    "type": "number"
                }
            },
            "required": []
        },
        "StartsWithListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "StartsWith": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WebCategoryDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Abortion": {
                    "type": "number"
                },
                "AdultAndPornography": {
                    "type": "number"
                },
                "AlcoholAndTobacco": {
                    "type": "number"
                },
                "Auctions": {
                    "type": "number"
                },
                "BotNets": {
                    "type": "number"
                },
                "BusinessAndEconomy": {
                    "type": "number"
                },
                "Cdns": {
                    "type": "number"
                },
                "Cheating": {
                    "type": "number"
                },
                "ComputerAndInternetInfo": {
                    "type": "number"
                },
                "ComputerAndInternetSecurity": {
                    "type": "number"
                },
                "ConfirmedSpamSources": {
                    "type": "number"
                },
                "CultAndOccult": {
                    "type": "number"
                },
                "Dating": {
                    "type": "number"
                },
                "DeadSites": {
                    "type": "number"
                },
                "Drugs": {
                    "type": "number"
                },
                "DynamicComment": {
                    "type": "number"
                },
                "EducationalInstitutions": {
                    "type": "number"
                },
                "EntertainmentAndArts": {
                    "type": "number"
                },
                "FashionAndBeauty": {
                    "type": "number"
                },
                "FinancialServices": {
                    "type": "number"
                },
                "FoodAndDining": {
                    "type": "number"
                },
                "Gambling": {
                    "type": "number"
                },
                "Games": {
                    "type": "number"
                },
                "Government": {
                    "type": "number"
                },
                "Gross": {
                    "type": "number"
                },
                "Hacking": {
                    "type": "number"
                },
                "HateAndRacism": {
                    "type": "number"
                },
                "HealthAndMedicine": {
                    "type": "number"
                },
                "HomeAndGarden": {
                    "type": "number"
                },
                "HuntingAndFishing": {
                    "type": "number"
                },
                "Illegal": {
                    "type": "number"
                },
                "ImageAndVideoSearch": {
                    "type": "number"
                },
                "InternetCommunications": {
                    "type": "number"
                },
                "InternetPortals": {
                    "type": "number"
                },
                "JobSearch": {
                    "type": "number"
                },
                "KeyloggersAndMonitoring": {
                    "type": "number"
                },
                "Kids": {
                    "type": "number"
                },
                "Legal": {
                    "type": "number"
                },
                "LocalInformation": {
                    "type": "number"
                },
                "MalwareSites": {
                    "type": "number"
                },
                "Marijuana": {
                    "type": "number"
                },
                "Military": {
                    "type": "number"
                },
                "MotorVehicles": {
                    "type": "number"
                },
                "Music": {
                    "type": "number"
                },
                "NewsAndMedia": {
                    "type": "number"
                },
                "Nudity": {
                    "type": "number"
                },
                "OnlineGreetingCards": {
                    "type": "number"
                },
                "OpenHttpProxies": {
                    "type": "number"
                },
                "ParkedDomains": {
                    "type": "number"
                },
                "PayToSurf": {
                    "type": "number"
                },
                "PeerToPeer": {
                    "type": "number"
                },
                "PersonalSitesAndBlogs": {
                    "type": "number"
                },
                "PersonalStorage": {
                    "type": "number"
                },
                "PhilosophyAndPolitics": {
                    "type": "number"
                },
                "PhishingAndOtherFraud": {
                    "type": "number"
                },
                "PrivateIpAddresses": {
                    "type": "number"
                },
                "ProxyAvoidAndAnonymizers": {
                    "type": "number"
                },
                "Questionable": {
                    "type": "number"
                },
                "RealEstate": {
                    "type": "number"
                },
                "RecreationAndHobbies": {
                    "type": "number"
                },
                "ReferenceAndResearch": {
                    "type": "number"
                },
                "Religion": {
                    "type": "number"
                },
                "SearchEngines": {
                    "type": "number"
                },
                "SexEducation": {
                    "type": "number"
                },
                "SharewareAndFreeware": {
                    "type": "number"
                },
                "Shopping": {
                    "type": "number"
                },
                "SocialNetwork": {
                    "type": "number"
                },
                "Society": {
                    "type": "number"
                },
                "SpamUrls": {
                    "type": "number"
                },
                "Sports": {
                    "type": "number"
                },
                "SpywareAndAdware": {
                    "type": "number"
                },
                "StockAdviceAndTools": {
                    "type": "number"
                },
                "StreamingMedia": {
                    "type": "number"
                },
                "SwimsuitsAndIntimateApparel": {
                    "type": "number"
                },
                "TrainingAndTools": {
                    "type": "number"
                },
                "Translation": {
                    "type": "number"
                },
                "Travel": {
                    "type": "number"
                },
                "Uncategorized": {
                    "type": "number"
                },
                "UnconfirmedSpamSources": {
                    "type": "number"
                },
                "Violence": {
                    "type": "number"
                },
                "Weapons": {
                    "type": "number"
                },
                "WebAdvertisements": {
                    "type": "number"
                },
                "WebBasedEmail": {
                    "type": "number"
                },
                "WebHostingSites": {
                    "type": "number"
                }
            },
            "required": []
        },
        "WebReputationDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BypassLowRisk": {
                    "type": "number"
                },
                "BypassMalicious": {
                    "type": "number"
                },
                "BypassModerateRisk": {
                    "type": "number"
                },
                "BypassSuspicious": {
                    "type": "number"
                },
                "BypassThreshold": {
                    "type": "number"
                },
                "BypassTrustworthy": {
                    "type": "number"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdGroupList": {
            "type": "string",
            "description": "Forward proxy bypass if ad-group matches class-list."
        },
        "AlertType": {
            "type": "string",
            "description": "\u2018fatal\u2019: Log fatal alerts;."
        },
        "AuthSg": {
            "type": "string",
            "description": "Specify authorization LDAP service group."
        },
        "AuthSgDn": {
            "type": "number",
            "description": "Use Subject DN as LDAP search base DN."
        },
        "AuthSgFilter": {
            "type": "string",
            "description": "Specify LDAP search filter."
        },
        "AuthUsername": {
            "type": "string",
            "description": "Specify the Username Field in the Client Certificate(If multi-fields are specificed, prior one has higher priority)."
        },
        "AuthUsernameAttribute": {
            "type": "string",
            "description": "Specify attribute name of username for client SSL authorization."
        },
        "AuthenName": {
            "type": "string",
            "description": "Specify authorization LDAP server name."
        },
        "Authorization": {
            "type": "number",
            "description": "Specify LDAP server for client SSL authorizaiton."
        },
        "BypassCertIssuerClassListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "BypassCertSanClassListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "BypassCertSubjectClassListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "CachePersistenceListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "CaseInsensitive": {
            "type": "number",
            "description": "Case insensitive forward proxy bypass."
        },
        "Cert": {
            "type": "string"
        },
        "CertAltPartitionShared": {
            "type": "number"
        },
        "CertAlternate": {
            "type": "string",
            "description": "Specify the second certificate (Certificate Name)."
        },
        "CertRevokeAction": {
            "type": "string",
            "description": "\u2018bypass\u2019: bypass SSLi processing; \u2018continue\u2019: continue the connection; \u2018drop\u2019: close the connection;."
        },
        "CertSharedStr": {
            "type": "string",
            "description": "Certificate Name."
        },
        "CertUnknownAction": {
            "type": "string",
            "description": "\u2018bypass\u2019: bypass SSLi processing; \u2018continue\u2019: continue the connection; \u2018drop\u2019: close the connection;."
        },
        "ChainCert": {
            "type": "string",
            "description": "Chain Certificate (Chain Certificate Name)."
        },
        "ChainCertSharedStr": {
            "type": "string",
            "description": "Chain Certificate Name."
        },
        "ClassListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "ClientAuthCaseInsensitive": {
            "type": "number",
            "description": "Case insensitive forward proxy client auth bypass."
        },
        "ClientAuthClassList": {
            "type": "string",
            "description": "Forward proxy client auth bypass if SNI string matches class-list (Class List Name)."
        },
        "ClientCertificate": {
            "type": "string",
            "description": "\u2018Ignore\u2019: Don\u2019t request client certificate; \u2018Require\u2019: Require client certificate; \u2018Request\u2019: Request client certificate;."
        },
        "CloseNotify": {
            "type": "number",
            "description": "Send close notification when terminate connection."
        },
        "Dgversion": {
            "type": "number",
            "description": "Lower TLS/SSL version can be downgraded."
        },
        "DhType": {
            "type": "string",
            "description": "\u20181024\u2019: 1024; \u20181024-dsa\u2019: 1024-dsa; \u20182048\u2019: 2048;."
        },
        "DirectClientServerAuth": {
            "type": "number",
            "description": "Let backend server does SSL client authentication directly."
        },
        "DisableSslv3": {
            "type": "number",
            "description": "Reject Client requests for SSL version 3."
        },
        "EarlyData": {
            "type": "number"
        },
        "EnableTlsAlertLogging": {
            "type": "number",
            "description": "Enable TLS alert logging."
        },
        "ExceptionAdGroupList": {
            "type": "string",
            "description": "Exceptions to forward proxy bypass if ad-group matches class-list."
        },
        "ExceptionCertificateIssuerClName": {
            "type": "string",
            "description": "Exceptions to forward-proxy-bypass."
        },
        "ExceptionCertificateSanClName": {
            "type": "string",
            "description": "Exceptions to forward-proxy-bypass."
        },
        "ExceptionCertificateSubjectClName": {
            "type": "string",
            "description": "Exceptions to forward-proxy-bypass."
        },
        "ExceptionSniClName": {
            "type": "string",
            "description": "Exceptions to forward-proxy-bypass."
        },
        "ExceptionUserNameList": {
            "type": "string",
            "description": "Exceptions to forward proxy bypass if user-name matches class-list."
        },
        "ExpireHours": {
            "type": "number",
            "description": "Certificate lifetime in hours."
        },
        "ForwardEncrypted": {
            "type": "string",
            "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)."
        },
        "ForwardPassphrase": {
            "type": "string",
            "description": "Password Phrase."
        },
        "ForwardProxyAltSign": {
            "type": "number",
            "description": "Forward proxy alternate signing cert and key."
        },
        "ForwardProxyBlockMessage": {
            "type": "string",
            "description": "Message to be included on the block page (Message, enclose in quotes if spaces are present)."
        },
        "ForwardProxyCaCert": {
            "type": "string",
            "description": "CA Certificate for forward proxy (SSL forward proxy CA Certificate Name)."
        },
        "ForwardProxyCaKey": {
            "type": "string",
            "description": "CA Private Key for forward proxy (SSL forward proxy CA Key Name)."
        },
        "ForwardProxyCertCacheLimit": {
            "type": "number",
            "description": "Certificate cache size limit, default is 524288 (set to 0 for unlimited size)."
        },
        "ForwardProxyCertCacheTimeout": {
            "type": "number",
            "description": "Certificate cache timeout, default is 1 hour (seconds, set to 0 for never timeout)."
        },
        "ForwardProxyCertExpiry": {
            "type": "number",
            "description": "Adjust certificate expiry relative to the time when it is created on the device."
        },
        "ForwardProxyCertNotReadyAction": {
            "type": "string",
            "description": "\u2018bypass\u2019: bypass the connection; \u2018reset\u2019: reset the connection;."
        },
        "ForwardProxyCertRevokeAction": {
            "type": "number",
            "description": "Action taken if a certificate is irreversibly revoked, bypass SSLi processing by default."
        },
        "ForwardProxyCertUnknownAction": {
            "type": "number",
            "description": "Action taken if a certificate revocation status is unknown, bypass SSLi processing by default."
        },
        "ForwardProxyCrlDisable": {
            "type": "number",
            "description": "Disable Certificate Revocation List checking for forward proxy."
        },
        "ForwardProxyDecryptedDscp": {
            "type": "number",
            "description": "Apply a DSCP to decrypted and bypassed traffic (DSCP to apply to decrypted traffic)."
        },
        "ForwardProxyDecryptedDscpBypass": {
            "type": "number",
            "description": "DSCP to apply to bypassed traffic."
        },
        "ForwardProxyEnable": {
            "type": "number",
            "description": "Enable SSL forward proxy."
        },
        "ForwardProxyFailsafeDisable": {
            "type": "number",
            "description": "Disable Failsafe for SSL forward proxy."
        },
        "ForwardProxyLogDisable": {
            "type": "number",
            "description": "Disable SSL forward proxy logging."
        },
        "ForwardProxyNoSharedCipherAction": {
            "type": "number",
            "description": "Action taken if handshake fails due to no shared ciper, close the connection by default."
        },
        "ForwardProxyNoSniAction": {
            "type": "string",
            "description": "\u2018intercept\u2019: intercept in no SNI case; \u2018bypass\u2019: bypass in no SNI case; \u2018reset\u2019: reset in no SNI case;."
        },
        "ForwardProxyOcspDisable": {
            "type": "number",
            "description": "Disable ocsp-stapling for forward proxy."
        },
        "ForwardProxyRequireSniCertMatched": {
            "type": "string"
        },
        "ForwardProxySelfsignRedir": {
            "type": "number",
            "description": "Redirect connections to pages with self signed certs to a warning page."
        },
        "ForwardProxySslVersion": {
            "type": "number",
            "description": "TLS/SSL version, default is TLS1.2 (TLS/SSL version: 31-TLSv1.0, 32-TLSv1.1 and 33-TLSv1.2)."
        },
        "ForwardProxyVerifyCertFailAction": {
            "type": "number",
            "description": "Action taken if certificate verification fails, close the connection by default."
        },
        "FpAltCert": {
            "type": "string",
            "description": "CA Certificate for forward proxy alternate signing (Certificate name)."
        },
        "FpAltEncrypted": {
            "type": "string",
            "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)."
        },
        "FpAltKey": {
            "type": "string",
            "description": "CA Private Key for forward proxy alternate signing (Key name)."
        },
        "FpAltPassphrase": {
            "type": "string",
            "description": "Password Phrase."
        },
        "FpAltShared": {
            "type": "number"
        },
        "FpCaKeyShared": {
            "type": "number"
        },
        "FpCaShared": {
            "type": "number"
        },
        "FpCertExtAiaCaIssuers": {
            "type": "string",
            "description": "CA Issuers (Authority Information Access URI)."
        },
        "FpCertExtAiaOcsp": {
            "type": "string",
            "description": "OCSP (Authority Information Access URI)."
        },
        "FpCertExtCrldp": {
            "type": "string",
            "description": "CRL Distribution Point (CRL Distribution Point URI)."
        },
        "FpCertFetchAutonat": {
            "type": "string",
            "description": "\u2018auto\u2019: Configure auto NAT for server certificate fetching;."
        },
        "FpCertFetchAutonatPrecedence": {
            "type": "number",
            "description": "Set this NAT pool as higher precedence than other source NAT like configued under template policy."
        },
        "FpCertFetchNatpoolName": {
            "type": "string",
            "description": "Specify NAT pool or pool group."
        },
        "FpCertFetchNatpoolNameShared": {
            "type": "string",
            "description": "Specify NAT pool or pool group."
        },
        "FpCertFetchNatpoolPrecedence": {
            "type": "number",
            "description": "Set this NAT pool as higher precedence than other source NAT like configued under template policy."
        },
        "HandshakeLoggingEnable": {
            "type": "number",
            "description": "Enable SSL handshake logging."
        },
        "HsmType": {
            "type": "string",
            "description": "\u2018thales-embed\u2019: Thales embed key; \u2018thales-hwcrhk\u2019: Thales hwcrhk Key;."
        },
        "Id": {
            "type": "string"
        },
        "InspectCertificateIssuerClName": {
            "type": "string",
            "description": "Forward proxy Inspect if Certificate issuer matches class-list."
        },
        "InspectCertificateSanClName": {
            "type": "string",
            "description": "Forward proxy Inspect if Certificate Subject Alternative Name matches class-list."
        },
        "InspectCertificateSubjectClName": {
            "type": "string",
            "description": "Forward proxy Inspect if Certificate Subject matches class-list."
        },
        "InspectListName": {
            "type": "string",
            "description": "Class List Name."
        },
        "Key": {
            "type": "string"
        },
        "KeyAltEncrypted": {
            "type": "string",
            "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)."
        },
        "KeyAltPartitionShared": {
            "type": "number"
        },
        "KeyAltPassphrase": {
            "type": "string",
            "description": "Password Phrase."
        },
        "KeyAlternate": {
            "type": "string",
            "description": "Specify the second private key (Key Name)."
        },
        "KeyEncrypted": {
            "type": "string",
            "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)."
        },
        "KeyPassphrase": {
            "type": "string",
            "description": "Password Phrase."
        },
        "KeySharedEncrypted": {
            "type": "string",
            "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)."
        },
        "KeySharedPassphrase": {
            "type": "string",
            "description": "Password Phrase."
        },
        "KeySharedStr": {
            "type": "string",
            "description": "Key Name."
        },
        "LdapBaseDnFromCert": {
            "type": "number",
            "description": "Use Subject DN as LDAP search base DN."
        },
        "LdapSearchFilter": {
            "type": "string",
            "description": "Specify LDAP search filter."
        },
        "LocalLogging": {
            "type": "number",
            "description": "Enable local logging."
        },
        "Name": {
            "type": "string",
            "description": "Client SSL Template Name."
        },
        "NoAntiReplay": {
            "type": "number"
        },
        "NoSharedCipherAction": {
            "type": "string",
            "description": "\u2018bypass\u2019: bypass SSLi processing; \u2018drop\u2019: close the connection;."
        },
        "NonSslBypassL4session": {
            "type": "number",
            "description": "Handle the non-ssl session as L4 for performance optimization."
        },
        "NonSslBypassServiceGroup": {
            "type": "string",
            "description": "Service Group for Bypass non-ssl traffic (Service Group Name)."
        },
        "Notafter": {
            "type": "number",
            "description": "notAfter date."
        },
        "Notafterday": {
            "type": "number",
            "description": "Day."
        },
        "Notaftermonth": {
            "type": "number",
            "description": "Month."
        },
        "Notafteryear": {
            "type": "number",
            "description": "Year."
        },
        "Notbefore": {
            "type": "number",
            "description": "notBefore date."
        },
        "Notbeforeday": {
            "type": "number",
            "description": "Day."
        },
        "Notbeforemonth": {
            "type": "number",
            "description": "Month."
        },
        "Notbeforeyear": {
            "type": "number",
            "description": "Year."
        },
        "OcspStapling": {
            "type": "number",
            "description": "Config OCSP stapling support."
        },
        "OcspstCaCert": {
            "type": "string",
            "description": "CA certificate."
        },
        "OcspstOcsp": {
            "type": "number",
            "description": "Specify OCSP Authentication."
        },
        "OcspstSg": {
            "type": "string",
            "description": "Specify authentication service group."
        },
        "OcspstSgDays": {
            "type": "number",
            "description": "Specify update period, in days."
        },
        "OcspstSgHours": {
            "type": "number",
            "description": "Specify update period, in hours."
        },
        "OcspstSgMinutes": {
            "type": "number",
            "description": "Specify update period, in minutes."
        },
        "OcspstSgTimeout": {
            "type": "number",
            "description": "Specify retry timeout (Default is 30 mins)."
        },
        "OcspstSrvr": {
            "type": "string",
            "description": "Specify OCSP authentication server."
        },
        "OcspstSrvrDays": {
            "type": "number",
            "description": "Specify update period, in days."
        },
        "OcspstSrvrHours": {
            "type": "number",
            "description": "Specify update period, in hours."
        },
        "OcspstSrvrMinutes": {
            "type": "number",
            "description": "Specify update period, in minutes."
        },
        "OcspstSrvrTimeout": {
            "type": "number",
            "description": "Specify retry timeout (Default is 30 mins)."
        },
        "RenegotiationDisable": {
            "type": "number",
            "description": "Disable SSL renegotiation."
        },
        "RequireWebCategory": {
            "type": "number",
            "description": "Wait for web category to be resolved before taking bypass decision."
        },
        "ServerNameAutoMap": {
            "type": "number",
            "description": "Enable automatic mapping of server name indication in Client hello extension."
        },
        "SessionCacheSize": {
            "type": "number",
            "description": "Session Cache Size (Specify 0 to disable Session ID reuse.)."
        },
        "SessionCacheTimeout": {
            "type": "number",
            "description": "Session Cache Timeout (Timeout value, in seconds)."
        },
        "SessionTicketDisable": {
            "type": "number"
        },
        "SessionTicketLifetime": {
            "type": "number",
            "description": "Session ticket lieftime in seconds from stateless session resumption (Lifetime value in seconds)."
        },
        "SharedPartitionCipherTemplate": {
            "type": "number",
            "description": "Reference a cipher template from shared partition."
        },
        "SharedPartitionPool": {
            "type": "number",
            "description": "Reference a NAT pool or pool group from shared partition."
        },
        "SniEnableLog": {
            "type": "number",
            "description": "Enable logging of sni-auto-map failures. Disable by default."
        },
        "SslFalseStartDisable": {
            "type": "number",
            "description": "disable SSL False Start."
        },
        "SsliLogging": {
            "type": "number",
            "description": "SSLi logging level, default is error logging only."
        },
        "Sslilogging": {
            "type": "string",
            "description": "\u2018disable\u2019: Disable all logging; \u2018all\u2019: enable all logging(error, info);."
        },
        "Sslv2BypassServiceGroup": {
            "type": "string",
            "description": "Service Group for Bypass SSLV2 (Service Group Name)."
        },
        "TemplateCipher": {
            "type": "string",
            "description": "Cipher Template (Cipher Config Name)."
        },
        "TemplateCipherShared": {
            "type": "string",
            "description": "Cipher Template Name."
        },
        "TemplateHsm": {
            "type": "string",
            "description": "HSM Template (HSM Template Name)."
        },
        "UserNameList": {
            "type": "string",
            "description": "Forward proxy bypass if user-name matches class-list."
        },
        "UserTag": {
            "type": "string",
            "description": "Customized tag."
        },
        "Uuid": {
            "type": "string",
            "description": "uuid of the object."
        },
        "VerifyCertFailAction": {
            "type": "string",
            "description": "\u2018bypass\u2019: bypass SSLi processing; \u2018continue\u2019: continue the connection; \u2018drop\u2019: close the connection;."
        },
        "Version": {
            "type": "number",
            "description": "TLS/SSL version, default is the highest number supported (TLS/SSL version: 30-SSLv3.0, 31-TLSv1.0, 32-TLSv1.1 and 33-TLSv1.2)."
        },
        "BypassCertIssuerMultiClassList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BypassCertIssuerMultiClassListDefinition"
            }
        },
        "BypassCertSanMultiClassList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BypassCertSanMultiClassListDefinition"
            }
        },
        "BypassCertSubjectMultiClassList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BypassCertSubjectMultiClassListDefinition"
            }
        },
        "CaCerts": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CaCertsDefinition"
            }
        },
        "CertificateIssuerContainsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateIssuerContainsListDefinition"
            }
        },
        "CertificateIssuerEndsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateIssuerEndsWithListDefinition"
            }
        },
        "CertificateIssuerEqualsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateIssuerEqualsListDefinition"
            }
        },
        "CertificateIssuerStartsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateIssuerStartsWithListDefinition"
            }
        },
        "CertificateList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateListDefinition"
            }
        },
        "CertificateSanContainsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSanContainsListDefinition"
            }
        },
        "CertificateSanEndsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSanEndsWithListDefinition"
            }
        },
        "CertificateSanEqualsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSanEqualsListDefinition"
            }
        },
        "CertificateSanStartsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSanStartsWithListDefinition"
            }
        },
        "CertificateSubjectContainsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSubjectContainsListDefinition"
            }
        },
        "CertificateSubjectEndsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSubjectEndsWithListDefinition"
            }
        },
        "CertificateSubjectEqualsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSubjectEqualsListDefinition"
            }
        },
        "CertificateSubjectStartsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificateSubjectStartsWithListDefinition"
            }
        },
        "CipherWithoutPrioList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CipherWithoutPrioListDefinition"
            }
        },
        "ClientAuthContainsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClientAuthContainsListDefinition"
            }
        },
        "ClientAuthEndsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClientAuthEndsWithListDefinition"
            }
        },
        "ClientAuthEqualsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClientAuthEqualsListDefinition"
            }
        },
        "ClientAuthStartsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClientAuthStartsWithListDefinition"
            }
        },
        "ContainsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ContainsListDefinition"
            }
        },
        "CrlCerts": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CrlCertsDefinition"
            }
        },
        "EcList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EcListDefinition"
            }
        },
        "EndsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EndsWithListDefinition"
            }
        },
        "EqualsList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EqualsListDefinition"
            }
        },
        "ExceptionWebCategory": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExceptionWebCategoryDefinition"
            },
            "maxItems": 1
        },
        "ExceptionWebReputation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExceptionWebReputationDefinition"
            },
            "maxItems": 1
        },
        "ForwardProxyTrustedCaLists": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ForwardProxyTrustedCaListsDefinition"
            }
        },
        "MultiClassList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MultiClassListDefinition"
            }
        },
        "ReqCaLists": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ReqCaListsDefinition"
            }
        },
        "ServerNameList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServerNameListDefinition"
            }
        },
        "StartsWithList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StartsWithListDefinition"
            }
        },
        "WebCategory": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WebCategoryDefinition"
            },
            "maxItems": 1
        },
        "WebReputation": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WebReputationDefinition"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}