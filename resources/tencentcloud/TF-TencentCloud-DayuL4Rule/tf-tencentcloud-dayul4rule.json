{
    "typeName": "TF::TencentCloud::DayuL4Rule",
    "description": "Use this resource to create dayu layer 4 rule\n\n~> **NOTE:** This resource only support resource Anti-DDoS of type `bgpip` and `net`",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/tencentcloud/TF-TencentCloud-DayuL4Rule/docs/README.md",
    "definitions": {
        "SourceListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Source": {
                    "type": "string",
                    "description": "Source IP or domain, valid format of ip is like `1.1.1.1` and valid format of host source is like `abc.com`."
                },
                "Weight": {
                    "type": "number",
                    "description": "Weight of the source, the valid value ranges from 0 to 100."
                }
            },
            "required": [
                "Source",
                "Weight"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DPort": {
            "type": "number",
            "description": "The destination port of the L4 rule."
        },
        "HealthCheckHealthNum": {
            "type": "number",
            "description": "Health threshold of health check, and the default is 3. If a success result is returned for the health check 3 consecutive times, indicates that the forwarding is normal. The value range is 2-10."
        },
        "HealthCheckInterval": {
            "type": "number",
            "description": "Interval time of health check. The value range is 10-60 sec, and the default is 15 sec."
        },
        "HealthCheckSwitch": {
            "type": "boolean",
            "description": "Indicates whether health check is enabled. The default is `false`. Only valid when source list has more than one source item."
        },
        "HealthCheckTimeout": {
            "type": "number",
            "description": "HTTP Status Code. The default is 26 and value range is 2-60."
        },
        "HealthCheckUnhealthNum": {
            "type": "number",
            "description": "Unhealthy threshold of health check, and the default is 3. If the unhealthy result is returned 3 consecutive times, indicates that the forwarding is abnormal. The value range is 2-10."
        },
        "Id": {
            "type": "string"
        },
        "LbType": {
            "type": "number"
        },
        "Name": {
            "type": "string",
            "description": "Name of the rule. When the `resource_type` is `net`, this field should be set with valid domain."
        },
        "Protocol": {
            "type": "string",
            "description": "Protocol of the rule. Valid values: `http`, `https`. When `source_type` is 1(host source), the value of this field can only set with `tcp`."
        },
        "ResourceId": {
            "type": "string",
            "description": "ID of the resource that the layer 4 rule works for."
        },
        "ResourceType": {
            "type": "string",
            "description": "Type of the resource that the layer 4 rule works for. Valid values: `bgpip` and `net`."
        },
        "RuleId": {
            "type": "string"
        },
        "SPort": {
            "type": "number",
            "description": "The source port of the L4 rule."
        },
        "SessionSwitch": {
            "type": "boolean",
            "description": "Indicate that the session will keep or not, and default value is `false`."
        },
        "SessionTime": {
            "type": "number",
            "description": "Session keep time, only valid when `session_switch` is true, the available value ranges from 1 to 300 and unit is second."
        },
        "SourceType": {
            "type": "number",
            "description": "Source type, `1` for source of host, `2` for source of IP."
        },
        "SourceList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SourceListDefinition"
            },
            "maxItems": 20,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "DPort",
        "Name",
        "Protocol",
        "ResourceId",
        "ResourceType",
        "SPort",
        "SourceType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/LbType",
        "/properties/RuleId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}