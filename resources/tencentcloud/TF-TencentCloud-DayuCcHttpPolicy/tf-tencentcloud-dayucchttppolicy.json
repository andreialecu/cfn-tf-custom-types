{
    "typeName": "TF::TencentCloud::DayuCcHttpPolicy",
    "description": "Use this resource to create a dayu CC self-define http policy",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/tencentcloud/TF-TencentCloud-DayuCcHttpPolicy/docs/README.md",
    "definitions": {
        "RuleListDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Operator": {
                    "type": "string",
                    "description": "Operator of the rule. Valid values: `include`, `not_include`, `equal`."
                },
                "Skey": {
                    "type": "string",
                    "description": "Key of the rule. Valid values: `host`, `cgi`, `ua`, `referer`."
                },
                "Value": {
                    "type": "string",
                    "description": "Rule value, then length should be less than 31 bytes."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "Action mode, only valid when `smode` is `matching`. Valid values are `alg` and `drop`."
        },
        "CreateTime": {
            "type": "string"
        },
        "Frequency": {
            "type": "number",
            "description": "Max frequency per minute, only valid when `smode` is `speedlimit`, the valid value ranges from 1 to 10000."
        },
        "Id": {
            "type": "string"
        },
        "Ip": {
            "type": "string",
            "description": "Ip of the CC self-define http policy, only valid when `resource_type` is `bgp-multip`. The num of list items can only be set one."
        },
        "Name": {
            "type": "string",
            "description": "Name of the CC self-define http policy. Length should between 1 and 20."
        },
        "PolicyId": {
            "type": "string"
        },
        "ResourceId": {
            "type": "string",
            "description": "ID of the resource that the CC self-define http policy works for."
        },
        "ResourceType": {
            "type": "string",
            "description": "Type of the resource that the CC self-define http policy works for, valid values are `bgpip`, `bgp`, `bgp-multip` and `net`."
        },
        "Smode": {
            "type": "string",
            "description": "Match mode, and valid values are `matching`, `speedlimit`. Note: the speed limit type CC self-define policy can only set one."
        },
        "Switch": {
            "type": "boolean",
            "description": "Indicate the CC self-define http policy takes effect or not."
        },
        "RuleList": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RuleListDefinition"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "ResourceId",
        "ResourceType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreateTime",
        "/properties/Id",
        "/properties/PolicyId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}