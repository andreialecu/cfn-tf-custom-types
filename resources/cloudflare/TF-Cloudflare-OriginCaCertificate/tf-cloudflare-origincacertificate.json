{
    "typeName": "TF::Cloudflare::OriginCaCertificate",
    "description": "Provides a Cloudflare Origin CA certificate used to protect traffic to your origin without involving a third party Certificate Authority.\n\n**This resource requires you use your Origin CA Key as the [`api_user_service_key`](../index.html#api_user_service_key), in conjunction with an `api_token` or `email` and `api_key`.**",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cloudflare/TF-Cloudflare-OriginCaCertificate/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Certificate": {
            "type": "string"
        },
        "Csr": {
            "type": "string",
            "description": "The Certificate Signing Request. Must be newline-encoded."
        },
        "ExpiresOn": {
            "type": "string"
        },
        "Hostnames": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "An array of hostnames or wildcard names bound to the certificate."
        },
        "Id": {
            "type": "string"
        },
        "RequestType": {
            "type": "string",
            "description": "The signature type desired on the certificate."
        },
        "RequestedValidity": {
            "type": "number",
            "description": "The number of days for which the certificate should be valid."
        }
    },
    "additionalProperties": false,
    "required": [
        "Hostnames",
        "RequestType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Certificate",
        "/properties/ExpiresOn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}