{
    "typeName": "TF::GoogleBeta::GoogleComputePacketMirroring",
    "description": "CloudFormation equivalent of google_compute_packet_mirroring",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google-beta/TF-GoogleBeta-GoogleComputePacketMirroring/docs/README.md",
    "definitions": {
        "CollectorIlbDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "Url"
            ]
        },
        "FilterDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CidrRanges": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Direction": {
                    "type": "string"
                },
                "IpProtocols": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "MirroredResourcesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Tags": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Instances": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/InstancesDefinition"
                    }
                },
                "Subnetworks": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SubnetworksDefinition"
                    }
                }
            },
            "required": []
        },
        "NetworkDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "Url"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "InstancesDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "Url"
            ]
        },
        "SubnetworksDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "Url"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Priority": {
            "type": "number"
        },
        "Project": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "CollectorIlb": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CollectorIlbDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Filter": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/FilterDefinition"
            },
            "maxItems": 1
        },
        "MirroredResources": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MirroredResourcesDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Network": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}