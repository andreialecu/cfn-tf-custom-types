{
    "typeName": "TF::GoogleBeta::GoogleBigqueryConnection",
    "description": "CloudFormation equivalent of google_bigquery_connection",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google-beta/TF-GoogleBeta-GoogleBigqueryConnection/docs/README.md",
    "definitions": {
        "CloudSqlDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Database": {
                    "type": "string"
                },
                "InstanceId": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Credential": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/CredentialDefinition"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "Database",
                "InstanceId",
                "Type"
            ]
        },
        "TimeoutsDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "CredentialDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            },
            "required": [
                "Password",
                "Username"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ConnectionId": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "FriendlyName": {
            "type": "string"
        },
        "HasCredential": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Project": {
            "type": "string"
        },
        "CloudSql": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CloudSqlDefinition"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/TimeoutsDefinition"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/HasCredential",
        "/properties/Id",
        "/properties/Name"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    },
    "writeOnlyProperties": [
        "/definitions/CredentialDefinition/Password"
    ]
}