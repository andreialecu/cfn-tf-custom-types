{
    "typeName": "TF::Quorum::BootstrapDataDir",
    "description": "Use this resource to create a data dir locally. This equivalent to execute `geth init`.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/quorum/TF-Quorum-BootstrapDataDir/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DataDir": {
            "type": "string",
            "description": "Directory to intialize a genesis block\n- `genesis` - (Required) Genesis file content in JSON format\n- `instance_name` - (Optional) The instance name of the node. This must be the same as the value in geth node config. Default is `geth`."
        },
        "DataDirAbs": {
            "type": "string"
        },
        "Genesis": {
            "type": "string",
            "description": "Genesis file content in JSON format\n- `instance_name` - (Optional) The instance name of the node. This must be the same as the value in geth node config. Default is `geth`."
        },
        "Id": {
            "type": "string"
        },
        "InstanceName": {
            "type": "string",
            "description": "The instance name of the node. This must be the same as the value in geth node config. Default is `geth`."
        }
    },
    "additionalProperties": false,
    "required": [
        "DataDir",
        "Genesis"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/DataDirAbs",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}