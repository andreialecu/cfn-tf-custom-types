{
    "typeName": "TF::ACI::FilterEntry",
    "description": "CloudFormation equivalent of aci_filter_entry",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aci/TF-ACI-FilterEntry/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Annotation": {
            "type": "string"
        },
        "ApplyToFrag": {
            "type": "string"
        },
        "ArpOpc": {
            "type": "string"
        },
        "DFromPort": {
            "type": "string"
        },
        "DToPort": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "EtherT": {
            "type": "string"
        },
        "FilterDn": {
            "type": "string"
        },
        "Icmpv4T": {
            "type": "string"
        },
        "Icmpv6T": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "MatchDscp": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "NameAlias": {
            "type": "string"
        },
        "Prot": {
            "type": "string"
        },
        "SFromPort": {
            "type": "string"
        },
        "SToPort": {
            "type": "string"
        },
        "Stateful": {
            "type": "string"
        },
        "TcpRules": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "FilterDn",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}