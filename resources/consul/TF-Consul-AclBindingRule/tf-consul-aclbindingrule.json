{
    "typeName": "TF::Consul::AclBindingRule",
    "description": "Starting with Consul 1.5.0, the consul_acl_binding_rule resource can be used to\nmanaged Consul ACL binding rules.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/consul/TF-Consul-AclBindingRule/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthMethod": {
            "type": "string",
            "description": "The name of the ACL auth method this rule apply."
        },
        "BindName": {
            "type": "string",
            "description": "The name to bind to a token at login-time."
        },
        "BindType": {
            "type": "string",
            "description": "Specifies the way the binding rule affects a token\ncreated at login."
        },
        "Description": {
            "type": "string",
            "description": "A free form human readable description of the\nbinding rule."
        },
        "Id": {
            "type": "string"
        },
        "Namespace": {
            "type": "string",
            "description": "The namespace to create the binding\nrule within."
        },
        "Selector": {
            "type": "string",
            "description": "The expression used to math this rule against valid\nidentities returned from an auth method validation."
        }
    },
    "additionalProperties": false,
    "required": [
        "AuthMethod",
        "BindName",
        "BindType"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}