{
    "typeName": "TF::Consul::Intention",
    "description": "[Intentions](https://www.consul.io/docs/connect/intentions.html) are used to define\nrules for which services may connect to one another when using [Consul Connect](https://www.consul.io/docs/connect/index.html).\n\nIt is appropriate to either reference existing services or specify non-existent services\nthat will be created in the future when creating intentions. This resource can be used\nin conjunction with the `consul_service` datasource when referencing services\nregistered on nodes that have a running Consul agent.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/consul/TF-Consul-Intention/docs/README.md",
    "definitions": {
        "MetaDefinition": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MapKey": {
                    "type": "string"
                },
                "MapValue": {
                    "type": "string"
                }
            },
            "required": [
                "MapKey",
                "MapValue"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string",
            "description": "The intention action. Must be one of `allow` or `deny`."
        },
        "Datacenter": {
            "type": "string",
            "description": "The datacenter to use. This overrides the\nagent's default datacenter and the datacenter in the provider setup."
        },
        "Description": {
            "type": "string",
            "description": "Optional description that can be used by Consul\ntooling, but is not used internally."
        },
        "DestinationName": {
            "type": "string",
            "description": "The name of the destination service for the intention. This\nservice does not have to exist."
        },
        "DestinationNamespace": {
            "type": "string",
            "description": "The destination\nnamespace of the intention."
        },
        "Id": {
            "type": "string"
        },
        "Meta": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/MetaDefinition"
            },
            "description": "Key/value pairs that are opaque to Consul and are associated\nwith the intention."
        },
        "SourceName": {
            "type": "string",
            "description": "The name of the source service for the intention. This\nservice does not have to exist."
        },
        "SourceNamespace": {
            "type": "string",
            "description": "The source namespace of the\nintention."
        }
    },
    "additionalProperties": false,
    "required": [
        "Action",
        "DestinationName",
        "SourceName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": [
                "s3:GetObject",
                "s3:ListBucket"
            ]
        }
    }
}